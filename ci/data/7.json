[{"startedTestsAt":"2021-01-12T13:40:30.219Z","endedTestsAt":"2021-01-12T13:51:11.104Z","totalDuration":555765,"totalSuites":56,"totalTests":113,"totalFailed":0,"totalPassed":113,"totalPending":0,"totalSkipped":0,"runs":[{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":35635,"startedAt":"2021-01-12T13:40:30.219Z","endedAt":"2021-01-12T13:41:05.854Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:40:30.224Z","end":"2021-01-12T13:41:05.890Z","duration":35666},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n      cy.step('Import snapshot');\n\n      var workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n\n      cy.step('Start spying on collection update path');\n\n      _cypressAppControls.server.spy('PUT', _cypressAppControls.server.paths.cmsCollections).as('update-collection');\n\n      cy.step('Open CMS -> \"Car\" collection');\n      var cmsTab = workspace.getLeftSidebar().clickCMSButton();\n      carTab = cmsTab.getCollectionByName('Cars');\n      cy.step('Go to Collection Settings');\n      collectionSettings = carTab.clickSettingsButton();\n      cy.step('Add new field');\n      fieldSettings = collectionSettings.clickAddFieldButton();\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Multi-image field","Create and Delete multi-image field","adds a Multi-image field field type to a collection"],"state":"passed","body":"function () {\n      var newMultiImageFieldName = _faker[\"default\"].lorem.word(10);\n\n      if (newMultiImageFieldName === 'id') {\n        newMultiImageFieldName += 's';\n      }\n\n      cy.step('Choose Multi-image field');\n      var form = fieldSettings.clickOption('SetImageRef');\n      cy.step(\"Set multi-image field name to \".concat(newMultiImageFieldName));\n      form.fill({\n        label: newMultiImageFieldName,\n        helpText: _faker[\"default\"].lorem.words(3)\n      }).clickSaveButton();\n      cy.step('Click Save Collection button');\n      collectionSettings.clickSaveCollectionButton();\n      cy.step('Await for the api response and confirmation collection was updated');\n      cy.wait('@update-collection').then(function (xhr) {\n        expect(xhr.requestBody.fields.some(function (field) {\n          return field.type === 'Set' && field.innerType === 'ImageRef' && field.name === newMultiImageFieldName;\n        })).to.be[\"true\"];\n        expect(xhr.status).to.equal(200);\n      });\n      collectionSettings.getName().should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14705,"startedAt":"2021-01-12T13:40:37.703Z","screenshots":[]}]},{"title":["Multi-image field","Create and Delete multi-image field","removes a Multi-image field field type from a collection"],"state":"passed","body":"function () {\n      var name = _faker[\"default\"].random.word();\n\n      var newMultiImageFieldName = _faker[\"default\"].lorem.word(10);\n\n      if (newMultiImageFieldName === 'id') {\n        newMultiImageFieldName += 's';\n      }\n\n      cy.step('Choose Multi-image field');\n      var form = fieldSettings.clickOption('SetImageRef');\n      cy.step(\"Set multi-image field name to \".concat(newMultiImageFieldName));\n      form.fill({\n        label: name,\n        helpText: _faker[\"default\"].lorem.words(3)\n      }).clickSaveButton();\n      cy.step('Click Save Collection button');\n      collectionSettings.clickSaveCollectionButton();\n      cy.step('Await for the api response and confirmation collection was updated');\n      cy.wait('@update-collection').then(function (xhr) {\n        expect(xhr.requestBody.fields.some(function (field) {\n          return field.type === 'Set' && field.innerType === 'ImageRef' && field.name === name;\n        }), \"Field \".concat(name, \" of type 'ImageRef' to be created\")).to.be[\"true\"];\n        expect(xhr.status).to.equal(200);\n      });\n      collectionSettings.getName().should('not.exist');\n      cy.step('Go to Collection Settings');\n      collectionSettings = carTab.clickSettingsButton();\n      cy.step(\"Find field: \".concat(name));\n      fieldSettings = collectionSettings.clickCustomField(name);\n      cy.step(\"Remove field \".concat(name));\n      fieldSettings.remove();\n      cy.step('Save collection');\n      collectionSettings.clickSaveCollectionButton();\n      cy.step('Await for the api response and confirmation collection was updated');\n      cy.wait('@update-collection').then(function (xhr) {\n        expect(xhr.requestBody.fields.some(function (field) {\n          return field.name === name;\n        })).to.be[\"false\"];\n        expect(xhr.status).to.equal(200);\n      });\n      collectionSettings.getName().should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13423,"startedAt":"2021-01-12T13:40:52.419Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-multi-image-01.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-multi-image-01.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-multi-image-01.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":3,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":40031,"startedAt":"2021-01-12T13:41:12.554Z","endedAt":"2021-01-12T13:41:52.585Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":3,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:41:12.557Z","end":"2021-01-12T13:41:52.602Z","duration":40045},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n      cy.step('Import snapshot');\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n      cy.step('Go to collection Car and choose Qui Labore item');\n      itemListPane = workspace.getLeftSidebar().clickCMSButton().getCollectionByName('Cars').clickCollectionTab();\n      itemListPane.clickCollectionItem('Qui Labore');\n      cy.step('Start spying on collection item update and get paths');\n\n      _cypressAppControls.server.spy('PUT', _cypressAppControls.server.paths.cmsItems).as('update-item');\n\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.cmsItems).as('get-item');\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Multi-image field","Editing Multi-image value","closing an Alt text popover","blurs a focused Alt text input but keeps the popover open - closes the popover on the next Esc key press"],"state":"passed","body":"function () {\n        cy.step('First blurs the focused input field');\n        openAltPopover(0);\n        cy.focused().type('{esc}');\n        cy.focused().should('not.exist');\n        assertAltPopoverOpen();\n        cy.step('Then closes popover on the next Esc press');\n        cy.get('body').type('{esc}');\n        assertAltPopoverClosed();\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13400,"startedAt":"2021-01-12T13:41:17.808Z","screenshots":[]}]},{"title":["Multi-image field","Editing Multi-image value","closing an Alt text popover","closes the popover when clicking outside the popover"],"state":"passed","body":"function () {\n        cy.step('Open alt popover of the first image');\n        openAltPopover(0);\n        cy.step('Clicking inside the Alt popover does not close it');\n        cy.focused().parent().click();\n        assertAltPopoverOpen();\n        cy.step('Closes the Alt popover when clicking outside the popover');\n        cy.get('body').click();\n        assertAltPopoverClosed();\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10614,"startedAt":"2021-01-12T13:41:31.219Z","screenshots":[]}]},{"title":["Multi-image field","Editing Multi-image value","closing an Alt text popover","closes the Alt popover when pressing enter on a focused Alt input field"],"state":"passed","body":"function () {\n        cy.step('Open alt popover of the first image');\n        openAltPopover(0);\n        cy.step('Pressing Enter when an input is not focused should not close the popover');\n        cy.getByDataAutomationId('multi-image-field-image-alt-popover').find('input').blur();\n        cy.get('body').type('{enter}');\n        assertAltPopoverOpen();\n        cy.step('Pressing Enter on a focused input closes the popover');\n        cy.getByDataAutomationId('multi-image-field-image-alt-popover').find('input').focus().type('{enter}');\n        assertAltPopoverClosed();\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10729,"startedAt":"2021-01-12T13:41:41.843Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-multi-image-02.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-multi-image-02.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-multi-image-02.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":5,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":47579,"startedAt":"2021-01-12T13:42:02.769Z","endedAt":"2021-01-12T13:42:50.348Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":5,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:42:02.776Z","end":"2021-01-12T13:42:50.362Z","duration":47586},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    cy.step('Import snapshot');\n\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n    cy.step('Go to collection Car and choose Qui Labore item');\n    itemListPane = workspace.getLeftSidebar().clickCMSButton().getCollectionByName('Cars').clickCollectionTab();\n    itemEditPane = itemListPane.clickCollectionItem('Qui Labore');\n    cy.step('Start spying on collection item update and get paths');\n\n    _cypressAppControls.server.spy('PUT', _cypressAppControls.server.paths.cmsItems).as('update-item');\n\n    _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.cmsItems).as('get-item');\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Multi-image field","editing the Alt text","edits the Alt text to a Multi-image image"],"state":"passed","body":"function () {\n      var altText = _faker[\"default\"].random.word();\n\n      cy.step('Open alt popover of the first image');\n      openAltPopover(0);\n      cy.step('Type alt text');\n      cy.focused().clear().type(\"\".concat(altText, \"{enter}\"));\n      cy.step('Save alt text');\n      itemEditPane.clickSaveButton();\n      cy.step('Await item to be updated and contain new alt text');\n      cy.wait('@update-item').then(function (xhr) {\n        expect(xhr.requestBody.fields.gallery[0].alt).to.equal(altText);\n        expect(xhr.status).to.equal(202);\n        return new Response(xhr.responseBody).json();\n      }).then(function (json) {\n        expect(json.updated_item.gallery[0].alt).to.equal(altText);\n      });\n      cmsItemPanel = workspace.getLeftSidebar().getCMSTab().getCollectionByName('Cars').getContainer();\n      cmsItemPanel.should('not.exist');\n      cy.step('Go back to Qui Labore item');\n      itemEditPane = itemListPane.clickCollectionItem('Qui Labore');\n      cy.step('Clear the Alt text');\n      openAltPopover(0);\n      cy.focused().should('have.value', altText).clear().type('{enter}');\n      cy.step('Save empty alt text');\n      itemListPane = itemEditPane.clickSaveButton();\n      cy.step('Await item to be updated and contain new alt text');\n      cy.wait('@update-item').then(function (xhr) {\n        expect(xhr.requestBody.fields.gallery[0].alt).to.equal(null);\n        expect(xhr.status).to.equal(202);\n        return new Response(xhr.responseBody).json();\n      }).then(function (json) {\n        expect(json.updated_item.gallery[0].alt).to.equal(null);\n      });\n      itemEditPane.getContainer('Qui Labore').should('not.exist');\n      cmsItemPanel.should('not.exist');\n      cy.step('Go back to Qui Labore item');\n      itemEditPane = itemListPane.clickCollectionItem('Qui Labore');\n      cy.step('Open alt popover of the first image');\n      openAltPopover(0);\n      cy.focused().should('have.value', '').type('{enter}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":18030,"startedAt":"2021-01-12T13:42:09.726Z","screenshots":[]}]},{"title":["Multi-image field","deleting image from Multi-image field","when saving an item as draft","deletes the image"],"state":"passed","body":"function () {\n        cy.step('Find image');\n        cy.contains(/car-front\\.jpg/i).should('be.visible');\n        cy.step('Remove it');\n        deleteImage(1);\n        cy.step(\"Assert it's no longer visible\");\n        cy.contains(/car-front\\.jpg/i).should('not.exist');\n        cy.step('Save the item as draft');\n        cy.getByDataAutomationId('item-edit-pane-dropdown').click();\n        cy.get('#save-as-draft-option').click();\n        cy.step('Await for the api response and confirmation item was updated');\n        cy.wait('@update-item').then(function (xhr) {\n          expect(xhr.requestBody.fields.gallery.map(function (_ref) {\n            var fileName = _ref.file.fileName;\n            return fileName.replace(/^.+_/, '');\n          })).to.deep.equal(['car-side.jpg', 'car-angle.jpg']);\n          expect(xhr.status).to.equal(202);\n          return new Response(xhr.responseBody).json();\n        }).then(function (json) {\n          expect(json.updated_item.gallery.map(function (_ref2) {\n            var fileName = _ref2.file.fileName;\n            return fileName.replace(/^.+_/, '');\n          })).to.deep.equal(['car-side.jpg', 'car-angle.jpg']);\n        }); // cmsItemPanel.should('not.be.visible');\n\n        cy.step('Get back to Qui Labore item');\n        itemEditPane = itemListPane.clickCollectionItem('Qui Labore');\n        cy.step(\"Assert that the image doesn't exist\");\n        cy.contains(/car-front\\.jpg/i).should('not.exist');\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12064,"startedAt":"2021-01-12T13:42:27.781Z","screenshots":[]}]},{"title":["Multi-image field","deleting image from Multi-image field","when saving an item","deletes the image"],"state":"passed","body":"function () {\n        cy.step('Find image');\n        cy.contains(/car-front\\.jpg/i).should('be.visible');\n        cy.step('Remove it');\n        deleteImage(1);\n        cy.step(\"Assert it's no longer visible\");\n        cy.contains(/car-front\\.jpg/i).should('not.exist');\n        cy.step('Save the item');\n        itemListPane = itemEditPane.clickSaveButton();\n        cy.step('Await for the api response and confirmation item was updated');\n        cy.wait('@update-item').then(function (xhr) {\n          expect(xhr.requestBody.fields.gallery.map(function (_ref3) {\n            var fileName = _ref3.file.fileName;\n            return fileName.replace(/^.+_/, '');\n          })).to.deep.equal(['car-side.jpg', 'car-angle.jpg']);\n          expect(xhr.status).to.equal(202);\n          return new Response(xhr.responseBody).json();\n        }).then(function (json) {\n          expect(json.updated_item.gallery.map(function (_ref4) {\n            var fileName = _ref4.file.fileName;\n            return fileName.replace(/^.+_/, '');\n          })).to.deep.equal(['car-side.jpg', 'car-angle.jpg']);\n        }); // cmsItemPanel.should('not.be.visible');\n\n        cy.step('Get back to Qui Labore item');\n        itemEditPane = itemListPane.clickCollectionItem('Qui Labore');\n        cy.step(\"Assert that the image doesn't exist\");\n        cy.contains(/car-front\\.jpg/i).should('not.exist');\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10476,"startedAt":"2021-01-12T13:42:39.857Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-multi-image-03.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-multi-image-03.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-multi-image-03.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":4,"passes":4,"pending":0,"skipped":0,"failures":0,"duration":60000,"startedAt":"2021-01-12T13:42:57.347Z","endedAt":"2021-01-12T13:43:57.347Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":4,"passes":4,"pending":0,"failures":0,"start":"2021-01-12T13:42:57.352Z","end":"2021-01-12T13:43:57.361Z","duration":60009},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n\n    _cypressAppControls.api.upgradePlan();\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    cy.step('Import snapshot');\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n    sidebar = workspace.getLeftSidebar();\n    itemListPane = sidebar.clickCMSButton().getCollectionByName('Cars').clickCollectionTab();\n    itemEditPane = itemListPane.clickCollectionItem('Qui Labore');\n    cy.step('Start spying on collection item update and get paths');\n\n    _cypressAppControls.server.spy('PUT', _cypressAppControls.server.paths.cmsItems).as('update-item');\n\n    _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.cmsItems).as('get-item');\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Multi-image field Reordering","can reorder images"],"state":"passed","body":"function () {\n    var newImageOrder;\n    verifyImageOrder('Gallery', initialImageOrder);\n    moveImage('Gallery', 0, 1);\n    newImageOrder = arrayMove(initialImageOrder, 0, 1);\n    verifyImageOrder('Gallery', newImageOrder);\n    moveImage('Gallery', 2, 0);\n    newImageOrder = arrayMove(newImageOrder, 2, 0);\n    verifyImageOrder('Gallery', newImageOrder);\n    moveImage('Gallery', 2, 1);\n    newImageOrder = arrayMove(newImageOrder, 2, 1);\n    verifyImageOrder('Gallery', newImageOrder);\n    moveImage('Gallery', 1, 2);\n    newImageOrder = arrayMove(newImageOrder, 1, 2);\n    verifyImageOrder('Gallery', newImageOrder);\n    moveImage('Gallery', 1, 0);\n    newImageOrder = arrayMove(newImageOrder, 1, 0);\n    verifyImageOrder('Gallery', newImageOrder);\n    moveImage('Gallery', 0, 2);\n    newImageOrder = arrayMove(newImageOrder, 0, 2);\n    verifyImageOrder('Gallery', newImageOrder);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":17724,"startedAt":"2021-01-12T13:43:02.674Z","screenshots":[]}]},{"title":["Multi-image field Reordering","does not persist changed order if item is not saved"],"state":"passed","body":"function () {\n    cy.step('Move first Gallery image to the middle.');\n    verifyImageOrder('Gallery', initialImageOrder);\n    moveImage('Gallery', 0, 1);\n    verifyImageOrder('Gallery', arrayMove(initialImageOrder, 0, 1));\n    cy.step('Discard changes');\n    itemEditPane.clickCancelButton();\n    cy.getByDataAutomationId('unsaved-changes-confirm-modal').within(function () {\n      cy.getByDataAutomationId('discard-changes').trigger('click');\n    });\n    workspace.getLeftSidebar().getCMSTab().getCollectionByName('Cars').getContainer().should('not.exist');\n    cy.step('Get back to Qui Labore item');\n    itemEditPane = itemListPane.clickCollectionItem('Qui Labore');\n    cy.step('Verify Gallery images are in initial order.');\n    verifyImageOrder('Gallery', initialImageOrder);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11781,"startedAt":"2021-01-12T13:43:20.437Z","screenshots":[]}]},{"title":["Multi-image field Reordering","persists changed order if item is saved"],"state":"passed","body":"function () {\n    cy.step('Move first Gallery image to the middle.');\n    verifyImageOrder('Gallery', initialImageOrder);\n    var expectedImageOrder = arrayMove(initialImageOrder, 0, 1);\n    moveImage('Gallery', 0, 1);\n    verifyImageOrder('Gallery', expectedImageOrder);\n    cy.step('Save the item');\n    itemListPane = itemEditPane.clickSaveButton();\n    cy.step('Await for the api response and confirmation item was updated');\n    cy.wait('@update-item').then(function (xhr) {\n      expect(xhr.requestBody.fields.gallery.map(function (_ref) {\n        var fileName = _ref.file.fileName;\n        return fileName.replace(/^.+_/, '');\n      })).to.deep.equal(expectedImageOrder);\n      expect(xhr.status).to.equal(202);\n      return new Response(xhr.responseBody).json();\n    }).then(function (json) {\n      expect(json.updated_item.gallery.map(function (_ref2) {\n        var fileName = _ref2.file.fileName;\n        return fileName.replace(/^.+_/, '');\n      })).to.deep.equal(expectedImageOrder);\n    });\n    workspace.getLeftSidebar().getCMSTab().getCollectionByName('Cars').getContainer().should('not.exist');\n    cy.step('Get back to Qui Labore item');\n    itemEditPane = itemListPane.clickCollectionItem('Qui Labore');\n    cy.step('Verify Gallery images are in initial order.');\n    verifyImageOrder('Gallery', expectedImageOrder);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14038,"startedAt":"2021-01-12T13:43:32.242Z","screenshots":[]}]},{"title":["Multi-image field Reordering","can remove deleted tiles from view after invalid drop"],"state":"passed","body":"function () {\n    cy.step('Drop the middle image onto itself.');\n    verifyImageOrder('Gallery', initialImageOrder);\n    moveImage('Gallery', 1, 1);\n    verifyImageOrder('Gallery', initialImageOrder);\n    cy.step('Remove the third image');\n    deleteImage(2);\n    cy.step(\"Assert it's no longer visible\");\n    cy.contains(/car-angle\\.jpg/i).should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11040,"startedAt":"2021-01-12T13:43:46.294Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-multi-image-reorder.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-multi-image-reorder.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-multi-image-reorder.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":39758,"startedAt":"2021-01-12T13:44:07.593Z","endedAt":"2021-01-12T13:44:47.351Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:44:07.602Z","end":"2021-01-12T13:44:47.391Z","duration":39789},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    var workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n\n    cy.server(); // Eat these requests\n\n    cy.route({\n      method: 'PUT',\n      url: /\\/api\\/sites\\/.+\\/uistate/i,\n      status: 200,\n      response: {}\n    });\n    var cmsTab = workspace.getLeftSidebar().clickCMSButton();\n    cmsSettings = cmsTab.getCollectionByName('Cars').clickSettingsButton();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Disabled reference fields","disabled field and multi-ref fields"],"state":"passed","body":"function () {\n    var field = cmsSettings.clickAddFieldButton(); // Add 5 ref fields, this should then make ref and multi-ref disabled\n\n    var i = 0;\n\n    while (i < 5) {\n      field.clickOption('ItemRef').fill({\n        label: _faker[\"default\"].random.words(2),\n        helpText: _faker[\"default\"].random.words(5),\n        reference: 'Cars'\n      }).clickSaveButton();\n      cmsSettings.clickAddFieldButton();\n      i++;\n    }\n\n    cy.getByDataAutomationId('cms-field-type-ItemRef-button').should('have.attr', 'disabled');\n    cy.getByDataAutomationId('cms-field-type-ItemRefSet-button').should('have.attr', 'disabled');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":33249,"startedAt":"2021-01-12T13:44:14.097Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-ref-fields.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-ref-fields.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-ref-fields.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":6,"passes":6,"pending":0,"skipped":0,"failures":0,"duration":45840,"startedAt":"2021-01-12T13:44:54.453Z","endedAt":"2021-01-12T13:45:40.293Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":6,"passes":6,"pending":0,"failures":0,"start":"2021-01-12T13:44:54.456Z","end":"2021-01-12T13:45:40.297Z","duration":45841},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.simpleListItems);\n    sidebar = workspace.getLeftSidebar();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    _cypressAppControls.api.restoreSnapshotViaAPI(_cypressAppControls.snapshots.CMS.simpleListItems, true).then(function (siteSlug) {\n      _cypressAppControls.api.setSitePlan(siteSlug, 'cms').then(function () {\n        cy.reload();\n        workspace = _cypressAppControls.api.waitForDesigner();\n        sidebar = workspace.getLeftSidebar();\n      });\n    });\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Scheduled Publishing with free plan","can nott schedule an item without the right hosting plan"],"state":"passed","body":"function () {\n    cy.step('publish the site to enable scheduled publishing');\n    workspace.getTopbar().clickPublishButton().clickPublishSelectedDomainsButton().waitUntilDonePublishing().then(function () {\n      cy.getByDataAutomationId('close-publish-dropdown-button').trigger('click');\n      cmsTab = sidebar.clickCMSButton();\n      cmsTab.getCollectionByName('Items').clickCollectionTab();\n      cy.step('create new item and try to schedule');\n      cy.getByDataAutomationId('cms-add-item-button').click();\n      cy.getByDataAutomationId('dyn-item-name-input').type('My new scheduled project');\n      cy.step('try to schedule the item');\n      cy.getByDataAutomationId('item-edit-pane-dropdown').eq(0).click();\n      cy.step('assert schedule option is disabled');\n      cy.getByDataAutomationId('open-schedule-picker-option').should('have.class', 'bem-Menu_Item-disabled');\n      cy.getByDataAutomationId('cms-panel-top-close-button').click();\n      cy.getByDataAutomationId('discard-changes').click();\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":17775,"startedAt":"2021-01-12T13:44:59.295Z","screenshots":[]}]},{"title":["Scheduled Publishing with allowed plan","can schedule an item"],"state":"passed","body":"function () {\n    _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.itemCreation).as('create-item');\n\n    _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.itemScheduled).as('schedule-item');\n\n    _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.cmsItems).as('get-item');\n\n    cy.step('publish the site to enable scheduled publishing');\n    workspace.getTopbar().clickPublishButton().clickPublishSelectedDomainsButton().waitUntilDonePublishing().then(function () {\n      cy.getByDataAutomationId('close-publish-dropdown-button').trigger('click');\n      cmsTab = sidebar.clickCMSButton();\n      var cmsItems = cmsTab.getCollectionByName('Items').clickCollectionTab();\n      cy.step('create new item and schedule');\n      cy.getByDataAutomationId('cms-add-item-button').click();\n      cy.getByDataAutomationId('dyn-item-name-input').type('Item to schedule');\n      cy.getByDataAutomationId('item-edit-pane-dropdown').click();\n      cy.getByDataAutomationId('open-schedule-picker-option').click();\n      cy.step('assert schedule picker is opened');\n      cy.getByDataAutomationId('schedule-picker').should('be.visible');\n      cy.step('assert that timezone note appears');\n      cy.getByDataAutomationId('sp-timezone-note').should('be.visible');\n      cy.step('increment month');\n      cy.getByDataAutomationId('date-picker-increment-month').click();\n      cy.get('.bem-DatePicker_Days > div.bem-DatePicker_Day-activeCurrentMonth:first').click();\n      cy.getByDataAutomationId('schedule-picker-button').click();\n      cy.step('assert item was created');\n      cy.wait('@create-item').then(function (xhr) {\n        expect(xhr.status).to.equal(201);\n      });\n      cy.wait('@get-item').then(function (xhr) {\n        expect(xhr.status).to.equal(200);\n      });\n      cy.step('Assert that the item manager panel is not visible');\n      cmsItems.getNode().should('not.exist');\n      cy.step('Assert that the top item has the name \"Item to schedule\"');\n      cmsItems.getItemListRow().eq(0).within(function () {\n        cmsItems.getItemColumn().eq(0).should('contain', 'Item to schedule');\n      });\n      cy.step('assert item was scheduled');\n      cy.wait('@schedule-item').then(function (xhr) {\n        expect(xhr.status).to.equal(201);\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":15923,"startedAt":"2021-01-12T13:45:17.104Z","screenshots":[]}]},{"title":["Scheduled Publishing with allowed plan","scheduled items waring modal displayed when attempting to change collection schema with scheduled items"],"state":"passed","body":"function () {\n    var itemsSettings = cmsTab.getCollectionByName('Items').clickSettingsButton();\n    cy.step('change collection name');\n    cy.get('.bem-TextInput').first().click().type('New Items');\n    itemsSettings.clickSaveCollectionButton();\n    cy.step('assert collection settings changes waring modal is displayed');\n    cy.getByDataAutomationId('collection-settings-changed-confirm-modal').should('be.visible');\n    cy.getByDataAutomationId('cancel').click();\n    itemsSettings.clickCancelCollectionButton();\n    cy.getByDataAutomationId('discard-changes').click();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1556,"startedAt":"2021-01-12T13:45:33.043Z","screenshots":[]}]},{"title":["Scheduled Publishing with allowed plan","can re-schedule an item"],"state":"passed","body":"function () {\n    _cypressAppControls.server.spy('PUT', _cypressAppControls.server.paths.itemRescheduled).as('reschedule-item');\n\n    cy.step('select scheduled item');\n    cy.getByDataAutomationId('item-column').eq(0).click();\n    cy.getByDataAutomationId('item-edit-pane-dropdown').click();\n    cy.getByDataAutomationId('open-schedule-picker-option').click();\n    cy.step('assert schedule picker is opened');\n    cy.getByDataAutomationId('schedule-picker').should('be.visible');\n    cy.step('increment month');\n    cy.getByDataAutomationId('date-picker-increment-month').click();\n    cy.get('.bem-DatePicker_Days > div.bem-DatePicker_Day-activeCurrentMonth:last').click();\n    cy.getByDataAutomationId('schedule-picker-button').click().then(function () {\n      cy.step('assert item was rescheduled');\n      cy.wait('@reschedule-item', {\n        timeout: 30000\n      }).then(function (xhr) {\n        expect(xhr.status).to.equal(200);\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1694,"startedAt":"2021-01-12T13:45:34.608Z","screenshots":[]}]},{"title":["Scheduled Publishing with allowed plan","can stage for publish a scheduled item"],"state":"passed","body":"function () {\n    _cypressAppControls.server.spy('DELETE', _cypressAppControls.server.paths.itemRescheduled).as('unschedule-item');\n\n    cy.step('select scheduled item');\n    cy.getByDataAutomationId('item-column').eq(0).click();\n    cy.getByDataAutomationId('item-edit-pane-dropdown').click();\n    cy.getByDataAutomationId('stage-for-publish-option').click();\n    cy.step('assert item was unscheduled');\n    cy.wait('@unschedule-item', {\n      timeout: 30000\n    }).then(function (xhr) {\n      expect(xhr.status).to.equal(204);\n    });\n    cy.step('assert item is now stage for publish');\n    cy.getByDataAutomationId('cms-item-row').eq(0).should('contain', 'Staged for Publish');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1314,"startedAt":"2021-01-12T13:45:36.303Z","screenshots":[]}]},{"title":["Scheduled Publishing with allowed plan","can't schedule an already published item"],"state":"passed","body":"function () {\n    _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.itemPublished).as('publish-item');\n\n    _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.createCategory).as('publish-complete');\n\n    cy.step('create new item and publish');\n    cy.getByDataAutomationId('cms-add-item-button').click();\n    cy.getByDataAutomationId('dyn-item-name-input').type('Item to single item publish');\n    cy.getByDataAutomationId('item-edit-pane-dropdown').click();\n    cy.getByDataAutomationId('single-item-publish').click();\n    cy.wait(['@publish-item']).then(function (xhr) {\n      expect(xhr.status).to.equal(201);\n      cy.wait('@publish-complete');\n      cy.getByDataAutomationId('cms-item-row').first().click();\n      cy.step('try to schedule the item');\n      cy.getByDataAutomationId('item-edit-pane-dropdown').eq(0).click();\n      cy.step('assert schedule option is disabled');\n      cy.getByDataAutomationId('open-schedule-picker-option').should('have.class', 'bem-Menu_Item-disabled');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2670,"startedAt":"2021-01-12T13:45:37.618Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-scheduled-publishing-01.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-scheduled-publishing-01.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-scheduled-publishing-01.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":5,"passes":5,"pending":0,"skipped":0,"failures":0,"duration":44582,"startedAt":"2021-01-12T13:45:47.512Z","endedAt":"2021-01-12T13:46:32.094Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":5,"passes":5,"pending":0,"failures":0,"start":"2021-01-12T13:45:47.514Z","end":"2021-01-12T13:46:32.109Z","duration":44595},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    _cypressAppControls.api.restoreSnapshotViaAPI(_cypressAppControls.snapshots.CMS.simpleListItems, true).then(function (siteSlug) {\n      _cypressAppControls.api.setSitePlan(siteSlug, 'cms').then(function () {\n        cy.reload();\n        workspace = _cypressAppControls.api.waitForDesigner();\n        sidebar = workspace.getLeftSidebar();\n      });\n    });\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Scheduled Publishing with allowed plan","can't schedule an item of an unpublished collection"],"state":"passed","body":"function () {\n    cy.step('publish the site to enable scheduled publishing');\n    workspace.getTopbar().clickPublishButton().clickPublishSelectedDomainsButton().waitUntilDonePublishing().then(function () {\n      cy.getByDataAutomationId('close-publish-dropdown-button').trigger('click');\n      cmsTab = sidebar.clickCMSButton();\n      cy.step('create a collection, Projects');\n      collectionSettings = cmsTab.clickCreateNewCMSButton();\n      cy.get('.bem-TextInput').first().click().type('Projects');\n      cy.step('add a reference field');\n      var form = collectionSettings.clickAddFieldButton();\n      form.clickOption('ItemRef').fill({\n        label: 'Items',\n        reference: 'Items'\n      }).clickSaveButton();\n      collectionSettings.clickCreateCollectionButton();\n      cy.wait(1000);\n      cy.step('add new item');\n      cy.getByDataAutomationId('cms-add-item-button').click();\n      cy.getByDataAutomationId('dyn-item-name-input').type('My new scheduled project');\n      cy.step('try to schedule the item');\n      cy.getByDataAutomationId('item-edit-pane-dropdown').eq(0).click();\n      cy.step('assert schedule option is disabled');\n      cy.getByDataAutomationId('open-schedule-picker-option').should('have.class', 'bem-Menu_Item-disabled');\n      cy.getByDataAutomationId('cms-panel-top-close-button').click();\n      cy.getByDataAutomationId('discard-changes').click();\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":22206,"startedAt":"2021-01-12T13:45:52.240Z","screenshots":[]}]},{"title":["Scheduled Publishing with allowed plan","can schedule an item with unpublished references"],"state":"passed","body":"function () {\n    _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.itemScheduled).as('schedule-item');\n\n    cy.step('publish site');\n    workspace.getTopbar().clickPublishButton().clickPublishSelectedDomainsButton().waitUntilDonePublishing().then(function () {\n      cy.getByDataAutomationId('close-publish-dropdown-button').trigger('click');\n      cmsTab = sidebar.clickCMSButton();\n      cmsTab.getCollectionByName('Projects').clickCollectionTab();\n      cy.step('add new item');\n      cy.getByDataAutomationId('cms-add-item-button').click();\n      cy.getByDataAutomationId('dyn-item-name-input').type('My new scheduled project');\n      cy.step('add an inline reference item');\n      cy.getByDataAutomationId('dyn-item-items-add-option').click();\n      cy.getByDataAutomationId('inline-dyn-item-name-input').type('New item');\n      cy.getByDataAutomationId('save-collection-button').eq(1).click();\n      cy.step('schedule main item');\n      cy.getByDataAutomationId('item-edit-pane-dropdown').eq(0).click();\n      cy.step('open schedule picker');\n      cy.getByDataAutomationId('open-schedule-picker-option').click();\n      cy.step('assert schedule picker is opened');\n      cy.getByDataAutomationId('schedule-picker').should('be.visible');\n      cy.step('increment month');\n      cy.getByDataAutomationId('date-picker-increment-month').click();\n      cy.get('.bem-DatePicker_Days > div.bem-DatePicker_Day-activeCurrentMonth:first').click();\n      cy.getByDataAutomationId('schedule-picker-button').click();\n      cy.step('The item references modal should be displayed. Make sure it has the right copy');\n      cy.getByDataAutomationId('items-by-collection-modal').should('exist');\n      cy.get('button').contains('Schedule Item').click();\n      cy.wait('@schedule-item', {\n        timeout: 20000\n      }).then(function (xhr) {\n        expect(xhr.status).to.equal(201);\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9072,"startedAt":"2021-01-12T13:46:14.488Z","screenshots":[]}]},{"title":["Scheduled Publishing with allowed plan","scheduled items warning modal displayed when attempting to unpublish the only domain published"],"state":"passed","body":"function () {\n    cy.getByDataAutomationId('cms-panel-top-close-button').click();\n    cy.step('publish site');\n    workspace.getTopbar().clickPublishButton();\n    cy.getByDataAutomationId('unpublish-button').should('be.visible').click();\n    cy.step('The item references modal should be displayed. Make sure it has the right copy');\n    cy.getByDataAutomationId('items-by-collection-modal').should('exist');\n    cy.get('button').contains('Unpublish site');\n    cy.getByDataAutomationId('itemsByCollectionCancelButton').click();\n    cy.getByDataAutomationId('close-publish-dropdown-button').trigger('click');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":956,"startedAt":"2021-01-12T13:46:23.570Z","screenshots":[]}]},{"title":["Scheduled Publishing with allowed plan","duplicating a scheduled item places item in Stage for Publish state"],"state":"passed","body":"function () {\n    _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.itemScheduled).as('item-schedule');\n\n    cmsTab = sidebar.clickCMSButton();\n    var cmsItems = cmsTab.getCollectionByName('Items').clickCollectionTab();\n    cy.step('create new item and schedule');\n    cy.getByDataAutomationId('cms-add-item-button').click();\n    cy.getByDataAutomationId('dyn-item-name-input').type('Item to schedule and duplicate');\n    cy.getByDataAutomationId('item-edit-pane-dropdown').click();\n    cy.getByDataAutomationId('open-schedule-picker-option').click();\n    cy.step('assert schedule picker is opened');\n    cy.getByDataAutomationId('schedule-picker').should('be.visible');\n    cy.step('increment month');\n    cy.getByDataAutomationId('date-picker-increment-month').click();\n    cy.get('.bem-DatePicker_Days > div.bem-DatePicker_Day-activeCurrentMonth:first').click();\n    cy.step('save and schedule item');\n    cy.getByDataAutomationId('schedule-picker-button').click();\n    cy.wait('@item-schedule', {\n      timeout: 20000\n    });\n    cmsItems.getItemListRow().eq(0);\n    cy.step('select scheduled item');\n    cmsItems.getItemListRow().eq(0).click();\n    cy.getByDataAutomationId('duplicate-product-button').click();\n    cy.getByDataAutomationId('save-collection-button').click();\n    cy.step('assert duplicated item state is Stage for Publish');\n    cy.getByDataAutomationId('cms-item-row').should('contain', 'Staged for Publish');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":5046,"startedAt":"2021-01-12T13:46:24.528Z","screenshots":[]}]},{"title":["Scheduled Publishing with allowed plan","scheduled items are not displayed in the canvas"],"state":"passed","body":"function () {\n    canvas = workspace.getCanvas();\n    cy.step('add collection list and bind it to Items collection');\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper').then(function () {\n      return canvas.closeMiniSettings().then(function () {\n        return workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createSourceSettings().selectOptionWithLabel('Items').then(function () {\n          canvas.within(function () {\n            cy.step('the scheduled item should not be visible');\n            cy.get('[data-dyn-label=\"Items: Item to schedule and duplicate\"]').should('not.exist');\n            cy.step('the staged for publish item should be visible');\n            cy.get('[data-dyn-label=\"Items: Item to schedule and duplicate Copy\"]').should('be.visible');\n          });\n        });\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2500,"startedAt":"2021-01-12T13:46:29.588Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-scheduled-publishing-02.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-scheduled-publishing-02.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-scheduled-publishing-02.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":38425,"startedAt":"2021-01-12T13:46:38.841Z","endedAt":"2021-01-12T13:47:17.266Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:46:38.844Z","end":"2021-01-12T13:47:17.304Z","duration":38460},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n    sidebar = workspace.getLeftSidebar();\n    cmsTab = sidebar.clickCMSButton();\n    cy.step('Create a collection, Shoes');\n    collectionSettings = cmsTab.clickCreateNewCMSButton();\n    cy.getByDataAutomationId('CollectionSettingsForm-cms-collection-title-field-input').click().type('Shoes');\n    collectionSettings.clickCreateCollectionButton();\n    cy.wait(1000);\n    cy.step('Create a collection, Clothes');\n    collectionSettings = cmsTab.clickCreateNewCMSButton();\n    collectionSettings.getName().clear().type('Clothes');\n    cy.step('Add a reference field');\n    var form = collectionSettings.clickAddFieldButton();\n    form.clickOption('ItemRef').fill({\n      label: 'Shoes',\n      reference: 'Shoes'\n    }).clickSaveButton();\n    collectionSettings.clickCreateCollectionButton();\n    cy.wait(1000);\n    cy.getByDataAutomationId('cms-panel-top-close-button').click();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Single Item Publishing","can do a single item publish"],"state":"passed","body":"function () {\n    _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.itemPublished).as('publish-item');\n\n    cy.step('publish the site to enable single item publishing, then publish 1 item');\n    workspace.getTopbar().clickPublishButton().clickPublishSelectedDomainsButton().waitUntilDonePublishing().then(function () {\n      cy.getByDataAutomationId('close-publish-dropdown-button').trigger('click');\n      cmsTab = sidebar.clickCMSButton();\n      cmsTab.getCollectionByName('Clothes').clickCollectionTab();\n      cy.getByDataAutomationId('cms-add-item-button').click();\n      cy.getByDataAutomationId('dyn-item-name-input').type('My T-shirt');\n      cy.getByDataAutomationId('item-edit-pane-dropdown').click();\n      cy.getByDataAutomationId('single-item-publish').click();\n      cy.wait('@publish-item').then(function (xhr) {\n        expect(xhr.status).to.equal(201);\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":23623,"startedAt":"2021-01-12T13:46:44.006Z","screenshots":[]}]},{"title":["Single Item Publishing","can do a single item publish with unpublished references"],"state":"passed","body":"function () {\n    _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.itemPublished).as('publish-item');\n\n    cy.step('publish the site to enable single item publishing, then add a reference, then publish the item');\n    cy.getByDataAutomationId('cms-add-item-button').click();\n    cy.getByDataAutomationId('dyn-item-name-input').type('My new T-shirt');\n    cy.step('add an inline reference item');\n    cy.getByDataAutomationId('dyn-item-shoes-add-option').click();\n    cy.getByDataAutomationId('inline-dyn-item-name-input').type('Boots');\n    cy.getByDataAutomationId('save-collection-button').eq(1).click();\n    cy.step('Publish this item');\n    cy.getByDataAutomationId('item-edit-pane-dropdown').first().click();\n    cy.getByDataAutomationId('single-item-publish').click();\n    cy.step('The item references modal should show up now. Make sure it has the right copy');\n    cy.getByDataAutomationId('items-by-collection-modal').should('exist');\n    cy.get('button').contains('Publish Items').click();\n    cy.wait('@publish-item').then(function (xhr) {\n      expect(xhr.status).to.equal(201);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9601,"startedAt":"2021-01-12T13:47:07.656Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-single-item-publish.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-single-item-publish.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-single-item-publish.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":8,"tests":4,"passes":4,"pending":0,"skipped":0,"failures":0,"duration":42950,"startedAt":"2021-01-12T13:47:24.864Z","endedAt":"2021-01-12T13:48:07.814Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":8,"tests":4,"passes":4,"pending":0,"failures":0,"start":"2021-01-12T13:47:24.867Z","end":"2021-01-12T13:48:07.819Z","duration":42952},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.bindingsSmoke);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Cars Template').then(function () {\n        workspace.getTopbar().getPageMenu().setPageItem('Consequuntur Natus Est');\n      });\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n        workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper').then(function () {\n          canvas.closeMiniSettings().then(function () {\n            workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createSourceSettings().selectOptionWithLabel('Gallery');\n          });\n        });\n      }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Image').then(function () {\n              runAssertionsOnCanvasElements(selector, function (img) {\n                expect(img.getAttribute('src')).to.have.string('placeholder');\n              });\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DivBlock').then(function () {\n              runAssertionsOnCanvasElements(selector, function (block) {\n                expect(block).not.to.have.attr('style');\n              });\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n        deleteCanvasElement('.w-dyn-items');\n      }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n        workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper').then(function () {\n          return canvas.closeMiniSettings().then(function () {\n            return workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createSourceSettings().selectOptionWithLabel('Similar Cars').then(function () {\n              return canvas.selectElement(\".w-dyn-items > .w-dyn-item\").then(function () {\n                return workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper').then(function () {\n                  return canvas.closeMiniSettings().then(function () {\n                    return workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createSourceSettings().selectOptionWithLabel('Gallery');\n                  });\n                });\n              });\n            });\n          });\n        });\n      }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Image').then(function () {\n              runAssertionsOnCanvasElements(selector, function (img) {\n                expect(img.getAttribute('src')).to.have.string('placeholder');\n              });\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DivBlock').then(function () {\n              runAssertionsOnCanvasElements(selector, function (block) {\n                expect(block).not.to.have.attr('style');\n              });\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n        deleteCanvasElement('.w-dyn-items');\n      }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS Smoke Test - Multi-image list content and style bindings","on Cars Template page","within collection list context","binding as an image","should be able to bind the \"Gallery (Multi-image)\" field"],"state":"passed","body":"function (done) {\n          var imgBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          imgBinding.click();\n          imgBinding.field.setValue('Gallery');\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img).to.have.attr('src');\n            expect(img.getAttribute('src')).not.to.have.string('placeholder');\n          }).then(function () {\n            done();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":27703,"startedAt":"2021-01-12T13:47:30.999Z","screenshots":[]}]},{"title":["CMS Smoke Test - Multi-image list content and style bindings","on Cars Template page","within collection list context","binding as a background image","should be able to bind the \"Gallery (Multi-image)\" field"],"state":"passed","body":"function (done) {\n          var bgImageBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          bgImageBinding.click();\n          bgImageBinding.field.setValue('Gallery');\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).to.have.attr('style');\n            expect(block.getAttribute('style')).to.have.string('background-image');\n          }).then(function () {\n            done();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1910,"startedAt":"2021-01-12T13:47:58.736Z","screenshots":[]}]},{"title":["CMS Smoke Test - Multi-image list content and style bindings","on Cars Template page","within nested collection list context","binding as an image","should be able to bind the \"Gallery (Multi-image)\" field"],"state":"passed","body":"function (done) {\n          var imgBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          imgBinding.click();\n          imgBinding.field.setValue('Gallery');\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img).to.have.attr('src');\n            expect(img.getAttribute('src')).not.to.have.string('placeholder');\n          }).then(function () {\n            done();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4769,"startedAt":"2021-01-12T13:48:00.652Z","screenshots":[]}]},{"title":["CMS Smoke Test - Multi-image list content and style bindings","on Cars Template page","within nested collection list context","binding as a background image","should be able to bind the \"Gallery (Multi-image)\" field"],"state":"passed","body":"function (done) {\n          var bgImageBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          bgImageBinding.click();\n          bgImageBinding.field.setValue('Gallery');\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).to.have.attr('style');\n            expect(block.getAttribute('style')).to.have.string('background-image');\n          }).then(function () {\n            done();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2385,"startedAt":"2021-01-12T13:48:05.427Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-smoke-bindings-multi-image-list.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-smoke-bindings-multi-image-list.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-smoke-bindings-multi-image-list.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":22,"tests":66,"passes":66,"pending":0,"skipped":0,"failures":0,"duration":102725,"startedAt":"2021-01-12T13:48:15.561Z","endedAt":"2021-01-12T13:49:58.286Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":22,"tests":66,"passes":66,"pending":0,"failures":0,"start":"2021-01-12T13:48:15.564Z","end":"2021-01-12T13:49:58.475Z","duration":102911},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.bindingsSmoke);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n        workspace.getLeftSidebar().clickPagesTab().switchPage(pageName).then(beforeFn);\n      }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('TextBlock').then(function () {\n              innerTextBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n            });\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).to.contain('This is some text inside of a div block.');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('RichText');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).to.contain('What’s a Rich Text element?');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('TextLink').then(function () {\n              linkSettings = workspace.getRightPanel().clickPropertiesTab().linkSettings;\n              hrefBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n            });\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href', '#');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Image');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img.getAttribute('src')).to.have.string('placeholder');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Video');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (video) {\n            expect(video).not.to.have.attr('style');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DivBlock');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).not.to.have.attr('style');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          cy.get('#site-iframe-next').should(function (iframe) {\n            iframe.contents().find(\"\".concat(selectorPrefix, \" div\")).each(function (idx, block) {\n              expect(block).not.to.have.attr('style');\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n        afterFn();\n      }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n        workspace.getLeftSidebar().clickPagesTab().switchPage(pageName).then(beforeFn);\n      }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('TextBlock').then(function () {\n              innerTextBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n            });\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).to.contain('This is some text inside of a div block.');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('RichText');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).to.contain('What’s a Rich Text element?');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('TextLink').then(function () {\n              linkSettings = workspace.getRightPanel().clickPropertiesTab().linkSettings;\n              hrefBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n            });\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href', '#');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Image');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img.getAttribute('src')).to.have.string('placeholder');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Video');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (video) {\n            expect(video).not.to.have.attr('style');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DivBlock');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).not.to.have.attr('style');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          cy.get('#site-iframe-next').should(function (iframe) {\n            iframe.contents().find(\"\".concat(selectorPrefix, \" div\")).each(function (idx, block) {\n              expect(block).not.to.have.attr('style');\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n        afterFn();\n      }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n        workspace.getLeftSidebar().clickPagesTab().switchPage(pageName).then(beforeFn);\n      }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('TextBlock').then(function () {\n              innerTextBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n            });\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).to.contain('This is some text inside of a div block.');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('RichText');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).to.contain('What’s a Rich Text element?');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('TextLink').then(function () {\n              linkSettings = workspace.getRightPanel().clickPropertiesTab().linkSettings;\n              hrefBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n            });\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href', '#');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Image');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img.getAttribute('src')).to.have.string('placeholder');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Video');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (video) {\n            expect(video).not.to.have.attr('style');\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          canvas.selectElement(selectorPrefix).then(function () {\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DivBlock');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).not.to.have.attr('style');\n          });\n        }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n          cy.get('#site-iframe-next').should(function (iframe) {\n            iframe.contents().find(\"\".concat(selectorPrefix, \" div\")).each(function (idx, block) {\n              expect(block).not.to.have.attr('style');\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          deleteCanvasElement(selector);\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n        afterFn();\n      }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Text Block","should be able to bind Name field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":17283,"startedAt":"2021-01-12T13:48:21.057Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Text Block","should be able to bind Customer Service Email field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":720,"startedAt":"2021-01-12T13:48:38.355Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Text Block","should be able to bind Customer Service Number field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":975,"startedAt":"2021-01-12T13:48:39.078Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Text Block","should be able to bind Description field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":961,"startedAt":"2021-01-12T13:48:40.054Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Text Block","should be able to bind Fuel field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":680,"startedAt":"2021-01-12T13:48:41.016Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Text Block","should be able to bind Release Date field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":862,"startedAt":"2021-01-12T13:48:41.698Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Text Block","should be able to bind Video URL field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":781,"startedAt":"2021-01-12T13:48:42.562Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Text Block","should be able to bind Website field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":594,"startedAt":"2021-01-12T13:48:43.345Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Text Block","should be able to bind Year field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":601,"startedAt":"2021-01-12T13:48:43.941Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Text Block","should be able to bind Country field from Manufacturer reference"],"state":"passed","body":"function (done) {\n          innerTextBinding.click();\n          innerTextBinding.field.setValue('Country');\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).not.to.be.empty;\n            expect(textBlock).not.to.contain('This is some text inside of a div block.');\n          }).then(function () {\n            innerTextBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":991,"startedAt":"2021-01-12T13:48:44.543Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Rich Text Block","should be able to bind Rich Description field"],"state":"passed","body":"function (done) {\n          var innerTextBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          innerTextBinding.click();\n          innerTextBinding.field.setValue('Rich Description');\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).not.to.be.empty;\n            expect(textBlock).not.to.contain('What’s a Rich Text element?');\n          }).then(function () {\n            innerTextBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1865,"startedAt":"2021-01-12T13:48:45.618Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to Text Link URL","should be able to bind Video URL field"],"state":"passed","body":"function (done) {\n            linkSettings.mode.selectRadioButtonWithLabel('URL');\n            hrefBinding.click();\n            hrefBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (link) {\n              expect(link).to.have.attr('href');\n              expect(link).not.to.have.attr('href', '#');\n            }).then(function () {\n              hrefBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1769,"startedAt":"2021-01-12T13:48:47.493Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to Text Link URL","should be able to bind Website field"],"state":"passed","body":"function (done) {\n            linkSettings.mode.selectRadioButtonWithLabel('URL');\n            hrefBinding.click();\n            hrefBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (link) {\n              expect(link).to.have.attr('href');\n              expect(link).not.to.have.attr('href', '#');\n            }).then(function () {\n              hrefBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":640,"startedAt":"2021-01-12T13:48:49.263Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to Text Link URL","should be able to bind Web page field from Manufacturer reference"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('URL');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Web page');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link).not.to.have.attr('href', '#');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1141,"startedAt":"2021-01-12T13:48:49.904Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to Text Link URL","should be able to bind Customer Service Email field"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('Email');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Customer Service Email');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link.getAttribute('href')).to.have.string('mailto:');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":672,"startedAt":"2021-01-12T13:48:51.046Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to Text Link URL","should be able to bind Customer Service Number field"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('Phone');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Customer Service Number');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link.getAttribute('href')).to.have.string('tel:');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":668,"startedAt":"2021-01-12T13:48:51.719Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to Text Link URL","should be able to bind Attachment field"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('File');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Attachment');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link).not.to.have.attr('href', '#');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":926,"startedAt":"2021-01-12T13:48:52.389Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to an Image element","should be able to bind Picture field"],"state":"passed","body":"function (done) {\n          var imgBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          imgBinding.click();\n          imgBinding.field.setValue('Picture');\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img).to.have.attr('src');\n            expect(img.getAttribute('src')).not.to.have.string('placeholder');\n          }).then(function () {\n            imgBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2074,"startedAt":"2021-01-12T13:48:53.329Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to an Image element","should be able to bind Logo field from Manufacturer reference"],"state":"passed","body":"function (done) {\n          var imgBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          imgBinding.click();\n          imgBinding.field.setValue('Logo');\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img).to.have.attr('src');\n            expect(img.getAttribute('src')).not.to.have.string('placeholder');\n          }).then(function () {\n            imgBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":927,"startedAt":"2021-01-12T13:48:55.404Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Video element","should be able to bind Video field"],"state":"passed","body":"function (done) {\n          var videoBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          videoBinding.click();\n          videoBinding.field.setValue('Video');\n          runAssertionsOnCanvasElements(selector, function (video) {\n            expect(video).not.to.have[\"class\"]('.w-dyn-bind-empty'); // Video iframe loaded on canvas via Embedly\n\n            expect(video.querySelector('.embedly-embed')).to.exist;\n          }).then(function () {\n            videoBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1776,"startedAt":"2021-01-12T13:48:56.336Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Block element","should be able to bind Paint field"],"state":"passed","body":"function (done) {\n          var bgColorBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(2);\n          bgColorBinding.click();\n          bgColorBinding.field.setValue('Paint');\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).to.have.attr('style');\n            expect(block.getAttribute('style')).to.have.string('background-color');\n          }).then(function () {\n            bgColorBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1789,"startedAt":"2021-01-12T13:48:58.118Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection template page context","binding to a Block element","should be able to bind Picture field"],"state":"passed","body":"function (done) {\n          var bgImageBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(1);\n          bgImageBinding.click();\n          bgImageBinding.field.setValue('Picture');\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).to.have.attr('style');\n            expect(block.getAttribute('style')).to.have.string('background-image');\n          }).then(function () {\n            bgImageBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":911,"startedAt":"2021-01-12T13:48:59.908Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Text Block","should be able to bind Name field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3066,"startedAt":"2021-01-12T13:49:00.829Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Text Block","should be able to bind Customer Service Email field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":656,"startedAt":"2021-01-12T13:49:03.896Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Text Block","should be able to bind Customer Service Number field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1224,"startedAt":"2021-01-12T13:49:04.553Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Text Block","should be able to bind Description field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":641,"startedAt":"2021-01-12T13:49:05.778Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Text Block","should be able to bind Fuel field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":732,"startedAt":"2021-01-12T13:49:06.420Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Text Block","should be able to bind Release Date field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":646,"startedAt":"2021-01-12T13:49:07.153Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Text Block","should be able to bind Video URL field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":627,"startedAt":"2021-01-12T13:49:07.800Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Text Block","should be able to bind Website field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":839,"startedAt":"2021-01-12T13:49:08.428Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Text Block","should be able to bind Year field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":633,"startedAt":"2021-01-12T13:49:09.269Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Text Block","should be able to bind Country field from Manufacturer reference"],"state":"passed","body":"function (done) {\n          innerTextBinding.click();\n          innerTextBinding.field.setValue('Country');\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).not.to.be.empty;\n            expect(textBlock).not.to.contain('This is some text inside of a div block.');\n          }).then(function () {\n            innerTextBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1217,"startedAt":"2021-01-12T13:49:09.903Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Rich Text Block","should be able to bind Rich Description field"],"state":"passed","body":"function (done) {\n          var innerTextBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          innerTextBinding.click();\n          innerTextBinding.field.setValue('Rich Description');\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).not.to.be.empty;\n            expect(textBlock).not.to.contain('What’s a Rich Text element?');\n          }).then(function () {\n            innerTextBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1992,"startedAt":"2021-01-12T13:49:11.184Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to Text Link URL","should be able to bind Video URL field"],"state":"passed","body":"function (done) {\n            linkSettings.mode.selectRadioButtonWithLabel('URL');\n            hrefBinding.click();\n            hrefBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (link) {\n              expect(link).to.have.attr('href');\n              expect(link).not.to.have.attr('href', '#');\n            }).then(function () {\n              hrefBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1991,"startedAt":"2021-01-12T13:49:13.243Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to Text Link URL","should be able to bind Website field"],"state":"passed","body":"function (done) {\n            linkSettings.mode.selectRadioButtonWithLabel('URL');\n            hrefBinding.click();\n            hrefBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (link) {\n              expect(link).to.have.attr('href');\n              expect(link).not.to.have.attr('href', '#');\n            }).then(function () {\n              hrefBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":827,"startedAt":"2021-01-12T13:49:15.235Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to Text Link URL","should be able to bind Web page field from Manufacturer reference"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('URL');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Web page');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link).not.to.have.attr('href', '#');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1401,"startedAt":"2021-01-12T13:49:16.063Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to Text Link URL","should be able to bind Customer Service Email field"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('Email');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Customer Service Email');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link.getAttribute('href')).to.have.string('mailto:');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":757,"startedAt":"2021-01-12T13:49:17.465Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to Text Link URL","should be able to bind Customer Service Number field"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('Phone');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Customer Service Number');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link.getAttribute('href')).to.have.string('tel:');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":725,"startedAt":"2021-01-12T13:49:18.223Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to Text Link URL","should be able to bind Attachment field"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('File');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Attachment');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link).not.to.have.attr('href', '#');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1095,"startedAt":"2021-01-12T13:49:18.949Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to an Image element","should be able to bind Picture field"],"state":"passed","body":"function (done) {\n          var imgBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          imgBinding.click();\n          imgBinding.field.setValue('Picture');\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img).to.have.attr('src');\n            expect(img.getAttribute('src')).not.to.have.string('placeholder');\n          }).then(function () {\n            imgBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1573,"startedAt":"2021-01-12T13:49:20.049Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to an Image element","should be able to bind Logo field from Manufacturer reference"],"state":"passed","body":"function (done) {\n          var imgBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          imgBinding.click();\n          imgBinding.field.setValue('Logo');\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img).to.have.attr('src');\n            expect(img.getAttribute('src')).not.to.have.string('placeholder');\n          }).then(function () {\n            imgBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":935,"startedAt":"2021-01-12T13:49:21.623Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Video element","should be able to bind Video field"],"state":"passed","body":"function (done) {\n          var videoBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          videoBinding.click();\n          videoBinding.field.setValue('Video');\n          runAssertionsOnCanvasElements(selector, function (video) {\n            expect(video).not.to.have[\"class\"]('.w-dyn-bind-empty'); // Video iframe loaded on canvas via Embedly\n\n            expect(video.querySelector('.embedly-embed')).to.exist;\n          }).then(function () {\n            videoBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1545,"startedAt":"2021-01-12T13:49:22.563Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Block element","should be able to bind Paint field"],"state":"passed","body":"function (done) {\n          var bgColorBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(2);\n          bgColorBinding.click();\n          bgColorBinding.field.setValue('Paint');\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).to.have.attr('style');\n            expect(block.getAttribute('style')).to.have.string('background-color');\n          }).then(function () {\n            bgColorBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1392,"startedAt":"2021-01-12T13:49:24.113Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within collection list context","binding to a Block element","should be able to bind Picture field"],"state":"passed","body":"function (done) {\n          var bgImageBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(1);\n          bgImageBinding.click();\n          bgImageBinding.field.setValue('Picture');\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).to.have.attr('style');\n            expect(block.getAttribute('style')).to.have.string('background-image');\n          }).then(function () {\n            bgImageBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1000,"startedAt":"2021-01-12T13:49:25.507Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Text Block","should be able to bind Name field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4480,"startedAt":"2021-01-12T13:49:26.513Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Text Block","should be able to bind Customer Service Email field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":885,"startedAt":"2021-01-12T13:49:30.995Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Text Block","should be able to bind Customer Service Number field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":961,"startedAt":"2021-01-12T13:49:31.881Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Text Block","should be able to bind Description field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1103,"startedAt":"2021-01-12T13:49:32.843Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Text Block","should be able to bind Fuel field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":711,"startedAt":"2021-01-12T13:49:33.947Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Text Block","should be able to bind Release Date field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":813,"startedAt":"2021-01-12T13:49:34.659Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Text Block","should be able to bind Video URL field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":699,"startedAt":"2021-01-12T13:49:35.473Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Text Block","should be able to bind Website field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":708,"startedAt":"2021-01-12T13:49:36.174Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Text Block","should be able to bind Year field"],"state":"passed","body":"function (done) {\n            innerTextBinding.click();\n            innerTextBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (textBlock) {\n              expect(textBlock).not.to.be.empty;\n              expect(textBlock).not.to.contain('This is some text inside of a div block.');\n            }).then(function () {\n              innerTextBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":710,"startedAt":"2021-01-12T13:49:36.884Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Text Block","should be able to bind Country field from Manufacturer reference"],"state":"passed","body":"function (done) {\n          innerTextBinding.click();\n          innerTextBinding.field.setValue('Country');\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).not.to.be.empty;\n            expect(textBlock).not.to.contain('This is some text inside of a div block.');\n          }).then(function () {\n            innerTextBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1935,"startedAt":"2021-01-12T13:49:37.595Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Rich Text Block","should be able to bind Rich Description field"],"state":"passed","body":"function (done) {\n          var innerTextBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          innerTextBinding.click();\n          innerTextBinding.field.setValue('Rich Description');\n          runAssertionsOnCanvasElements(selector, function (textBlock) {\n            expect(textBlock).not.to.be.empty;\n            expect(textBlock).not.to.contain('What’s a Rich Text element?');\n          }).then(function () {\n            innerTextBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2152,"startedAt":"2021-01-12T13:49:39.660Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to Text Link URL","should be able to bind Video URL field"],"state":"passed","body":"function (done) {\n            linkSettings.mode.selectRadioButtonWithLabel('URL');\n            hrefBinding.click();\n            hrefBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (link) {\n              expect(link).to.have.attr('href');\n              expect(link).not.to.have.attr('href', '#');\n            }).then(function () {\n              hrefBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3329,"startedAt":"2021-01-12T13:49:41.817Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to Text Link URL","should be able to bind Website field"],"state":"passed","body":"function (done) {\n            linkSettings.mode.selectRadioButtonWithLabel('URL');\n            hrefBinding.click();\n            hrefBinding.field.setValue(fieldName);\n            runAssertionsOnCanvasElements(selector, function (link) {\n              expect(link).to.have.attr('href');\n              expect(link).not.to.have.attr('href', '#');\n            }).then(function () {\n              hrefBinding.click().then(function () {\n                done();\n              });\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":843,"startedAt":"2021-01-12T13:49:45.147Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to Text Link URL","should be able to bind Web page field from Manufacturer reference"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('URL');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Web page');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link).not.to.have.attr('href', '#');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":838,"startedAt":"2021-01-12T13:49:45.991Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to Text Link URL","should be able to bind Customer Service Email field"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('Email');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Customer Service Email');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link.getAttribute('href')).to.have.string('mailto:');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":920,"startedAt":"2021-01-12T13:49:46.830Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to Text Link URL","should be able to bind Customer Service Number field"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('Phone');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Customer Service Number');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link.getAttribute('href')).to.have.string('tel:');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":892,"startedAt":"2021-01-12T13:49:47.752Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to Text Link URL","should be able to bind Attachment field"],"state":"passed","body":"function (done) {\n          linkSettings.mode.selectRadioButtonWithLabel('File');\n          hrefBinding.click();\n          hrefBinding.field.setValue('Attachment');\n          runAssertionsOnCanvasElements(selector, function (link) {\n            expect(link).to.have.attr('href');\n            expect(link).not.to.have.attr('href', '#');\n          }).then(function () {\n            hrefBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1544,"startedAt":"2021-01-12T13:49:48.645Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to an Image element","should be able to bind Picture field"],"state":"passed","body":"function (done) {\n          var imgBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          imgBinding.click();\n          imgBinding.field.setValue('Picture');\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img).to.have.attr('src');\n            expect(img.getAttribute('src')).not.to.have.string('placeholder');\n          }).then(function () {\n            imgBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1541,"startedAt":"2021-01-12T13:49:50.194Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to an Image element","should be able to bind Logo field from Manufacturer reference"],"state":"passed","body":"function (done) {\n          var imgBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          imgBinding.click();\n          imgBinding.field.setValue('Logo');\n          runAssertionsOnCanvasElements(selector, function (img) {\n            expect(img).to.have.attr('src');\n            expect(img.getAttribute('src')).not.to.have.string('placeholder');\n          }).then(function () {\n            imgBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1117,"startedAt":"2021-01-12T13:49:51.737Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Video element","should be able to bind Video field"],"state":"passed","body":"function (done) {\n          var videoBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(0);\n          videoBinding.click();\n          videoBinding.field.setValue('Video');\n          runAssertionsOnCanvasElements(selector, function (video) {\n            expect(video).not.to.have[\"class\"]('.w-dyn-bind-empty'); // Video iframe loaded on canvas via Embedly\n\n            expect(video.querySelector('.embedly-embed')).to.exist;\n          }).then(function () {\n            videoBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2737,"startedAt":"2021-01-12T13:49:52.864Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Block element","should be able to bind Paint field"],"state":"passed","body":"function (done) {\n          var bgColorBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(2);\n          bgColorBinding.click();\n          bgColorBinding.field.setValue('Paint');\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).to.have.attr('style');\n            expect(block.getAttribute('style')).to.have.string('background-color');\n          }).then(function () {\n            bgColorBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1422,"startedAt":"2021-01-12T13:49:55.610Z","screenshots":[]}]},{"title":["CMS Smoke Test - Content and style bindings","within nested collection list context","binding to a Block element","should be able to bind Picture field"],"state":"passed","body":"function (done) {\n          var bgImageBinding = workspace.getRightPanel().clickPropertiesTab().getBinding(1);\n          bgImageBinding.click();\n          bgImageBinding.field.setValue('Picture');\n          runAssertionsOnCanvasElements(selector, function (block) {\n            expect(block).to.have.attr('style');\n            expect(block.getAttribute('style')).to.have.string('background-image');\n          }).then(function () {\n            bgImageBinding.click().then(function () {\n              done();\n            });\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1242,"startedAt":"2021-01-12T13:49:57.033Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-smoke-bindings.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-smoke-bindings.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-smoke-bindings.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":24853,"startedAt":"2021-01-12T13:50:05.624Z","endedAt":"2021-01-12T13:50:30.477Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:50:05.627Z","end":"2021-01-12T13:50:30.481Z","duration":24854},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS Smoke Test - Create A Collection List","Collection List","Can add collection list"],"state":"passed","body":"function () {\n      cy.step('Add Collection List');\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper');\n      workspace.getRightPanel().clickStylesTab().selector.setClassNames(['cy-list']);\n      cy.step('Click collection binding dropdown');\n      collectionSettings = canvas.getCollectionListSettings();\n      collectionSettings.source.click();\n      collectionSettings.source.clickOption('Cars');\n      cy.step('Go to Settings Panel in the right panel');\n      propertiesTab = workspace.getRightPanel().clickPropertiesTab();\n      cy.step('Assert binding to `Cars` on the dropdown in settings panel');\n      propertiesTab.getNode().within(function () {\n        cy.get(\"[data-automation-id=\\\"dyn-dropdown\\\"]\").should('contain', 'Cars');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":15300,"startedAt":"2021-01-12T13:50:10.748Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create A Collection List","Collection List","Can add a heading into a collection list"],"state":"passed","body":"function () {\n      cy.step('Select Collection List Item');\n      canvas.selectElement('.w-dyn-items > div:nth-of-type(1)');\n      cy.step('Add a Heading into the first Dynamic Item node');\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Heading');\n      workspace.getRightPanel().clickStylesTab().selector.setClassNames(['cy-list-heading']);\n      cy.step('In the Mini Settings, press the checkbox next to \"Get Text from Cars\"');\n      miniSettings = canvas.miniSettings;\n      binding = miniSettings.getBinding(0);\n      binding.click();\n      binding.field.click();\n      binding.field.clickOption('Year');\n      miniSettings.close();\n      cy.step('In the Collection Style Settings area, enable \"Get BG Color from Cars\"');\n      propertiesTab = workspace.getRightPanel().clickPropertiesTab();\n      binding = propertiesTab.dynamicStyleSettings.getBinding(2);\n      binding.click();\n      cy.step('Pick \"Color\" from the dropdown');\n      binding.field.click();\n      binding.field.clickOption('Paint');\n      cy.step('Assert property is picked');\n      propertiesTab.dynamicStyleSettings.getNode().should('contain', 'Paint');\n      cy.step('Assert collection list items have background color applied');\n      canvas.within(function () {\n        cy.get('.w-dyn-items').should('have.css', 'background-color');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4417,"startedAt":"2021-01-12T13:50:26.058Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-smoke-collection-list.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-smoke-collection-list.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-smoke-collection-list.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":8,"tests":15,"passes":15,"pending":0,"skipped":0,"failures":0,"duration":33387,"startedAt":"2021-01-12T13:50:37.717Z","endedAt":"2021-01-12T13:51:11.104Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":8,"tests":15,"passes":15,"pending":0,"failures":0,"start":"2021-01-12T13:50:37.719Z","end":"2021-01-12T13:51:11.107Z","duration":33388},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    sidebar = workspace.getLeftSidebar();\n    rightPanel = workspace.getRightPanel();\n    stylesTab = rightPanel.getStylesTab();\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS Smoke Test - Create a Collection","Create a Collection","Can add a new collection"],"state":"passed","body":"function () {\n      cy.step('Click the CMS button to open the panel');\n      cmsTab = sidebar.clickCMSButton();\n      cy.step(\"Click the 'New Collection' button\");\n      settings = cmsTab.clickCreateNewCMSButton();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11743,"startedAt":"2021-01-12T13:50:42.819Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","Create a Collection","Can change collection title"],"state":"passed","body":"function () {\n      cy.step('Change collection title to \"Cars\"');\n      settings.getName().clear().type('Cars');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":486,"startedAt":"2021-01-12T13:50:54.574Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","Create a Collection","Can change slug"],"state":"passed","body":"function () {\n      cy.step('Change collection slug to \"car\"');\n      settings.getSlug().clear().type('car');\n      cy.step('Assert slug preview is \"website.com/car/car-page');\n      settings.getUrl().should('have.text', 'website.com/car/car-page');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":477,"startedAt":"2021-01-12T13:50:55.061Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","With a Number Field","Can add a number field"],"state":"passed","body":"function () {\n      cy.step('Create new field with type: \"Number\"');\n      newField = settings.clickAddFieldButton();\n      form = newField.clickOption('Number');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":275,"startedAt":"2021-01-12T13:50:55.539Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","With a Number Field","Can configure number field"],"state":"passed","body":"function () {\n      cy.step('Fill number field');\n      form.fill({\n        label: 'Year',\n        helpText: 'Model year',\n        min: 1901,\n        max: 2020,\n        required: true\n      }); // TODO: Assert inputs before saving\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2100,"startedAt":"2021-01-12T13:50:55.815Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","With a Number Field","Can save number field"],"state":"passed","body":"function () {\n      cy.step('Click on save field button');\n      form.clickSaveButton();\n      cy.step('Assert that Number field was created in the Collection with name: \"Year\"');\n      newField.getLabel('label').should('not.exist');\n      settings.getCustomFieldsList().should('contain', 'Year').and('contain', '(Number)');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":145,"startedAt":"2021-01-12T13:50:57.917Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","With a Color Field","Can add a color field"],"state":"passed","body":"function () {\n      cy.step('Create new field with type: \"Color\"');\n      newField = settings.clickAddFieldButton();\n      form = newField.clickOption('Color');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":416,"startedAt":"2021-01-12T13:50:58.063Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","With a Color Field","Can configure color field"],"state":"passed","body":"function () {\n      cy.step('Fill color field');\n      form.fill({\n        label: 'Paint',\n        helpText: 'Color of the Car',\n        required: true\n      }); // TODO: Assert inputs before saving\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1418,"startedAt":"2021-01-12T13:50:58.481Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","With a Color Field","Can save color field"],"state":"passed","body":"function () {\n      cy.step('Click on save field button');\n      form.clickSaveButton();\n      cy.step('Assert that Color field was created in the Collection with name: \"Paint\"');\n      newField.getLabel('label').should('not.exist');\n      settings.getCustomFieldsList().should('contain', 'Paint').and('contain', 'Color');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":124,"startedAt":"2021-01-12T13:50:59.901Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","Create a Collection","Can create the collection"],"state":"passed","body":"function () {\n      cy.step('Click to create the collection');\n      settings.clickCreateCollectionButton();\n      settings.getName().should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":299,"startedAt":"2021-01-12T13:51:00.026Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","Generate Some Fake Data","Can create dummy data"],"state":"passed","body":"function () {\n      cy.step('Click to generate 5 dummy items');\n      cmsItems = cmsTab.getCollectionByName('Cars').getDataPage();\n      var dummyItemGenerator = cmsItems.getDummyItemGenerator();\n      dummyItemGenerator.generateDummyData(5);\n      cy.step('Assert that created items contain \"Staged for Publish\" text');\n      cmsItems.getItemsList().within(function () {\n        cy.get(\"[data-automation-id=\\\"cms-item-row\\\"]\").then(function ($row) {\n          cy.wrap($row).should('contain', 'Staged for Publish');\n        });\n      });\n      cy.step('Assert that there are 5 items in the Collection List');\n      cy.get(\"[data-automation-id=\\\"cms-item-row\\\"]\").should('have.length', 5);\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":814,"startedAt":"2021-01-12T13:51:00.327Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","Add content to the dynamic page and bind it","Select the collection page"],"state":"passed","body":"function () {\n      var pagesPanel = sidebar.clickPagesTab();\n      pagesPanel.switchPage('Cars Template');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":574,"startedAt":"2021-01-12T13:51:01.142Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","Add content to the dynamic page and bind it","Add a heading and bind it"],"state":"passed","body":"function () {\n      cy.step('Insert a new heading');\n      sidebar.clickAddElementButton().clickBuiltinTab().clickOption('Heading');\n      stylesTab.selector.setClassNames(['item-name-heading']);\n      cy.step('With the selected heading, click the properties tab');\n      var propsTab = rightPanel.clickPropertiesTab();\n      cy.step('Bind the heading text to the item name field');\n      var binding = propsTab.getBinding(0);\n      binding.click();\n      binding.field.click();\n      binding.field.clickOption('Name');\n      cy.step('Assert binding is set');\n      propsTab.getNode().within(function () {\n        cy.get(\"[data-automation-id=\\\"dyn-bind-select\\\"]\").should('contain', 'Name');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3787,"startedAt":"2021-01-12T13:51:01.718Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","Publish the project","Publish the project and store the text of the binded heading"],"state":"passed","body":"function () {\n      cy.step('Publish site');\n      workspace.getTopbar().clickPublishButton().clickPublishSelectedDomainsButton().waitUntilDonePublishing().then(function (href) {\n        canvas.within(function () {\n          cy.get('h1').eq(0).invoke('text').then(function (text1) {\n            Cypress.env('pageUrl', href);\n            Cypress.env('headingText', text1);\n          });\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4818,"startedAt":"2021-01-12T13:51:05.513Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create a Collection","Publish the project","Visit the published site and check the binded element is there with the right text"],"state":"passed","body":"function () {\n      cy.step('Assert created elements exist on published site');\n      cy.forceVisit(Cypress.env('pageUrl'));\n      cy.get('.item-name-heading').should('exist');\n      cy.get('.item-name-heading').should('have.text', Cypress.env('headingText'));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":768,"startedAt":"2021-01-12T13:51:10.335Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-smoke-create-collection.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-smoke-create-collection.spec.js","absolute":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-smoke-create-collection.spec.js","specType":"integration"},"shouldUploadVideo":false}],"browserPath":"/chromium64/chrome-linux/chrome","browserName":"chromium","browserVersion":"74.0.3729.0","osName":"linux","osVersion":"Debian - 9.13","cypressVersion":"6.2.1","config":{"env":{"baseUrl":"http://wfdev.io:3030","stagingSuperDomain":"dev.webflowtest.io","User-Agent":"cypress","RECORD_KEY":"f9ae3...c4cf9"},"integrationFolder":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow","configFile":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/cypress.json","version":"6.2.1","chromeWebSecurity":false,"browser":"chromium","video":false,"videoUploadOnPasses":false,"viewportWidth":1440,"viewportHeight":900,"defaultCommandTimeout":30000,"numTestsKeptInMemory":0,"ignoreTestFiles":"*.quarantined.spec.js","testFiles":"**/*.spec.js","fileServerFolder":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config","fixturesFolder":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/fixtures","pluginsFile":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/plugins/index.js","screenshotsFolder":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/screenshots","supportFile":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/support/index.js","videosFolder":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/videos","retries":{"runMode":2,"openMode":0},"projectId":"xfhtj7","reporter":"../../../node_modules/cypress-multi-reporters","reporterOptions":{"configFile":"reporter-config.json"},"projectRoot":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config","projectName":"cypress-config","morgan":false,"isTextTerminal":true,"socketId":"okteo","report":true,"browsers":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"animationDistanceThreshold":5,"autoOpen":false,"baseUrl":null,"blockHosts":null,"clientRoute":"/__/","componentFolder":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/cypress/component","execTimeout":60000,"experimentalComponentTesting":false,"experimentalFetchPolyfill":false,"experimentalRunEvents":false,"experimentalSourceRewriting":false,"firefoxGcInterval":{"runMode":1,"openMode":null},"hosts":null,"includeShadowDom":false,"javascripts":[],"modifyObstructiveCode":true,"namespace":"__cypress","nodeVersion":"default","pageLoadTimeout":60000,"port":44359,"reporterRoute":"/__cypress/reporter","requestTimeout":5000,"responseTimeout":30000,"screenshotOnRunFailure":true,"socketIoRoute":"/__socket.io","socketIoCookie":"__socket.io","taskTimeout":60000,"trashAssetsBeforeRuns":true,"userAgent":null,"videoCompression":32,"waitForAnimations":true,"scrollBehavior":"top","watchForFileChanges":false,"xhrRoute":"/xhrs/","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"baseUrl":{"value":null,"from":"default"},"blockHosts":{"value":null,"from":"default"},"browsers":{"value":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"from":"default"},"chromeWebSecurity":{"value":false,"from":"config"},"componentFolder":{"value":"cypress/component","from":"default"},"defaultCommandTimeout":{"value":30000,"from":"config"},"env":{"baseUrl":{"value":"http://wfdev.io:3030","from":"plugin"},"User-Agent":{"value":"cypress","from":"config"},"RECORD_KEY":{"value":"f9ae3...c4cf9","from":"env"},"stagingSuperDomain":{"value":"dev.webflowtest.io","from":"plugin"}},"execTimeout":{"value":60000,"from":"default"},"experimentalComponentTesting":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalRunEvents":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"fileServerFolder":{"value":"./","from":"config"},"firefoxGcInterval":{"value":{"runMode":1,"openMode":null},"from":"default"},"fixturesFolder":{"value":"./fixtures","from":"config"},"hosts":{"value":null,"from":"default"},"ignoreTestFiles":{"value":"*.quarantined.spec.js","from":"config"},"includeShadowDom":{"value":false,"from":"default"},"integrationFolder":{"value":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow","from":"plugin"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"value":"default","from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"pageLoadTimeout":{"value":60000,"from":"default"},"pluginsFile":{"value":"./plugins/index.js","from":"config"},"port":{"value":null,"from":"default"},"projectId":{"value":"xfhtj7","from":"config"},"reporter":{"value":"../../../node_modules/cypress-multi-reporters","from":"cli"},"reporterOptions":{"value":{"configFile":"reporter-config.json"},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":2,"openMode":0},"from":"config"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"./screenshots","from":"config"},"supportFile":{"value":"./support/index.js","from":"config"},"taskTimeout":{"value":60000,"from":"default"},"testFiles":{"value":"**/*.spec.js","from":"config"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"config"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"./videos","from":"config"},"videoUploadOnPasses":{"value":false,"from":"config"},"viewportHeight":{"value":900,"from":"config"},"viewportWidth":{"value":1440,"from":"config"},"waitForAnimations":{"value":true,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"configFile":{"value":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/cypress.json","from":"plugin"},"version":{"value":"6.2.1","from":"plugin"}},"parentTestsFolder":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/cypress","parentTestsFolderDisplay":"cypress-config/cypress","supportFolder":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/support","integrationExampleName":"examples","integrationExamplePath":"/scratch/buildkite-agent-8dee0129-54da-11eb-97fa-4a22e55b2d68-vzj8q/webflow/webflow/packages/tooling/cypress-config/cypress/integration/examples","scaffoldedFiles":[{"name":"cypress","children":[{"name":"integration","children":[{"name":"examples","children":[{"name":"actions.spec.js"},{"name":"aliasing.spec.js"},{"name":"assertions.spec.js"},{"name":"connectors.spec.js"},{"name":"cookies.spec.js"},{"name":"cypress_api.spec.js"},{"name":"files.spec.js"},{"name":"local_storage.spec.js"},{"name":"location.spec.js"},{"name":"misc.spec.js"},{"name":"navigation.spec.js"},{"name":"network_requests.spec.js"},{"name":"querying.spec.js"},{"name":"spies_stubs_clocks.spec.js"},{"name":"traversal.spec.js"},{"name":"utilities.spec.js"},{"name":"viewport.spec.js"},{"name":"waiting.spec.js"},{"name":"window.spec.js"}]}]}]},{"name":"fixtures","children":[{"name":"example.json"}]},{"name":"support","children":[{"name":"commands.js"},{"name":"index.js"}]},{"name":"plugins","children":[{"name":"index.js"}]}],"resolvedNodeVersion":"12.18.3","state":{},"proxyUrl":"http://localhost:44359","browserUrl":"http://localhost:44359/__/","reporterUrl":"http://localhost:44359/__cypress/reporter","xhrUrl":"__cypress/xhrs/"},"status":"finished"}]