[{"startedTestsAt":"2021-01-12T13:38:25.513Z","endedTestsAt":"2021-01-12T13:46:27.231Z","totalDuration":412322,"totalSuites":19,"totalTests":70,"totalFailed":1,"totalPassed":69,"totalPending":0,"totalSkipped":0,"runs":[{"stats":{"suites":1,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":21570,"startedAt":"2021-01-12T13:38:25.513Z","endedAt":"2021-01-12T13:38:47.083Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:38:25.516Z","end":"2021-01-12T13:38:47.089Z","duration":21573},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["List, and Link accessibility tests","Link to same page should have aria-current set"],"state":"passed","body":"function () {\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('TextLink');\n    workspace.escapeAllUiPanels();\n    canvas.selectElement('a');\n    canvas.within(function () {\n      cy.get('a').should('not.have.class', 'w--current').and('not.have.attr', 'aria-current', 'page');\n    });\n    var linkSettings = workspace.getRightPanel().clickPropertiesTab().linkSettings;\n    linkSettings.mode.selectRadioButtonWithLabel('Page'); // Select first dropdown menu option: \"Home\"\n\n    cy.get('.kit-fancy-select.page-select').click();\n    cy.get('.fancy-list>.fancy-item').eq(1).click();\n    canvas.within(function () {\n      cy.get('a').should('have.class', 'w--current').and('have.attr', 'aria-current', 'page');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14116,"startedAt":"2021-01-12T13:38:31.034Z","screenshots":[]}]},{"title":["List, and Link accessibility tests","Link to other page shouldn't have aria-current set"],"state":"passed","body":"function () {\n    canvas.selectElement('a');\n    var linkSettings = workspace.getRightPanel().clickPropertiesTab().linkSettings;\n    linkSettings.mode.selectRadioButtonWithLabel('URL');\n    linkSettings.url.getNode().type(\"\".concat(String('google.com'), \"{enter}\"));\n    canvas.within(function () {\n      cy.get('a').should('not.have.class', 'w--current').and('not.have.attr', 'aria-current', 'page');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":794,"startedAt":"2021-01-12T13:38:45.161Z","screenshots":[]}]},{"title":["List, and Link accessibility tests","List should have the correct role"],"state":"passed","body":"function () {\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('List');\n    workspace.escapeAllUiPanels();\n    canvas.within(function () {\n      cy.get('ul').should('have.attr', 'role', 'list');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1125,"startedAt":"2021-01-12T13:38:45.956Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/accessibility/list-link.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/accessibility/list-link.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/accessibility/list-link.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":11,"passes":11,"pending":0,"skipped":0,"failures":0,"duration":45501,"startedAt":"2021-01-12T13:38:54.797Z","endedAt":"2021-01-12T13:39:40.298Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":11,"passes":11,"pending":0,"failures":0,"start":"2021-01-12T13:38:54.799Z","end":"2021-01-12T13:39:40.306Z","duration":45507},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty); // The default timeout is overwritten to make sure the text fails quicker than a default value.\n    // Assertion done in this test doesn't require more than a second to verify, so 5 seconds is a secure value.\n\n    Cypress.config({\n      defaultCommandTimeout: 10000\n    });\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutStickyNav"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14929,"startedAt":"2021-01-12T13:39:00.106Z","screenshots":[]}]},{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutHero"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2298,"startedAt":"2021-01-12T13:39:15.046Z","screenshots":[]}]},{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutHeroOverlay"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2474,"startedAt":"2021-01-12T13:39:17.345Z","screenshots":[]}]},{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutCardsSection"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2706,"startedAt":"2021-01-12T13:39:19.820Z","screenshots":[]}]},{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutMainContent"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2691,"startedAt":"2021-01-12T13:39:22.528Z","screenshots":[]}]},{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutFeatureSection"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2247,"startedAt":"2021-01-12T13:39:25.220Z","screenshots":[]}]},{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutGallery"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2356,"startedAt":"2021-01-12T13:39:27.468Z","screenshots":[]}]},{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutCallToAction"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2358,"startedAt":"2021-01-12T13:39:29.826Z","screenshots":[]}]},{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutSubscribeForm"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2050,"startedAt":"2021-01-12T13:39:32.185Z","screenshots":[]}]},{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutContactForm"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3179,"startedAt":"2021-01-12T13:39:34.237Z","screenshots":[]}]},{"title":["Add all layouts from Add Panel: Layouts","Prebuilt Layouts","Prebuilt Layout: LayoutFooter"],"state":"passed","body":"function () {\n          canvas = workspace.getCanvas();\n          workspace.getLeftSidebar().clickAddElementButton().clickLayoutsTab();\n          cy.step(\"show screenshot tooltip\");\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('mouseover');\n          cy.getByDataAutomationId(\"AddTabScreenshotTooltip-\".concat(item.id)).should('be.visible');\n          cy.step(\"add \".concat(item.id, \" to canvas\"));\n          cy.getByDataAutomationId(\"add-tab-\".concat(item.id)).trigger('click');\n          cy.step(\"assert \".concat(item.id, \" was added with class\"));\n          canvas.within(function () {\n            cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n          });\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n          cy.step(\"remove \".concat(item.id));\n          canvas.selectElement(\".\".concat(item[\"class\"]));\n          cy.get('body').type('{backspace}');\n          cy.step('close all open panels');\n          workspace.escapeAllUiPanels();\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2878,"startedAt":"2021-01-12T13:39:37.418Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/add-all-layouts.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/add-all-layouts.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/add-all-layouts.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":6,"tests":17,"passes":17,"pending":0,"skipped":0,"failures":0,"duration":76207,"startedAt":"2021-01-12T13:39:47.725Z","endedAt":"2021-01-12T13:41:03.932Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":5,"tests":17,"passes":17,"pending":0,"failures":0,"start":"2021-01-12T13:39:47.727Z","end":"2021-01-12T13:41:03.938Z","duration":76211},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty); // The default timeout is overwritten to make sure the text fails quicker than a default value.\n    // Assertion done in this test doesn't require more than a second to verify, so 5 seconds is a secure value.\n\n    Cypress.config({\n      defaultCommandTimeout: 10000\n    });\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","layout","section, mini-settings: false"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":16324,"startedAt":"2021-01-12T13:39:52.736Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","layout","container, mini-settings: false"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3518,"startedAt":"2021-01-12T13:40:09.073Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","layout","row, mini-settings: true"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3172,"startedAt":"2021-01-12T13:40:12.592Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","basic","div, mini-settings: false"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3298,"startedAt":"2021-01-12T13:40:15.766Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","basic","linkBlock, mini-settings: true"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3544,"startedAt":"2021-01-12T13:40:19.065Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","basic","button, mini-settings: true"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3297,"startedAt":"2021-01-12T13:40:22.610Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","basic","list, mini-settings: true"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3182,"startedAt":"2021-01-12T13:40:25.908Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","basic","listItem, mini-settings: false"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step('add List and ListItem element to canvas');\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('List');\n            workspace.getRightPanel().getStylesTab().selector.setClassNames(['list']);\n            cy.step('Assert that list and list-item are visible on the canvas');\n            canvas.within(function () {\n              cy.get('.list').should('have.length', 1);\n              cy.get('.list > li').should('have.length', 3);\n            });\n            cy.step(\"remove .list\");\n            canvas.selectElement(\".list\");\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2552,"startedAt":"2021-01-12T13:40:29.091Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","typography","heading, mini-settings: true"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3579,"startedAt":"2021-01-12T13:40:31.644Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","typography","paragraph, mini-settings: false"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3763,"startedAt":"2021-01-12T13:40:35.224Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","typography","textLink, mini-settings: true"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3968,"startedAt":"2021-01-12T13:40:38.988Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","typography","textBlock, mini-settings: false"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3510,"startedAt":"2021-01-12T13:40:42.957Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","typography","blockquote, mini-settings: false"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3220,"startedAt":"2021-01-12T13:40:46.468Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","typography","richText, mini-settings: false"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3717,"startedAt":"2021-01-12T13:40:49.690Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","media","image, mini-settings: true"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3504,"startedAt":"2021-01-12T13:40:53.408Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","media","video, mini-settings: true"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3816,"startedAt":"2021-01-12T13:40:56.914Z","screenshots":[]}]},{"title":["Add all nodes from Add Panel to canvas and verify miniSettings existence","media","youtube, mini-settings: true"],"state":"passed","body":"function () {\n            canvas = workspace.getCanvas();\n            cy.step(\"add \".concat(item.name, \" to canvas\"));\n            workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption(item.addTabId);\n            workspace.getRightPanel().getStylesTab().selector.setClassNames([item[\"class\"]]);\n            cy.step(\"assert \".concat(item.name, \" was added\"));\n            canvas.within(function () {\n              cy.get(\".\".concat(item[\"class\"])).should('have.length', 1);\n            });\n            cy.step('assert mini settings visibility');\n            canvas.miniSettings.getNode().should(item.hasSettings ? 'exist' : 'not.exist');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n            cy.step(\"remove \".concat(item.name));\n            canvas.selectElement(\".\".concat(item[\"class\"]));\n            cy.get('body').type('{backspace}');\n            cy.step('close all open panels');\n            workspace.escapeAllUiPanels();\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3199,"startedAt":"2021-01-12T13:41:00.731Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/add-all-nodes-01.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/add-all-nodes-01.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/add-all-nodes-01.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":0,"pending":0,"skipped":0,"failures":1,"duration":107357,"startedAt":"2021-01-12T13:41:11.137Z","endedAt":"2021-01-12T13:42:58.494Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":0,"pending":0,"failures":1,"start":"2021-01-12T13:41:11.140Z","end":"2021-01-12T13:42:58.506Z","duration":107366},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.productsSingleItem);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Commerce Add To Cart Wrapper Creation","Add To Cart","should add an Add To Cart Wrapper to the Dynamo Wrapper"],"state":"failed","body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.cmsSource).as('cms-source');\n\n      cy.step('Get the left sidebar E-commerce menu');\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Products Template');\n      cy.step('Click to open the left sidebar Add Element menu');\n      var addElement = workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab();\n      cy.step('Click to add the add to cart wrapper to the canvas');\n      addElement.clickOption('CommerceAddToCartWrapper');\n      cy.step('Wait on the cms-source endpoint');\n      cy.wait('@cms-source');\n      cy.step('Assert that the commerce add to cart form is visible');\n      workspace.getCanvas().within(function () {\n        cy.get('.w-commerce-commerceaddtocartform').should('be.visible');\n      });\n    }","displayError":"AssertionError: Context: Add To Cart\nTest: should add an Add To Cart Wrapper to the Dynamo Wrapper\n----------\nTimed out retrying after 30000ms: Expected to find element: `[data-automation-id=\"left-sidebar-pages-button\"]`, but never found it.\n\nLast logged steps:\n1. Get the left sidebar E-commerce menu\n2. Get the left sidebar E-commerce menu\n3. Get the left sidebar E-commerce menu\n\n    at LeftSidebar.clickPagesTab (http://wfdev.io:3030/__cypress/tests?p=../../../entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js:32908:16)\n    at Context.eval (http://wfdev.io:3030/__cypress/tests?p=../../../entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js:113:34)","attempts":[{"state":"failed","error":{"name":"AssertionError","message":"Context: Add To Cart\nTest: should add an Add To Cart Wrapper to the Dynamo Wrapper\n----------\nTimed out retrying after 30000ms: Expected to find element: `[data-automation-id=\"top-bar-page-name\"]`, but never found it.\n\nLast logged steps:\n1. Get the left sidebar E-commerce menu\n","stack":"    at PagesTab.switchPage (http://wfdev.io:3030/__cypress/tests?p=../../../entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js:40987:58)\n    at Context.eval (http://wfdev.io:3030/__cypress/tests?p=../../../entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js:113:50)","codeFrame":{"line":106,"column":8,"originalFile":"cypress-app-controls/lib/designer/ui/modes/Workspace/LeftSidebar/PagesTab/index.js","relativeFile":"cypress-app-controls/lib/designer/ui/modes/Workspace/LeftSidebar/PagesTab/index.js","absoluteFile":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress-app-controls/lib/designer/ui/modes/Workspace/LeftSidebar/PagesTab/index.js","frame":"  104 |       .click({force: true})\n  105 |       .get('[data-automation-id=\"top-bar-page-name\"]')\n> 106 |       .should('have.text', pageName);\n      |        ^\n  107 |   }\n  108 | }\n  109 | ","language":"js"}},"videoTimestamp":null,"duration":41267,"startedAt":"2021-01-12T13:41:16.651Z","screenshots":[{"name":null,"takenAt":"2021-01-12T13:41:57.747Z","path":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/screenshots/entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js/Commerce Add To Cart Wrapper Creation -- Add To Cart -- should add an Add To Cart Wrapper to the Dynamo Wrapper (failed).png","height":932,"width":1050}]},{"state":"failed","error":{"name":"AssertionError","message":"Context: Add To Cart\nTest: should add an Add To Cart Wrapper to the Dynamo Wrapper\n----------\nTimed out retrying after 30000ms: Expected to find element: `[data-automation-id=\"left-sidebar-pages-button\"]`, but never found it.\n\nLast logged steps:\n1. Get the left sidebar E-commerce menu\n2. Get the left sidebar E-commerce menu\n","stack":"    at LeftSidebar.clickPagesTab (http://wfdev.io:3030/__cypress/tests?p=../../../entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js:32908:16)\n    at Context.eval (http://wfdev.io:3030/__cypress/tests?p=../../../entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js:113:34)","codeFrame":{"line":108,"column":14,"originalFile":"cypress-app-controls/lib/designer/ui/modes/Workspace/LeftSidebar/index.js","relativeFile":"cypress-app-controls/lib/designer/ui/modes/Workspace/LeftSidebar/index.js","absoluteFile":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress-app-controls/lib/designer/ui/modes/Workspace/LeftSidebar/index.js","frame":"  106 | \n  107 |   clickPagesTab() {\n> 108 |     this._cy.get(`[data-automation-id=\"left-sidebar-pages-button\"]`).click();\n      |              ^\n  109 |     return new PagesTab(this._cy);\n  110 |   }\n  111 | ","language":"js"}},"videoTimestamp":null,"duration":30209,"startedAt":"2021-01-12T13:41:57.953Z","screenshots":[{"name":null,"takenAt":"2021-01-12T13:42:28.007Z","path":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/screenshots/entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js/Commerce Add To Cart Wrapper Creation -- Add To Cart -- should add an Add To Cart Wrapper to the Dynamo Wrapper (failed) (attempt 2).png","height":932,"width":1050}]},{"state":"failed","error":{"name":"AssertionError","message":"Context: Add To Cart\nTest: should add an Add To Cart Wrapper to the Dynamo Wrapper\n----------\nTimed out retrying after 30000ms: Expected to find element: `[data-automation-id=\"left-sidebar-pages-button\"]`, but never found it.\n\nLast logged steps:\n1. Get the left sidebar E-commerce menu\n2. Get the left sidebar E-commerce menu\n3. Get the left sidebar E-commerce menu\n","stack":"    at LeftSidebar.clickPagesTab (http://wfdev.io:3030/__cypress/tests?p=../../../entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js:32908:16)\n    at Context.eval (http://wfdev.io:3030/__cypress/tests?p=../../../entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js:113:34)","codeFrame":{"line":108,"column":14,"originalFile":"cypress-app-controls/lib/designer/ui/modes/Workspace/LeftSidebar/index.js","relativeFile":"cypress-app-controls/lib/designer/ui/modes/Workspace/LeftSidebar/index.js","absoluteFile":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress-app-controls/lib/designer/ui/modes/Workspace/LeftSidebar/index.js","frame":"  106 | \n  107 |   clickPagesTab() {\n> 108 |     this._cy.get(`[data-automation-id=\"left-sidebar-pages-button\"]`).click();\n      |              ^\n  109 |     return new PagesTab(this._cy);\n  110 |   }\n  111 | ","language":"js"}},"videoTimestamp":null,"duration":30266,"startedAt":"2021-01-12T13:42:28.193Z","screenshots":[{"name":null,"takenAt":"2021-01-12T13:42:58.288Z","path":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/screenshots/entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js/Commerce Add To Cart Wrapper Creation -- Add To Cart -- should add an Add To Cart Wrapper to the Dynamo Wrapper (failed) (attempt 3).png","height":932,"width":1050}]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":27285,"startedAt":"2021-01-12T13:43:06.631Z","endedAt":"2021-01-12T13:43:33.916Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:43:06.636Z","end":"2021-01-12T13:43:33.926Z","duration":27290},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Navigation atom","should show Navbar in the Finder results if one of these letters or combinations are met. 'n', 'a', 'v', 'b', 'r', 'nav', 'bar'"],"state":"passed","body":"function () {\n    cy.step('Open the finder input window by typing command+k');\n    cy.get('body').type('{command} k');\n    cy.step(\"Type 'n' into the Finder input\");\n    getInFinder('input').type('n');\n    cy.step('Assert that Navbar shows up in the Finder search results');\n    getInFinder('div').contains('Navbar').should('exist');\n    cy.step('Clear the finder input');\n    getInFinder('input').clear();\n    cy.step(\"Type 'a' into the Finder input\");\n    getInFinder('input').type('a');\n    cy.step('Assert that Navbar shows up in the Finder search results');\n    getInFinder('div').contains('Navbar').should('exist');\n    cy.step('Clear the finder input');\n    getInFinder('input').clear();\n    cy.step(\"Type 'v' into the Finder input\");\n    getInFinder('input').type('v');\n    cy.step('Assert that Navbar shows up in the Finder search results');\n    getInFinder('div').contains('Navbar').should('exist');\n    cy.step('Clear the finder input');\n    getInFinder('input').clear();\n    cy.step(\"Type 'b' into the Finder input\");\n    getInFinder('input').type('b');\n    cy.step('Assert that Navbar shows up in the Finder search results');\n    cy.get('div').contains('Navbar').should('exist');\n    cy.step('Clear the finder input');\n    getInFinder('input').clear();\n    cy.step(\"Type 'r' into the Finder input\");\n    getInFinder('input').type('r');\n    cy.step('Assert that Navbar shows up in the Finder search results');\n    getInFinder('div').contains('Navbar').should('exist');\n    cy.step('Clear the finder input');\n    getInFinder('input').clear();\n    cy.step(\"Type 'nav' into the Finder input\");\n    getInFinder('input').type('nav');\n    cy.step('Assert that Navbar shows up in the Finder search results');\n    getInFinder('div').contains('Navbar').should('exist');\n    cy.step('Clear the finder input');\n    getInFinder('input').clear();\n    cy.step(\"Type 'bar' into the Finder input\");\n    getInFinder('input').type('bar');\n    cy.step('Assert that Navbar shows up in the Finder search results');\n    getInFinder('div').contains('Navbar').should('exist');\n    cy.step('Clear the finder input');\n    getInFinder('input').clear();\n    cy.step('Select the body element and simulate a click (exits out of the Finder input)');\n    cy.get('body').click();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":17860,"startedAt":"2021-01-12T13:43:11.507Z","screenshots":[]}]},{"title":["Navigation atom","should not show Navbar in the results if the search contains letters not contained in NavBar or more letters than appear"],"state":"passed","body":"function () {\n    cy.step('Open the finder input window by typing command+k');\n    cy.get('body').type('{command} k');\n    cy.step(\"Type 't' into the Finder input\");\n    getInFinder('input').type('t');\n    cy.step('Assert that Navbar does not show up in the Finder search results');\n    getInFinder('div').contains('Navbar').should('not.exist');\n    cy.step('Clear the finder input');\n    getInFinder('input').clear();\n    cy.step(\"Type 'aa' into the Finder input\");\n    getInFinder('input').type('aaa');\n    cy.step('Assert that Navbar does not show up in the Finder search results');\n    getInFinder('div').contains('Navbar').should('not.exist');\n    cy.step('Clear the finder input');\n    getInFinder('input').clear();\n    cy.step('Select the body element and simulate a click (exits out of the Finder input)');\n    cy.get('body').click();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1536,"startedAt":"2021-01-12T13:43:29.394Z","screenshots":[]}]},{"title":["Navigation atom","should render the Navbar on the Canvas when the Navbar component is clicked"],"state":"passed","body":"function () {\n    canvas = workspace.getCanvas();\n    cy.step(\"Add the nav widget element to the Canvas and give it the class name 'navbar'\");\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('NavbarWrapper');\n    workspace.getRightPanel().getStylesTab().selector.setClassNames(['navbar']);\n    cy.step(\"Direct Cypress to focus on the iframe with the id 'site-iframe-next' (the canvas iframe)\");\n    canvas.within(function () {\n      cy.get('.navbar').should('exist');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2976,"startedAt":"2021-01-12T13:43:30.931Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/addTab-navbar.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/addTab-navbar.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/addTab-navbar.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":6,"passes":6,"pending":0,"skipped":0,"failures":0,"duration":25536,"startedAt":"2021-01-12T13:43:41.736Z","endedAt":"2021-01-12T13:44:07.272Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":6,"passes":6,"pending":0,"failures":0,"start":"2021-01-12T13:43:41.738Z","end":"2021-01-12T13:44:07.275Z","duration":25537},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    canvas = workspace.getCanvas();\n    miniSettings = canvas.miniSettings;\n    cy.clearSteps();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Facebook settings check","Setup"],"state":"passed","body":"function () {\n    cy.step('Add Facebook element to the canvas');\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Facebook');\n    workspace.getRightPanel().getStylesTab().selector.setClassNames(['facebook']);\n    cy.step('Assert if the minisettings are visible');\n    miniSettings.getNode().should('be.visible');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":15089,"startedAt":"2021-01-12T13:43:46.880Z","screenshots":[]}]},{"title":["Facebook settings check","Default Values"],"state":"passed","body":"function () {\n    miniSettings.getNode().within(function () {\n      cy.step('Assert that URL field is empty');\n      cy.get(fields.url).should('be.visible').and('have.value', '');\n      cy.step('Assert that Standard layout is the only active one');\n      cy.get(fields.layout.standard).should('have.attr', 'aria-checked', 'true');\n      cy.get(fields.layout.box).should('have.attr', 'aria-checked', 'false');\n      cy.get(fields.layout.button).should('have.attr', 'aria-checked', 'false');\n      cy.step('Assert default width and height (225 x 35)');\n      cy.get(fields.width).should('be.visible').and('have.value', '225');\n      cy.get(fields.height).should('be.visible').and('have.value', '35');\n      cy.step('Assert that locale is set to English (US) by default');\n      cy.get(fields.dropdownTrigger).should('contain', 'English (US)');\n    });\n    cy.step('Assert facebook widget on canvas has default values');\n    canvas.within(function () {\n      cy.get(facebookFrame).should('have.attr', 'src').and('match', /facebook.com%2Fwebflow/g).and('match', /layout=standard/g).and('match', /locale=en_US/g);\n      cy.get(facebookFrame).should('have.attr', 'style').and('match', /width: 225px; height: 35px;/g);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":213,"startedAt":"2021-01-12T13:44:01.979Z","screenshots":[]}]},{"title":["Facebook settings check","Change URL to \"google\""],"state":"passed","body":"function () {\n    cy.step('Change URL to \"facebook.com/google\"');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.url).clear().type('facebook.com/google').blur();\n    });\n    cy.step('Assert that the canvas node has updated href');\n    canvas.within(function () {\n      cy.get(facebookFrame).should('have.attr', 'src').and('match', /facebook.com%2Fgoogle/g);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2245,"startedAt":"2021-01-12T13:44:02.193Z","screenshots":[]}]},{"title":["Facebook settings check","Change Layout"],"state":"passed","body":"function () {\n    cy.step('Change layout to \"Box\"');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.layout.box).click().should('have.attr', 'aria-checked', 'true');\n    });\n    cy.step('Assert that the canvas node has updated layout');\n    canvas.within(function () {\n      cy.get(facebookFrame).should('have.attr', 'src').and('match', /layout=box/g);\n    });\n    cy.step('Change layout to \"Button\"');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.layout.button).click().should('have.attr', 'aria-checked', 'true');\n    });\n    cy.step('Assert that the canvas node has updated layout');\n    canvas.within(function () {\n      cy.get(facebookFrame).should('have.attr', 'src').and('match', /layout=button/g);\n    });\n    cy.step('Change layout to \"Standard\"');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.layout.standard).click().should('have.attr', 'aria-checked', 'true');\n    });\n    cy.step('Assert that the canvas node has updated layout');\n    canvas.within(function () {\n      cy.get(facebookFrame).should('have.attr', 'src').and('match', /layout=standard/g);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":853,"startedAt":"2021-01-12T13:44:04.441Z","screenshots":[]}]},{"title":["Facebook settings check","Change size"],"state":"passed","body":"function () {\n    cy.step('Change size to \"width: 300px\" & \"height: 100px\"');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.width).clear().type('300').blur();\n      cy.get(fields.height).clear().type('100').blur();\n    });\n    cy.step('Assert that the canvas node has updated style');\n    canvas.within(function () {\n      cy.get(facebookFrame).should('have.attr', 'style').and('match', /width: 300px; height: 100px/g);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":972,"startedAt":"2021-01-12T13:44:05.295Z","screenshots":[]}]},{"title":["Facebook settings check","Change locale to \"Esperanto\""],"state":"passed","body":"function () {\n    miniSettings.getNode().within(function () {\n      cy.step('Change Locale to \"Esperanto\"');\n      cy.get(fields.dropdownTrigger).click();\n    });\n    cy.get('[data-automation-id=\"overlay\"]').within(function () {\n      cy.get('div[role=\"option\"]').contains('Esperanto').click();\n    });\n    cy.step('Assert that the correct locale is set');\n    cy.get(\"\".concat(fields.dropdownTrigger, \" div\")).should('have.text', 'Esperanto');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1003,"startedAt":"2021-01-12T13:44:06.268Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/eachNode/facebook.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/eachNode/facebook.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/eachNode/facebook.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":9,"passes":9,"pending":0,"skipped":0,"failures":0,"duration":33282,"startedAt":"2021-01-12T13:44:14.978Z","endedAt":"2021-01-12T13:44:48.260Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":9,"passes":9,"pending":0,"failures":0,"start":"2021-01-12T13:44:14.980Z","end":"2021-01-12T13:44:48.264Z","duration":33284},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.formElements);\n    canvas = workspace.getCanvas();\n    miniSettings = canvas.miniSettings;\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.formElements);\n    canvas = workspace.getCanvas();\n    miniSettings = canvas.miniSettings;\n    stylesTab = workspace.getRightPanel().getStylesTab();\n    cy.clearSteps();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Form Checkbox settings check","Setup"],"state":"passed","body":"function () {\n    cy.step('Select input and open mini-settings');\n    canvas.selectElement(checkboxContainer);\n    miniSettings.open();\n    cy.step('Assert that mini-settings are open');\n    miniSettings.getNode().should('be.visible');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12848,"startedAt":"2021-01-12T13:44:20.269Z","screenshots":[]}]},{"title":["Form Checkbox settings check","Assert default values"],"state":"passed","body":"function () {\n    cy.step('Assert name, required, startChecked fields are default');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.name).should('have.value', 'Checkbox');\n      cy.get(fields.required).find('svg').should('have.attr', 'style').and('match', /display: none/);\n      cy.get(fields.startChecked).find('svg').should('have.attr', 'style').and('match', /display: none/);\n    });\n    cy.step('Assert name, id, data-name attributes on canvas element are default');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('have.attr', 'name', 'checkbox').and('have.attr', 'id', 'checkbox').and('have.attr', 'data-name', 'Checkbox').should('have.prop', 'tagName', 'INPUT');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":85,"startedAt":"2021-01-12T13:44:33.125Z","screenshots":[]}]},{"title":["Form Checkbox settings check","Change Name"],"state":"passed","body":"function () {\n    cy.step('Change name to \"New Field\"');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.name).clear().type('New Field').blur();\n    });\n    cy.step('Assert name, data-name, and id attributes have new values');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('have.attr', 'name', 'New-Field').and('have.attr', 'data-name', 'New Field') // FIXME: id=\"New-Field\"\n      // https://github.com/webflow/webflow/issues/27818\n      .and('have.attr', 'id', 'New Field');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":615,"startedAt":"2021-01-12T13:44:33.211Z","screenshots":[]}]},{"title":["Form Checkbox settings check","Change Required"],"state":"passed","body":"function () {\n    cy.step('Click Required to check it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Required\"]').click();\n    });\n    cy.step('Assert required attribute is visible on the element');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('have.attr', 'required');\n    });\n    cy.step('Click Required to uncheck it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Required\"]').click();\n    });\n    cy.step('Assert required attribute is no longer visible on the element');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('not.have.attr', 'required');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":413,"startedAt":"2021-01-12T13:44:33.827Z","screenshots":[]}]},{"title":["Form Checkbox settings check","Change Start Checked"],"state":"passed","body":"function () {\n    cy.step('Click Start Checked to check it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Start Checked\"]').click();\n    });\n    cy.step('Assert input is checked');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('be.checked');\n    });\n    cy.step('Click Start Checked to uncheck it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Start Checked\"]').click();\n    });\n    cy.step('Assert input is no longer checked');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('not.be.checked');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":571,"startedAt":"2021-01-12T13:44:34.241Z","screenshots":[]}]},{"title":["Form Checkbox settings check","Change checkbox field type to custom and back"],"state":"passed","body":"function () {\n    cy.step('Click Custom to make checkbox be displayed in custom way');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.customTypeButton).click();\n    });\n    cy.step('Check that checkbox field type was changed to custom');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('have.prop', 'tagName', 'DIV');\n    });\n    cy.step('Click Native to make checkbox be displayed in native way');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.nativeTypeButton).click();\n    });\n    cy.step('Check that checkbox field type was changed to native');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('have.prop', 'tagName', 'INPUT');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":383,"startedAt":"2021-01-12T13:44:34.813Z","screenshots":[]}]},{"title":["Form Custom Checkbox States changes","Setup"],"state":"passed","body":"function () {\n    cy.step('Select input and open mini-settings');\n    canvas.selectElement(checkboxInput);\n    miniSettings.open();\n    cy.step('Switch checkbox type to custom one');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.customTypeButton).click();\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10299,"startedAt":"2021-01-12T13:44:35.197Z","screenshots":[]}]},{"title":["Form Custom Checkbox States changes","Checked pseudo state update custom checkbox"],"state":"passed","body":"function () {\n    cy.step('Switch custom checkbox state to checked');\n    stylesTab.selector.setState('Checked');\n    cy.step('Check that custom checkbox has right custom node state class');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('have.class', 'w--redirected-checked');\n    });\n    cy.step('Switch custom checkbox state to none');\n    stylesTab.selector.setState('None');\n    cy.step('Check that custom checkbox has no custom node state class');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('not.have.class', 'w--redirected-checked');\n    });\n    cy.step('Switch custom checkbox state to focused');\n    stylesTab.selector.setState('Focused');\n    cy.step('Check that custom checkbox has right custom node state class');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('have.class', 'w--redirected-focus');\n    });\n    cy.step('Switch custom checkbox state to none');\n    stylesTab.selector.setState('None');\n    cy.step('Check that custom checkbox has no custom node state class');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('not.have.class', 'w--redirected-focus');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1960,"startedAt":"2021-01-12T13:44:45.504Z","screenshots":[]}]},{"title":["Form Custom Checkbox States changes","Change Start Checked"],"state":"passed","body":"function () {\n    cy.step('Click Start Checked to check it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Start Checked\"]').click();\n    });\n    cy.step('Assert input has checked class');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('have.class', 'w--redirected-checked');\n    });\n    cy.step('Click Start Checked to uncheck it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Start Checked\"]').click();\n    });\n    cy.step('Assert input is no longer having checked class');\n    canvas.within(function () {\n      cy.get(checkboxInput).should('not.have.class', 'w--redirected-checked');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":794,"startedAt":"2021-01-12T13:44:47.465Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/eachNode/form_checkbox.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/eachNode/form_checkbox.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/eachNode/form_checkbox.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":7,"passes":7,"pending":0,"skipped":0,"failures":0,"duration":23658,"startedAt":"2021-01-12T13:44:55.842Z","endedAt":"2021-01-12T13:45:19.500Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":7,"passes":7,"pending":0,"failures":0,"start":"2021-01-12T13:44:55.846Z","end":"2021-01-12T13:45:19.507Z","duration":23661},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.formElements);\n    canvas = workspace.getCanvas();\n    miniSettings = canvas.miniSettings;\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Form Input settings check","Setup"],"state":"passed","body":"function () {\n    cy.step('Select input and open mini-settings');\n    canvas.selectElement(inputElement);\n    miniSettings.open();\n    cy.step('Assert that mini-settings are open');\n    miniSettings.getNode().should('be.visible');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13050,"startedAt":"2021-01-12T13:45:00.679Z","screenshots":[]}]},{"title":["Form Input settings check","Assert default values"],"state":"passed","body":"function () {\n    cy.step('Assert name, placeholder, type, required, and autofocus attributes are default');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.name).should('have.value', 'Field');\n      cy.get(fields.placeholder).should('have.value', 'Example Text');\n      cy.get(fields.type).should('have.text', 'Plain');\n      cy.get(fields.required).find('svg').should('have.attr', 'style').and('match', /display: block/);\n      cy.get(fields.autofocus).find('svg').should('have.attr', 'style').and('match', /display: none/);\n    });\n    cy.step('Assert name, data-name, placeholder, type, and id attributes on the canvas element');\n    canvas.within(function () {\n      cy.get(inputElement).should('have.attr', 'name', 'field').and('have.attr', 'data-name', 'Field').and('have.attr', 'placeholder', 'Example Text').and('have.attr', 'type', 'text').and('have.attr', 'id', 'field');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":111,"startedAt":"2021-01-12T13:45:13.746Z","screenshots":[]}]},{"title":["Form Input settings check","Change Name"],"state":"passed","body":"function () {\n    cy.step('Change field name to \"New Field\"');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.name).clear().type('New Field').blur();\n    });\n    cy.step('Assert name, data-name, and id attributes on the canvas element have updated');\n    canvas.within(function () {\n      cy.get(inputElement).should('have.attr', 'name', 'New-Field').and('have.attr', 'data-name', 'New Field').and('have.attr', 'id', 'New-Field');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":652,"startedAt":"2021-01-12T13:45:13.858Z","screenshots":[]}]},{"title":["Form Input settings check","Change Placeholder"],"state":"passed","body":"function () {\n    cy.step('Change placeholder to \"New Placeholder\"');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.placeholder).clear().type('New Placeholder').blur();\n    });\n    cy.step('Assert placeholder attribute on the canvas element has updated');\n    canvas.within(function () {\n      cy.get(inputElement).should('have.attr', 'placeholder', 'New Placeholder');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2312,"startedAt":"2021-01-12T13:45:14.511Z","screenshots":[]}]},{"title":["Form Input settings check","Change Type"],"state":"passed","body":"function () {\n    cy.step('Loop through an array of input types');\n    var types = ['text', 'email', 'password', 'tel', 'number'];\n    types.map(function (type) {\n      miniSettings.getNode().within(function () {\n        cy.step('Open Type dropdown');\n        cy.get(_cypressAppControls.GetElement.byAutomationId('dyn-bind-select')).click();\n        cy.step(\"Select <input type=\\\"\".concat(type, \"\\\" />\"));\n        cy.get(_cypressAppControls.GetElement.byAutomationId('dyn-bind-select-ul')).find(\"li[value=\\\"\".concat(type, \"\\\"]\")).trigger('mouseover').click();\n      });\n      canvas.within(function () {\n        cy.step(\"Assert element's type attribute has changed to \".concat(type));\n        cy.get(inputElement).should('have.attr', 'type', type);\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1784,"startedAt":"2021-01-12T13:45:16.827Z","screenshots":[]}]},{"title":["Form Input settings check","Change Required"],"state":"passed","body":"function () {\n    cy.step('Click Required to uncheck it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Required\"]').click();\n    });\n    cy.step('Assert required attribute is no longer visible on the element');\n    canvas.within(function () {\n      cy.get(inputElement).should('not.have.attr', 'required');\n    });\n    cy.step('Click Required to check it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Required\"]').click();\n    });\n    cy.step('Assert required attribute is visible on the element');\n    canvas.within(function () {\n      cy.get(inputElement).should('have.attr', 'required');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":498,"startedAt":"2021-01-12T13:45:18.612Z","screenshots":[]}]},{"title":["Form Input settings check","Change Autofocus"],"state":"passed","body":"function () {\n    cy.step('Click Autofocus to uncheck it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Autofocus\"]').click();\n    });\n    cy.step('Assert autofocus attribute is visible on the element');\n    canvas.within(function () {\n      cy.get(inputElement).should('have.attr', 'autofocus');\n    });\n    cy.step('Click Autofocus to uncheck it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Autofocus\"]').click();\n    });\n    cy.step('Assert autofocus attribute is no longer visible on the element');\n    canvas.within(function () {\n      cy.get(inputElement).should('not.have.attr', 'autofocus');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":388,"startedAt":"2021-01-12T13:45:19.111Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/eachNode/form_input.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/eachNode/form_input.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/eachNode/form_input.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":9,"passes":9,"pending":0,"skipped":0,"failures":0,"duration":31809,"startedAt":"2021-01-12T13:45:27.344Z","endedAt":"2021-01-12T13:45:59.153Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":9,"passes":9,"pending":0,"failures":0,"start":"2021-01-12T13:45:27.351Z","end":"2021-01-12T13:45:59.159Z","duration":31808},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.formElements);\n    canvas = workspace.getCanvas();\n    miniSettings = canvas.miniSettings;\n    stylesTab = workspace.getRightPanel().getStylesTab();\n    cy.clearSteps();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.formElements);\n\n      cy.clearSteps();\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Form Radio Button settings check","Setup"],"state":"passed","body":"function () {\n    cy.step('Select input and open mini-settings');\n    canvas.selectElement(radioContainer);\n    miniSettings.open();\n    cy.step('Assert that mini-settings are open');\n    miniSettings.getNode().should('be.visible');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12889,"startedAt":"2021-01-12T13:45:32.258Z","screenshots":[]}]},{"title":["Form Radio Button settings check","Assert default values"],"state":"passed","body":"function () {\n    cy.step('Assert group name, choice value, and required fields are default');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.groupName).should('have.value', 'Radio');\n      cy.get(fields.choiceValue).should('have.value', 'Radio');\n      cy.get(fields.required).find('svg').should('have.attr', 'style').and('match', /display: none/);\n    });\n    cy.step('Assert group name, choice value, and required attributes on canvas element are default');\n    canvas.within(function () {\n      cy.get(radioInput).should('have.attr', 'name', 'radio').and('have.attr', 'id', 'radio').and('have.attr', 'data-name', 'Radio').should('have.prop', 'tagName', 'INPUT');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":77,"startedAt":"2021-01-12T13:45:45.158Z","screenshots":[]}]},{"title":["Form Radio Button settings check","Change Group Name"],"state":"passed","body":"function () {\n    cy.step('Change group name to \"New Group Name\"');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.groupName).clear().type('New Group Name').blur();\n    });\n    cy.step('Assert name and data-name attributes have new values');\n    canvas.within(function () {\n      cy.get(radioInput).should('have.attr', 'name', 'New-Group-Name').and('have.attr', 'data-name', 'New Group Name').and('have.attr', 'id', 'radio');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":713,"startedAt":"2021-01-12T13:45:45.236Z","screenshots":[]}]},{"title":["Form Radio Button settings check","Change Choice Value"],"state":"passed","body":"function () {\n    cy.step('Change choice value to \"New Choice\"');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.choiceValue).clear().type('New Choice').blur();\n    });\n    cy.step('Assert value and id attributes have new values');\n    canvas.within(function () {\n      cy.get(radioInput) // FIXME: id=\"New-Field\"\n      // https://github.com/webflow/webflow/issues/27818\n      .should('have.attr', 'id', 'New Choice').and('have.attr', 'value', 'New Choice');\n      cy.get(radioLabelText).should('have.attr', 'for', 'New Choice');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":625,"startedAt":"2021-01-12T13:45:45.950Z","screenshots":[]}]},{"title":["Form Radio Button settings check","Change Required"],"state":"passed","body":"function () {\n    cy.step('Click Required to check it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Required\"]').click();\n    });\n    cy.step('Assert required attribute is visible on the element');\n    canvas.within(function () {\n      cy.get(radioInput).should('have.attr', 'required');\n    });\n    cy.step('Click Required to uncheck it');\n    miniSettings.getNode().within(function () {\n      cy.get('[label=\"Required\"]').click();\n    });\n    cy.step('Assert required attribute is no longer visible on the element');\n    canvas.within(function () {\n      cy.get(radioInput).should('not.have.attr', 'required');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":636,"startedAt":"2021-01-12T13:45:46.576Z","screenshots":[]}]},{"title":["Form Radio Button settings check","Change radio button  field type to custom and back"],"state":"passed","body":"function () {\n    cy.step('Click Custom to make radio button be displayed in custom way');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.customTypeButton).click();\n    });\n    cy.step('Check that radio button field type was changed to custom');\n    canvas.within(function () {\n      cy.get(radioInput).should('have.prop', 'tagName', 'DIV');\n    });\n    cy.step('Click Native to make radio button be displayed in native way');\n    miniSettings.getNode().within(function () {\n      cy.get(fields.nativeTypeButton).click();\n    });\n    cy.step('Check that radio button field type was changed to native');\n    canvas.within(function () {\n      cy.get(radioInput).should('have.prop', 'tagName', 'INPUT');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":404,"startedAt":"2021-01-12T13:45:47.213Z","screenshots":[]}]},{"title":["Form Radio Button settings check","Form Custom Radio button states changes","Setup"],"state":"passed","body":"function () {\n      cy.step('Select input and open mini-settings');\n      canvas.selectElement(radioInput);\n      miniSettings.open();\n      cy.step('Assert mini-settings are open');\n      miniSettings.getNode().should('be.visible');\n      cy.step('Switch radio button type to custom one');\n      miniSettings.getNode().within(function () {\n        cy.get(fields.customTypeButton).click();\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9642,"startedAt":"2021-01-12T13:45:47.619Z","screenshots":[]}]},{"title":["Form Radio Button settings check","Form Custom Radio button states changes","toggle checked pseudo state for custom radio button"],"state":"passed","body":"function () {\n      cy.step('Switch custom radio button state to checked');\n      stylesTab.selector.setState('Checked');\n      cy.step('Check that custom radio button has right custom node state class');\n      canvas.within(function () {\n        cy.get(radioInput).should('have.class', 'w--redirected-checked');\n      });\n      cy.step('Switch custom radio button state to none');\n      stylesTab.selector.setState('None');\n      cy.step('Check that custom radio button has no custom node state class');\n      canvas.within(function () {\n        cy.get(radioInput).should('not.have.class', 'w--redirected-checked');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":789,"startedAt":"2021-01-12T13:45:57.271Z","screenshots":[]}]},{"title":["Form Radio Button settings check","Form Custom Radio button states changes","toggle focused state for custom radio button"],"state":"passed","body":"function () {\n      cy.step('Switch custom radio button state to focused');\n      stylesTab.selector.setState('Focused');\n      cy.step('Check that custom radio button has right custom node state class');\n      canvas.within(function () {\n        cy.get(radioInput).should('have.class', 'w--redirected-focus');\n      });\n      cy.step('Switch custom radio button state to none');\n      stylesTab.selector.setState('None');\n      cy.step('Check that custom radio button has no custom node state class');\n      canvas.within(function () {\n        cy.get(radioInput).should('not.have.class', 'w--redirected-focus');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1090,"startedAt":"2021-01-12T13:45:58.062Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/eachNode/form_radio.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/eachNode/form_radio.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/eachNode/form_radio.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":4,"passes":4,"pending":0,"skipped":0,"failures":0,"duration":20117,"startedAt":"2021-01-12T13:46:07.114Z","endedAt":"2021-01-12T13:46:27.231Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":4,"passes":4,"pending":0,"failures":0,"start":"2021-01-12T13:46:07.120Z","end":"2021-01-12T13:46:27.245Z","duration":20125},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.formElements);\n    canvas = workspace.getCanvas();\n    miniSettings = canvas.miniSettings;\n    cy.clearSteps();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Form settings check","Setup"],"state":"passed","body":"function () {\n    cy.step('Select qa-formblock element on canvas and open mini-settings');\n    canvas.selectElement(elements.container);\n    miniSettings.open();\n    cy.step('Assert that mini-settings are open');\n    miniSettings.getNode().should('be.visible');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13217,"startedAt":"2021-01-12T13:46:12.247Z","screenshots":[]}]},{"title":["Form settings check","Assert default values"],"state":"passed","body":"function () {\n    cy.step('Assert form with default values exists on canvas');\n    canvas.within(function () {\n      cy.step('Form has default id, name, and data-name');\n      cy.get(elements.form).should('have.attr', 'id', 'email-form').and('have.attr', 'name', 'email-form').and('have.attr', 'data-name', 'Email Form');\n      cy.step('Form has 3 labels and 4 input (one of which is a submit button)');\n      cy.get(elements.form).find('input').should('have.length', 4);\n      cy.get(elements.form).find('label').should('have.length', 3);\n    });\n    cy.step('MiniSettings state is set to Normal');\n    miniSettings.getNode().within(function () {\n      cy.get(state.normal).should('have.class', 'active');\n      cy.get(state.success).should('not.have.class', 'active');\n      cy.get(state.error).should('not.have.class', 'active');\n    });\n    cy.step('And canvas is rendering form but not the success/error state');\n    canvas.within(function () {\n      cy.get(elements.container).within(function () {\n        cy.get(elements.form).should('exist').and('be.visible');\n        cy.get(elements.successState).should('exist').and('not.be.visible');\n        cy.get(elements.errorState).should('exist').and('not.be.visible');\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":129,"startedAt":"2021-01-12T13:46:25.476Z","screenshots":[]}]},{"title":["Form settings check","Switch states"],"state":"passed","body":"function () {\n    cy.step('Switch state to Success');\n    miniSettings.getNode().within(function () {\n      cy.get(state.success).click().should('have.class', 'active');\n      cy.get(state.normal).should('not.have.class', 'active');\n      cy.get(state.error).should('not.have.class', 'active');\n    });\n    cy.step('Assert canvas is rendering success state');\n    canvas.within(function () {\n      cy.get(elements.container).within(function () {\n        cy.get(elements.form).should('exist').and('not.be.visible');\n        cy.get(elements.successState).should('exist').and('be.visible');\n        cy.get(elements.errorState).should('exist').and('not.be.visible');\n      });\n    });\n    cy.step('Switch state to Error');\n    miniSettings.getNode().within(function () {\n      cy.get(state.error).click().should('have.class', 'active');\n      cy.get(state.normal).should('not.have.class', 'active');\n      cy.get(state.success).should('not.have.class', 'active');\n    });\n    cy.step('Assert canvas is rendering error state as well as the form');\n    canvas.within(function () {\n      cy.get(elements.container).within(function () {\n        cy.get(elements.form).should('exist').and('be.visible');\n        cy.get(elements.successState).should('exist').and('not.be.visible');\n        cy.get(elements.errorState).should('exist').and('be.visible');\n      });\n    });\n    cy.step('Switch state back to Normal');\n    miniSettings.getNode().within(function () {\n      cy.get(state.normal).click().should('have.class', 'active');\n      cy.get(state.success).should('not.have.class', 'active');\n      cy.get(state.error).should('not.have.class', 'active');\n    });\n    cy.step('Assert canvas is rendering normal state');\n    canvas.within(function () {\n      cy.get(elements.container).within(function () {\n        cy.get(elements.form).should('exist').and('be.visible');\n        cy.get(elements.successState).should('exist').and('not.be.visible');\n        cy.get(elements.errorState).should('exist').and('not.be.visible');\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":956,"startedAt":"2021-01-12T13:46:25.607Z","screenshots":[]}]},{"title":["Form settings check","Change Form Name"],"state":"passed","body":"function () {\n    cy.step('Change form name to \"Brand new form\"');\n    miniSettings.getNode().find('input').clear().type('Brand new form').blur();\n    cy.step('Assert mini-settings and canvas has updated');\n    miniSettings.getNode().find('input').should('have.value', 'Brand new form');\n    canvas.within(function () {\n      cy.get(elements.form).should('have.attr', 'id', 'wf-form-Brand-new-form').and('have.attr', 'name', 'wf-form-Brand-new-form').and('have.attr', 'data-name', 'Brand new form');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":666,"startedAt":"2021-01-12T13:46:26.564Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/eachNode/form.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/eachNode/form.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/eachNode/form.spec.js","specType":"integration"},"shouldUploadVideo":false}],"browserPath":"/chromium64/chrome-linux/chrome","browserName":"chromium","browserVersion":"74.0.3729.0","osName":"linux","osVersion":"Debian - 9.13","cypressVersion":"6.2.1","config":{"env":{"baseUrl":"http://wfdev.io:3030","stagingSuperDomain":"dev.webflowtest.io","User-Agent":"cypress","RECORD_KEY":"f9ae3...c4cf9"},"integrationFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow","configFile":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress.json","version":"6.2.1","chromeWebSecurity":false,"browser":"chromium","video":false,"videoUploadOnPasses":false,"viewportWidth":1440,"viewportHeight":900,"defaultCommandTimeout":30000,"numTestsKeptInMemory":0,"ignoreTestFiles":"*.quarantined.spec.js","testFiles":"**/*.spec.js","fileServerFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config","fixturesFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/fixtures","pluginsFile":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/plugins/index.js","screenshotsFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/screenshots","supportFile":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/support/index.js","videosFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/videos","retries":{"runMode":2,"openMode":0},"projectId":"xfhtj7","reporter":"../../../node_modules/cypress-multi-reporters","reporterOptions":{"configFile":"reporter-config.json"},"projectRoot":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config","projectName":"cypress-config","morgan":false,"isTextTerminal":true,"socketId":"k17rr","report":true,"browsers":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"animationDistanceThreshold":5,"autoOpen":false,"baseUrl":null,"blockHosts":null,"clientRoute":"/__/","componentFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress/component","execTimeout":60000,"experimentalComponentTesting":false,"experimentalFetchPolyfill":false,"experimentalRunEvents":false,"experimentalSourceRewriting":false,"firefoxGcInterval":{"runMode":1,"openMode":null},"hosts":null,"includeShadowDom":false,"javascripts":[],"modifyObstructiveCode":true,"namespace":"__cypress","nodeVersion":"default","pageLoadTimeout":60000,"port":42381,"reporterRoute":"/__cypress/reporter","requestTimeout":5000,"responseTimeout":30000,"screenshotOnRunFailure":true,"socketIoRoute":"/__socket.io","socketIoCookie":"__socket.io","taskTimeout":60000,"trashAssetsBeforeRuns":true,"userAgent":null,"videoCompression":32,"waitForAnimations":true,"scrollBehavior":"top","watchForFileChanges":false,"xhrRoute":"/xhrs/","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"baseUrl":{"value":null,"from":"default"},"blockHosts":{"value":null,"from":"default"},"browsers":{"value":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"from":"default"},"chromeWebSecurity":{"value":false,"from":"config"},"componentFolder":{"value":"cypress/component","from":"default"},"defaultCommandTimeout":{"value":30000,"from":"config"},"env":{"baseUrl":{"value":"http://wfdev.io:3030","from":"plugin"},"User-Agent":{"value":"cypress","from":"config"},"RECORD_KEY":{"value":"f9ae3...c4cf9","from":"env"},"stagingSuperDomain":{"value":"dev.webflowtest.io","from":"plugin"}},"execTimeout":{"value":60000,"from":"default"},"experimentalComponentTesting":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalRunEvents":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"fileServerFolder":{"value":"./","from":"config"},"firefoxGcInterval":{"value":{"runMode":1,"openMode":null},"from":"default"},"fixturesFolder":{"value":"./fixtures","from":"config"},"hosts":{"value":null,"from":"default"},"ignoreTestFiles":{"value":"*.quarantined.spec.js","from":"config"},"includeShadowDom":{"value":false,"from":"default"},"integrationFolder":{"value":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow","from":"plugin"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"value":"default","from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"pageLoadTimeout":{"value":60000,"from":"default"},"pluginsFile":{"value":"./plugins/index.js","from":"config"},"port":{"value":null,"from":"default"},"projectId":{"value":"xfhtj7","from":"config"},"reporter":{"value":"../../../node_modules/cypress-multi-reporters","from":"cli"},"reporterOptions":{"value":{"configFile":"reporter-config.json"},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":2,"openMode":0},"from":"config"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"./screenshots","from":"config"},"supportFile":{"value":"./support/index.js","from":"config"},"taskTimeout":{"value":60000,"from":"default"},"testFiles":{"value":"**/*.spec.js","from":"config"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"config"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"./videos","from":"config"},"videoUploadOnPasses":{"value":false,"from":"config"},"viewportHeight":{"value":900,"from":"config"},"viewportWidth":{"value":1440,"from":"config"},"waitForAnimations":{"value":true,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"configFile":{"value":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress.json","from":"plugin"},"version":{"value":"6.2.1","from":"plugin"}},"parentTestsFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress","parentTestsFolderDisplay":"cypress-config/cypress","supportFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/support","integrationExampleName":"examples","integrationExamplePath":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress/integration/examples","scaffoldedFiles":[{"name":"cypress","children":[{"name":"integration","children":[{"name":"examples","children":[{"name":"actions.spec.js"},{"name":"aliasing.spec.js"},{"name":"assertions.spec.js"},{"name":"connectors.spec.js"},{"name":"cookies.spec.js"},{"name":"cypress_api.spec.js"},{"name":"files.spec.js"},{"name":"local_storage.spec.js"},{"name":"location.spec.js"},{"name":"misc.spec.js"},{"name":"navigation.spec.js"},{"name":"network_requests.spec.js"},{"name":"querying.spec.js"},{"name":"spies_stubs_clocks.spec.js"},{"name":"traversal.spec.js"},{"name":"utilities.spec.js"},{"name":"viewport.spec.js"},{"name":"waiting.spec.js"},{"name":"window.spec.js"}]}]}]},{"name":"fixtures","children":[{"name":"example.json"}]},{"name":"support","children":[{"name":"commands.js"},{"name":"index.js"}]},{"name":"plugins","children":[{"name":"index.js"}]}],"resolvedNodeVersion":"12.18.3","state":{},"proxyUrl":"http://localhost:42381","browserUrl":"http://localhost:42381/__/","reporterUrl":"http://localhost:42381/__cypress/reporter","xhrUrl":"__cypress/xhrs/"},"status":"finished"},{"startedTestsAt":"2021-01-12T13:47:20.511Z","endedTestsAt":"2021-01-12T13:47:40.299Z","totalDuration":19788,"totalSuites":2,"totalTests":1,"totalFailed":0,"totalPassed":1,"totalPending":0,"totalSkipped":0,"runs":[{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":19788,"startedAt":"2021-01-12T13:47:20.511Z","endedAt":"2021-01-12T13:47:40.299Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:47:20.513Z","end":"2021-01-12T13:47:40.337Z","duration":19824},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.productsSingleItem);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Commerce Add To Cart Wrapper Creation","Add To Cart","should add an Add To Cart Wrapper to the Dynamo Wrapper"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.cmsSource).as('cms-source');\n\n      cy.step('Get the left sidebar E-commerce menu');\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Products Template');\n      cy.step('Click to open the left sidebar Add Element menu');\n      var addElement = workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab();\n      cy.step('Click to add the add to cart wrapper to the canvas');\n      addElement.clickOption('CommerceAddToCartWrapper');\n      cy.step('Wait on the cms-source endpoint');\n      cy.wait('@cms-source');\n      cy.step('Assert that the commerce add to cart form is visible');\n      workspace.getCanvas().within(function () {\n        cy.get('.w-commerce-commerceaddtocartform').should('be.visible');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13944,"startedAt":"2021-01-12T13:47:26.352Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js","absolute":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/addTab-addToCart.spec.js","specType":"integration"},"shouldUploadVideo":false}],"browserPath":"/chromium64/chrome-linux/chrome","browserName":"chromium","browserVersion":"74.0.3729.0","osName":"linux","osVersion":"Debian - 9.13","cypressVersion":"6.2.1","config":{"env":{"baseUrl":"http://wfdev.io:3030","stagingSuperDomain":"dev.webflowtest.io","User-Agent":"cypress","RECORD_KEY":"f9ae3...c4cf9"},"integrationFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow","configFile":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress.json","version":"6.2.1","chromeWebSecurity":false,"browser":"chromium","video":false,"videoUploadOnPasses":false,"viewportWidth":1440,"viewportHeight":900,"defaultCommandTimeout":30000,"numTestsKeptInMemory":0,"ignoreTestFiles":"*.quarantined.spec.js","testFiles":"**/*.spec.js","fileServerFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config","fixturesFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/fixtures","pluginsFile":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/plugins/index.js","screenshotsFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/screenshots","supportFile":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/support/index.js","videosFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/videos","retries":{"runMode":2,"openMode":0},"projectId":"xfhtj7","reporter":"../../../node_modules/cypress-multi-reporters","reporterOptions":{"configFile":"reporter-config.json"},"projectRoot":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config","projectName":"cypress-config","morgan":false,"isTextTerminal":true,"socketId":"uqb9p","report":true,"browsers":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"animationDistanceThreshold":5,"autoOpen":false,"baseUrl":null,"blockHosts":null,"clientRoute":"/__/","componentFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress/component","execTimeout":60000,"experimentalComponentTesting":false,"experimentalFetchPolyfill":false,"experimentalRunEvents":false,"experimentalSourceRewriting":false,"firefoxGcInterval":{"runMode":1,"openMode":null},"hosts":null,"includeShadowDom":false,"javascripts":[],"modifyObstructiveCode":true,"namespace":"__cypress","nodeVersion":"default","pageLoadTimeout":60000,"port":45477,"reporterRoute":"/__cypress/reporter","requestTimeout":5000,"responseTimeout":30000,"screenshotOnRunFailure":true,"socketIoRoute":"/__socket.io","socketIoCookie":"__socket.io","taskTimeout":60000,"trashAssetsBeforeRuns":true,"userAgent":null,"videoCompression":32,"waitForAnimations":true,"scrollBehavior":"top","watchForFileChanges":false,"xhrRoute":"/xhrs/","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"baseUrl":{"value":null,"from":"default"},"blockHosts":{"value":null,"from":"default"},"browsers":{"value":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"from":"default"},"chromeWebSecurity":{"value":false,"from":"config"},"componentFolder":{"value":"cypress/component","from":"default"},"defaultCommandTimeout":{"value":30000,"from":"config"},"env":{"baseUrl":{"value":"http://wfdev.io:3030","from":"plugin"},"User-Agent":{"value":"cypress","from":"config"},"RECORD_KEY":{"value":"f9ae3...c4cf9","from":"env"},"stagingSuperDomain":{"value":"dev.webflowtest.io","from":"plugin"}},"execTimeout":{"value":60000,"from":"default"},"experimentalComponentTesting":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalRunEvents":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"fileServerFolder":{"value":"./","from":"config"},"firefoxGcInterval":{"value":{"runMode":1,"openMode":null},"from":"default"},"fixturesFolder":{"value":"./fixtures","from":"config"},"hosts":{"value":null,"from":"default"},"ignoreTestFiles":{"value":"*.quarantined.spec.js","from":"config"},"includeShadowDom":{"value":false,"from":"default"},"integrationFolder":{"value":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow","from":"plugin"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"value":"default","from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"pageLoadTimeout":{"value":60000,"from":"default"},"pluginsFile":{"value":"./plugins/index.js","from":"config"},"port":{"value":null,"from":"default"},"projectId":{"value":"xfhtj7","from":"config"},"reporter":{"value":"../../../node_modules/cypress-multi-reporters","from":"cli"},"reporterOptions":{"value":{"configFile":"reporter-config.json"},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":2,"openMode":0},"from":"config"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"./screenshots","from":"config"},"supportFile":{"value":"./support/index.js","from":"config"},"taskTimeout":{"value":60000,"from":"default"},"testFiles":{"value":"**/*.spec.js","from":"config"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"config"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"./videos","from":"config"},"videoUploadOnPasses":{"value":false,"from":"config"},"viewportHeight":{"value":900,"from":"config"},"viewportWidth":{"value":1440,"from":"config"},"waitForAnimations":{"value":true,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"configFile":{"value":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress.json","from":"plugin"},"version":{"value":"6.2.1","from":"plugin"}},"parentTestsFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress","parentTestsFolderDisplay":"cypress-config/cypress","supportFolder":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/support","integrationExampleName":"examples","integrationExamplePath":"/scratch/buildkite-agent-8d6419c5-54da-11eb-97fa-4a22e55b2d68-h99qm/webflow/webflow/packages/tooling/cypress-config/cypress/integration/examples","scaffoldedFiles":[{"name":"cypress","children":[{"name":"integration","children":[{"name":"examples","children":[{"name":"actions.spec.js"},{"name":"aliasing.spec.js"},{"name":"assertions.spec.js"},{"name":"connectors.spec.js"},{"name":"cookies.spec.js"},{"name":"cypress_api.spec.js"},{"name":"files.spec.js"},{"name":"local_storage.spec.js"},{"name":"location.spec.js"},{"name":"misc.spec.js"},{"name":"navigation.spec.js"},{"name":"network_requests.spec.js"},{"name":"querying.spec.js"},{"name":"spies_stubs_clocks.spec.js"},{"name":"traversal.spec.js"},{"name":"utilities.spec.js"},{"name":"viewport.spec.js"},{"name":"waiting.spec.js"},{"name":"window.spec.js"}]}]}]},{"name":"fixtures","children":[{"name":"example.json"}]},{"name":"support","children":[{"name":"commands.js"},{"name":"index.js"}]},{"name":"plugins","children":[{"name":"index.js"}]}],"resolvedNodeVersion":"12.18.3","state":{},"proxyUrl":"http://localhost:45477","browserUrl":"http://localhost:45477/__/","reporterUrl":"http://localhost:45477/__cypress/reporter","xhrUrl":"__cypress/xhrs/"},"status":"finished"}]