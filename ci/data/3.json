[{"startedTestsAt":"2021-01-12T13:38:27.040Z","endedTestsAt":"2021-01-12T13:44:33.349Z","totalDuration":350741,"totalSuites":18,"totalTests":65,"totalFailed":0,"totalPassed":65,"totalPending":0,"totalSkipped":0,"runs":[{"stats":{"suites":5,"tests":12,"passes":12,"pending":0,"skipped":0,"failures":0,"duration":31852,"startedAt":"2021-01-12T13:38:27.040Z","endedAt":"2021-01-12T13:38:58.892Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":5,"tests":12,"passes":12,"pending":0,"failures":0,"start":"2021-01-12T13:38:27.049Z","end":"2021-01-12T13:38:58.913Z","duration":31864},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    canvas = workspace.getCanvas();\n    miniSettings = canvas.miniSettings;\n    cy.clearSteps();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Twitter settings check","Setup","Init"],"state":"passed","body":"function () {\n      cy.step('Add Twitter element to the canvas');\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Twitter');\n      workspace.getRightPanel().getStylesTab().selector.setClassNames(['twitter']);\n      cy.step('Assert if the minisettings are visible');\n      miniSettings.getNode().should('be.visible');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14540,"startedAt":"2021-01-12T13:38:33.104Z","screenshots":[]}]},{"title":["Twitter settings check","Tweet Button","Default"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('Check mini-settings default values');\n        cy.get(fields.tweetButton).should('have.attr', 'aria-checked', 'true');\n        cy.get(fields.followButton).should('have.attr', 'aria-checked', 'false');\n        cy.get(fields.shareUrl).should('be.empty');\n        cy.get(fields.tweetText).should('be.empty');\n        cy.get(fields.more.showBubble).should('have.attr', 'aria-checked', 'true');\n        cy.get(fields.more.largeButton).should('have.attr', 'aria-checked', 'false');\n        cy.get(fields.more.layout.horizontal).should('have.attr', 'aria-checked', 'true');\n        cy.get(fields.more.layout.vertical).should('have.attr', 'aria-checked', 'false');\n      });\n      cy.step('Assert on-canvas node has default values');\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /tweet_button.html/g).and('match', /url=http%3A%2F%2Fwebflow.com/g).and('match', /counturl=webflow.com/g).and('match', /text=Check%20out%20this%20site/g).and('match', /count=horizontal/g).and('match', /size=m/g).and('match', /dnt=true/g);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":213,"startedAt":"2021-01-12T13:38:47.655Z","screenshots":[]}]},{"title":["Twitter settings check","Tweet Button","Tweet and Follow button"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('Click follow button');\n        cy.get(fields.followButton).click();\n        cy.get(fields.tweetButton).should('not.have.attr', 'aria-checked', 'true');\n        cy.get(fields.followButton).should('have.attr', 'aria-checked', 'true');\n        cy.step('Click Tweet button');\n        cy.get(fields.tweetButton).click();\n        cy.get(fields.tweetButton).should('have.attr', 'aria-checked', 'true');\n        cy.get(fields.followButton).should('not.have.attr', 'aria-checked', 'true');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":707,"startedAt":"2021-01-12T13:38:47.869Z","screenshots":[]}]},{"title":["Twitter settings check","Tweet Button","Share URL input"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('Change share url to Google.com');\n        cy.get(fields.shareUrl).clear().type('www.google.com').blur();\n      });\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /url=http%3A%2F%2Fwww.google.com/g).and('match', /counturl=www.google.com/g);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2073,"startedAt":"2021-01-12T13:38:48.577Z","screenshots":[]}]},{"title":["Twitter settings check","Tweet Button","Tweet text input"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('Change tweet text to \"Webflow is awesome!\"');\n        cy.get(fields.tweetText).clear().type('Webflow is awesome!').blur();\n      });\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /text=Webflow%20is%20awesome!/g);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3435,"startedAt":"2021-01-12T13:38:50.654Z","screenshots":[]}]},{"title":["Twitter settings check","Follow Button","Init"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('Click follow button');\n        cy.get(fields.followButton).click();\n        cy.get(fields.tweetButton).should('not.have.attr', 'aria-checked', 'true');\n        cy.get(fields.followButton).should('have.attr', 'aria-checked', 'true');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":623,"startedAt":"2021-01-12T13:38:54.093Z","screenshots":[]}]},{"title":["Twitter settings check","Follow Button","Default"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('Check mini-settings default values');\n        cy.get(fields.user).should('be.empty');\n        cy.get(fields.more.showBubble).should('have.attr', 'aria-checked', 'true');\n        cy.get(fields.more.largeButton).should('have.attr', 'aria-checked', 'false');\n        cy.get(fields.more.layout.horizontal).should('not.exist');\n        cy.get(fields.more.layout.vertical).should('not.exist');\n      });\n      cy.step('Assert that on canvas node is updated');\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /follow_button.html/g).and('match', /screen_name=webflow/g).and('match', /show_count=true/g).and('match', /size=m/g).and('match', /dnt=true/g);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":131,"startedAt":"2021-01-12T13:38:54.718Z","screenshots":[]}]},{"title":["Twitter settings check","Follow Button","Add user"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('Check that adding a user is possible');\n        cy.get(fields.user).clear().type('google').blur();\n      });\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /screen_name=google/g);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1084,"startedAt":"2021-01-12T13:38:54.850Z","screenshots":[]}]},{"title":["Twitter settings check","Common","Init"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('Click Tweet button');\n        cy.get(fields.tweetButton).click();\n        cy.get(fields.tweetButton).should('have.attr', 'aria-checked', 'true');\n        cy.get(fields.followButton).should('not.have.attr', 'aria-checked', 'true');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":567,"startedAt":"2021-01-12T13:38:55.935Z","screenshots":[]}]},{"title":["Twitter settings check","Common","Show bubble"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('It can be unchecked');\n        cy.get(fields.more.showBubbleFalse).click();\n        cy.get(fields.more.showBubble).should('not.have.attr', 'aria-checked', 'true');\n        cy.get(fields.more.layoutContainer).should('not.exist');\n      });\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /show_count=false/g);\n      });\n      miniSettings.getNode().within(function () {\n        cy.step('It can be checked');\n        cy.get(fields.more.showBubble).click().should('have.attr', 'aria-checked', 'true');\n        cy.get(fields.more.layoutContainer).should('exist').and('be.visible');\n      });\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /count=horizontal/g);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":661,"startedAt":"2021-01-12T13:38:56.503Z","screenshots":[]}]},{"title":["Twitter settings check","Common","Large button"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('It can be checked');\n        cy.get(fields.more.largeButton).click().should('have.attr', 'aria-checked', 'true');\n      });\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /size=l/g);\n      });\n      miniSettings.getNode().within(function () {\n        cy.step('It can be unchecked');\n        cy.get(fields.more.regularButton).click();\n        cy.get(fields.more.largeButton).should('not.have.attr', 'aria-checked', 'true');\n      });\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /size=m/g);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":985,"startedAt":"2021-01-12T13:38:57.165Z","screenshots":[]}]},{"title":["Twitter settings check","Common","Horizontal and Vertical"],"state":"passed","body":"function () {\n      miniSettings.getNode().within(function () {\n        cy.step('Click Vertical button');\n        cy.get(fields.more.layout.vertical).click().should('have.attr', 'aria-checked', 'true');\n        cy.get(fields.more.layout.horizontal).should('not.have.attr', 'aria-checked', 'true');\n      });\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /count=vertical/g);\n      });\n      miniSettings.getNode().within(function () {\n        cy.step('Click Horizontal button');\n        cy.get(fields.more.layout.horizontal).click().should('have.attr', 'aria-checked', 'true');\n        cy.get(fields.more.layout.vertical).should('not.have.attr', 'aria-checked', 'true');\n      });\n      canvas.within(function () {\n        cy.get(twitterFrame).should('have.attr', 'src').and('match', /count=horizontal/g);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":740,"startedAt":"2021-01-12T13:38:58.151Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/addTab/eachNode/twitter.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/addTab/eachNode/twitter.spec.js","absolute":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/entrypoints/designer/client/ui-tests/addTab/eachNode/twitter.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":7,"tests":23,"passes":23,"pending":0,"skipped":0,"failures":0,"duration":82690,"startedAt":"2021-01-12T13:39:06.725Z","endedAt":"2021-01-12T13:40:29.415Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":7,"tests":23,"passes":23,"pending":0,"failures":0,"start":"2021-01-12T13:39:06.728Z","end":"2021-01-12T13:40:29.429Z","duration":82701},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.basicAnnotations);\n\n      _cypressAppControls.BetaUtils.enableBeta('annotations');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n        cy.step('Toggle Annotations');\n        annotations = workspace.clickAnnotationsModeButton();\n        popover = annotations.getCanvasPopover();\n        canvas = workspace.getCanvas();\n        rightPanel = annotations.getRightPanel();\n      }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Annotations Smoke Test","Non-Beta users","Annotations shouldn't be visible at all"],"state":"passed","body":"function () {\n      cy.get(\"[data-automation-id=\\\"annotations-button\\\"]\").should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12222,"startedAt":"2021-01-12T13:39:12.333Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Non-Beta users","Toggle Preview Mode for non-beta users"],"state":"passed","body":"function () {\n      // TODO: move to Designer API\n      cy.step('Open Preview Mode');\n      cy.get(\"[data-automation-id=\\\"preview-mode-button\\\"]\").click();\n      cy.step('Assert Annotations panel is not visible');\n      cy.get(\"[data-automation-id=\\\"annotations-wrapper\\\"]\").should('not.exist');\n      cy.step('Close Preview Mode');\n      cy.get(\"[data-automation-id=\\\"preview-mode-button\\\"]\").click();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":296,"startedAt":"2021-01-12T13:39:24.562Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Non-Team Projects","Links to the upgrade page"],"state":"passed","body":"function () {\n        // Save the designer URL so we can return more easily\n        // via url after setting up the team plan\n        cy.url().then(saveDesignerURL); // Note: these test assertions break right now because the\n        // button opens a new tab. if that changes in future, we\n        // should re-enable this, so leaving the code commented\n        // out for now.\n        // cy.step('Click upgrade link');\n        // workspace.clickAnnotationsModeButton();\n        // cy.url().then(url => {\n        //   expect(url, 'Expect the URL to have changed').to.not.equal(savedDesignerURL);\n        // });\n        // cy.url().should('include', 'webflow.com');\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":8930,"startedAt":"2021-01-12T13:39:24.860Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Team Projects","Transfer annotations site to new team"],"state":"passed","body":"function () {\n        cy.step('Navigate to team creation page');\n        cy.visit(\"\".concat(Cypress.env('baseUrl'), \"/dashboard/teams\"));\n        var dashboard = new _cypressAppControls.Dashboard(cy);\n        var teamsOverviewTab = dashboard.getTeamsOverviewPage();\n        cy.step('Create a new team');\n        var email = (0, _cypressAppControls.generateRandomEmail)();\n        var teamName = (0, _cypressAppControls.generateRandomTeamName)();\n        var cardEntryForm = teamsOverviewTab.clickCreateNewTeamLink().enterTeamName(teamName).enterBillingEmail(email).clickLegacySmallPlanButton();\n        cy.step('Submit payment info');\n        cardEntryForm.enterDefaultPaymentInfo().clickUpgradeLink().closeHeardAboutModal();\n        cy.visit(\"\".concat(Cypress.env('baseUrl'), \"/dashboard\"));\n        cy.step('Get the annotations setup site');\n        var annotationsSite = cy.get('.site-grid .site-item').contains('cy-annotations-setup');\n        cy.step('Open the site settings');\n        annotationsSite.get('.dropdown-menu-link').contains('Settings').click({\n          force: true\n        });\n        cy.step('Open the transfer site modal');\n        cy.get('.icon-button[title=\"Transfer\"]').click();\n        cy.step('Open the \"To a team\" tab');\n        cy.get('.modal-dialog .menu-item').contains('To a team').click();\n        cy.step('Select newly created team');\n        cy.get('select[ng-model=\"selectedOrg\"]').selectNth(1);\n        cy.step('Transfer the site');\n        cy.get('button').contains('Transfer to Test Team').click();\n        cy.step('Return to designer');\n        cy.visit(savedDesignerURL);\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":21508,"startedAt":"2021-01-12T13:39:33.804Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Toggling Annotations","Toggle Annotations: ON/OFF"],"state":"passed","body":"function () {\n        _cypressAppControls.BetaUtils.enableBeta('annotations');\n\n        workspace = _cypressAppControls.api.waitForDesigner();\n        cy.step('Toggle Annotations');\n        var annotations = workspace.clickAnnotationsModeButton();\n        cy.step('Assert annotations are open');\n        annotations.assertAnnotationsAreOpen();\n        cy.step('Reset Designer to original step');\n        workspace.clickAnnotationsModeButton();\n        cy.step('Assert annotations are closed');\n        annotations.assertAnnotationsAreOpen(false);\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":6870,"startedAt":"2021-01-12T13:39:55.347Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Toggling Annotations","Toggle Preview Mode for beta users"],"state":"passed","body":"function () {\n        // TODO: move to Designer API\n        cy.step('Open Preview Mode');\n        cy.get(\"[data-automation-id=\\\"preview-mode-button\\\"]\").click();\n        cy.step('Assert Annotations panel is not visible');\n        cy.get(\"[data-automation-id=\\\"annotations-wrapper\\\"]\").should('not.exist');\n        cy.step('Close Preview Mode');\n        cy.get(\"[data-automation-id=\\\"preview-mode-button\\\"]\").click();\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":326,"startedAt":"2021-01-12T13:40:02.229Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","Select designer element and assert annotations count"],"state":"passed","body":"function () {\n        cy.step('Grab profileImage');\n        cy.window().then(function (win) {\n          var siteUsers = win._webflow.getStoreState('UserStore').toJS().siteUsers;\n\n          for (var key in siteUsers) {\n            Cypress.env('emailHash', siteUsers[key].emailHash);\n            Cypress.env('profileImg', siteUsers[key].profileImg);\n          }\n        });\n        cy.step('Select element on canvas');\n        canvas.selectElement('.home-h1-automation');\n        cy.step(\"Assert that the element has a annotations bubble visible with no content\");\n        popover.assertCalloutButton('');\n        cy.step('Deselect element');\n        workspace.escapeAllUiPanels();\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1037,"startedAt":"2021-01-12T13:40:02.557Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","Open annotations popover on element"],"state":"passed","body":"function () {\n        cy.step('Open annotations popover by selecting an element on canvas');\n        canvas.selectElement('.home-h1-automation');\n        cy.step('Assert userImage is correctly pulled');\n        popover.assertUserImage();\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":137,"startedAt":"2021-01-12T13:40:03.595Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","Can type new annotation"],"state":"passed","body":"function () {\n        _cypressAppControls.server.spy('POST', \"**/api/annotations/**\").as('annotation-creation');\n\n        cy.step('Type new annotation and save it');\n        popover.addNewAnnotation('This is a new annotation');\n        cy.step('Wait for the annotations to be created');\n        cy.wait('@annotation-creation');\n        cy.step('Assert that the annotation was added and is accessible via api');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect there is one annotation in API response').have.length(1);\n        });\n        cy.step('Assert if the right panel contains saved annotation');\n        rightPanel.assertAnnotation(0, {\n          user: 'Mister Flowey',\n          content: 'This is a new annotation',\n          page: 'Home',\n          breakpoinId: 'main',\n          annotationId: 1,\n          countReplies: 1\n        });\n        cy.step('Assert there is one annotation on the canvas for desktop');\n        popover.getCalloutButton().should('have.length', 1);\n        cy.step('Assert the annotation on the canvas has the correct id');\n        popover.assertCalloutButton('1');\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1545,"startedAt":"2021-01-12T13:40:03.733Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","Verify hover state"],"state":"passed","body":"function () {\n        var ANNOTATION_ID = 0;\n        cy.step('De-select current node');\n        workspace.escapeAllUiPanels();\n        cy.step('Assert unhovered state is rgb(0, 0, 0, 0)');\n        rightPanel.getAnnotation(ANNOTATION_ID).getNode().should('have.css', 'background-color', 'rgba(0, 0, 0, 0)');\n        cy.step('Hover over the annotation');\n        rightPanel.getAnnotation(ANNOTATION_ID).getNode().trigger('mouseover');\n        rightPanel.getAnnotation(ANNOTATION_ID).getNode().should('have.css', 'background-color', 'rgb(77, 77, 77)');\n        cy.step('Hover out of the annotation');\n        rightPanel.getAnnotation(ANNOTATION_ID).getNode().trigger('mouseout');\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":441,"startedAt":"2021-01-12T13:40:05.279Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","Adds annotation on different page and media query"],"state":"passed","body":"function () {\n        _cypressAppControls.server.spy('POST', \"**/api/annotations/**\").as('annotation-creation');\n\n        cy.step('Switch page to \"About Us\"');\n        workspace.getLeftSidebar().clickPagesTab().switchPage('About Us');\n        cy.step('Switch to tablet media query');\n        breakpoints = workspace.getTopbar().getBreakpoints();\n        breakpoints.setTablet();\n        breakpoints.getTablet().isActive();\n        cy.step('Select element on canvas');\n        canvas.selectElement('.about-h1-automation');\n        cy.step('Type new annotation and save it');\n        popover.addNewAnnotation('This is a brand new annotation');\n        cy.step('Wait for the annotations to be created');\n        cy.wait('@annotation-creation');\n        cy.step('Assert that the annotation was added and is accessible via api');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect there are two annotations in the API response').have.length(2);\n        });\n        cy.step('Assert if the right panel contains saved annotation');\n        rightPanel.assertAnnotation(0, {\n          user: 'Mister Flowey',\n          content: 'This is a brand new annotation',\n          page: 'About Us',\n          breakpointId: 'medium',\n          annotationId: 2,\n          countReplies: 1\n        });\n        cy.step('Assert there is one annotation on the canvas for tablet');\n        popover.getCalloutButton().should('have.length', 1);\n        cy.step('Assert the annotation on the canvas has the correct id');\n        popover.assertCalloutButton('2');\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1624,"startedAt":"2021-01-12T13:40:05.721Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","Should change page and media query to \"HOME - DESKTOP\""],"state":"passed","body":"function () {\n        cy.step('Click First annotation');\n        rightPanel.getAnnotation(1).click();\n        cy.step('Assert page changed to Home');\n        workspace.getTopbar().getPageMenu().getPageName().should('have.text', 'Home');\n        cy.step('Assert media query is Desktop');\n        breakpoints.getDesktop().isActive();\n        cy.step('Assert there is one annotation on the canvas for desktop');\n        popover.getCalloutButton().should('have.length', 1);\n        cy.step('Assert the annotation on the canvas has the correct id');\n        popover.assertCalloutButton('1');\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":840,"startedAt":"2021-01-12T13:40:07.346Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","Should assert the correct element is selected"],"state":"passed","body":"function () {\n        cy.step('Assert that the outline is correct');\n        cy.iframeFocus('#site-iframe-next').then(function (iframe) {\n          cy.wrap(iframe.find('.home-h1-automation')).then(function (header) {\n            cy.get(\"[data-automation-id=\\\"annotations-outliner\\\"]\").then(function (outline) {\n              var _iframe$0$defaultView = iframe[0].defaultView.frameElement.getBoundingClientRect(),\n                  iFrameX = _iframe$0$defaultView.x,\n                  iFrameY = _iframe$0$defaultView.y;\n\n              var _header$0$getBounding = header[0].getBoundingClientRect(),\n                  headerX = _header$0$getBounding.x,\n                  headerY = _header$0$getBounding.y;\n\n              var outlineRect = outline[0].getBoundingClientRect();\n              expect(outlineRect.x, 'Outlines match on X size').to.equal(headerX + iFrameX);\n              expect(outlineRect.y, 'Outlines match on Y size').to.equal(headerY + iFrameY);\n            });\n          });\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":504,"startedAt":"2021-01-12T13:40:08.188Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","Should change page and media query to \"ABOUT US - TABLET\""],"state":"passed","body":"function () {\n        cy.step('Click Second annotation');\n        rightPanel.getAnnotation(0).click();\n        cy.step('Assert page changed to About Us');\n        workspace.getTopbar().getPageMenu().getPageName().should('have.text', 'About Us');\n        cy.step('Assert media query is Tablet');\n        breakpoints.getTablet().isActive();\n        cy.step('Close all popovers');\n        workspace.escapeAllUiPanels();\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":862,"startedAt":"2021-01-12T13:40:08.693Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","Adds second annotation on ABOUT US - TABLET"],"state":"passed","body":"function () {\n        _cypressAppControls.server.spy('POST', \"**/api/annotations/**\").as('annotation-creation');\n\n        cy.step('Switch to tablet media query');\n        breakpoints = workspace.getTopbar().getBreakpoints();\n        breakpoints.setTablet();\n        breakpoints.getTablet().isActive();\n        cy.step('Select element on canvas');\n        canvas.selectElement('body');\n        cy.step('Type new annotation and save it');\n        popover.addNewAnnotation('This is a second annotation on this page and media query');\n        cy.step('Wait for the annotations to be created');\n        cy.wait('@annotation-creation');\n        cy.step('Assert that the annotation was added and is accessible via api');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect there are three annotations in the API response').have.length(3);\n        });\n        cy.step('Assert if the right panel contains saved annotation');\n        rightPanel.assertAnnotation(0, {\n          user: 'Mister Flowey',\n          content: 'This is a second annotation on this page and media query',\n          page: 'About Us',\n          breakpointId: 'medium',\n          annotationId: 3,\n          countReplies: 1\n        });\n        cy.step('Assert there are two annotations on the canvas for tablet');\n        popover.getCalloutButton().should('have.length', 2);\n        cy.step('Assert the annotation on the canvas has the correct id');\n        popover.assertCalloutButton('2');\n        cy.step('Assert the annotation on the canvas has the correct id');\n        popover.assertCalloutButton('3');\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1392,"startedAt":"2021-01-12T13:40:09.558Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","Should assert the correct element is selected"],"state":"passed","body":"function () {\n        cy.step('Assert that the outline is correct');\n        cy.iframeFocus('#site-iframe-next').then(function (iframe) {\n          cy.wrap(iframe.find('.about-h1-automation')).then(function (header) {\n            cy.get(\"[data-automation-id=\\\"annotations-outliner\\\"]\").then(function (outline) {\n              var _iframe$0$defaultView2 = iframe[0].defaultView.frameElement.getBoundingClientRect(),\n                  iFrameX = _iframe$0$defaultView2.x,\n                  iFrameY = _iframe$0$defaultView2.y;\n\n              var _header$0$getBounding2 = header[0].getBoundingClientRect(),\n                  headerX = _header$0$getBounding2.x,\n                  headerY = _header$0$getBounding2.y;\n\n              var outlineRect = outline[0].getBoundingClientRect();\n              expect(outlineRect.x, 'Outlines match on X size').to.equal(headerX + iFrameX);\n              expect(outlineRect.y, 'Outlines match on Y size').to.equal(headerY + iFrameY);\n            });\n          });\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":33,"startedAt":"2021-01-12T13:40:10.951Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","should be able to close popover using a \"Cancel\" button"],"state":"passed","body":"function () {\n        cy.step('Grab callout buttons');\n        var popoverCallouts = annotations.getCanvasPopover();\n        cy.step('Open popover for the first element');\n        popoverCallouts.open();\n        cy.step('Assert popover is visible');\n        popoverCallouts.getNode().should('exist').and('be.visible');\n        cy.step('Close popover');\n        popoverCallouts.close();\n        cy.step('Assert popover is not visible');\n        popoverCallouts.getNode().should('not.exist');\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":721,"startedAt":"2021-01-12T13:40:10.985Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","should limit annotation characters to 240"],"state":"passed","body":"function () {\n        var text1 = Array(259).fill('1').join('');\n        var text2 = Array(20).fill('2').join('');\n        cy.step('Close all open panels');\n        workspace.escapeAllUiPanels();\n        cy.step('Select h3 on the canvas which would create new annotation');\n        canvas.selectElement('.about-h3-automation');\n        cy.step('Assert popover is visible');\n        popover.getNode().should('be.visible');\n        cy.step('Assert character limit warning is not visible');\n        popover.getCharacterCounter().should('not.exist');\n        cy.step('Post button should be disabled');\n        popover.getNewAnnotationSaveButton().should('have.attr', 'aria-disabled', 'true');\n        cy.step('Type 1 character in the input');\n        popover.getNewAnnotationInput().type('0');\n        cy.step('Assert that the button is enabled');\n        popover.getNewAnnotationSaveButton().should('not.have.attr', 'aria-disabled', 'true');\n        popover.getCharacterCounter().should('not.exist');\n        cy.step('Type 259 characters in it (total of 260)');\n        popover.getNewAnnotationInput().type(text1);\n        cy.step('Assert that the button is enabled and characters left is 20');\n        popover.getNewAnnotationSaveButton().should('not.have.attr', 'aria-disabled', 'true');\n        popover.getCharacterCounter().should('have.text', '20');\n        cy.step('Type 20 more characters in it (total of 280)');\n        popover.getNewAnnotationInput().type(text2);\n        cy.step('Assert that the button is enabled and characters left is 0');\n        popover.getNewAnnotationSaveButton().should('not.have.attr', 'aria-disabled', 'true');\n        popover.getCharacterCounter().should('have.text', '0');\n        cy.step('Type 1 character in it (total of 281)');\n        popover.getNewAnnotationInput().type('0');\n        cy.step('Assert that the button is disabled and characters left is -1');\n        popover.getNewAnnotationSaveButton().should('have.attr', 'aria-disabled', 'true');\n        popover.getCharacterCounter().should('have.text', '-1');\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":6883,"startedAt":"2021-01-12T13:40:11.707Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","should be able to remove node and attached annotation"],"state":"passed","body":"function () {\n        _cypressAppControls.server.spy('DELETE', \"**/api/annotations/**\").as('annotation-removal');\n\n        cy.step('Verify there are currently 3 annotations in the Project');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect there are three annotations in the API response').have.length(3);\n        });\n        cy.step('Toggle Annotations mode and get back to Designer Mode');\n        workspace.clickAnnotationsModeButton();\n        cy.step('Select heading on canvas');\n        canvas.selectElement('.about-h1-automation');\n        cy.step('Remove the element from the canvas');\n        cy.get('body').type('{backspace}');\n        canvas.within(function () {\n          cy.get('.about-h1-automation').should('not.exist');\n        });\n        cy.wait('@annotation-removal');\n        cy.step('Verify there are now only 2 annotations in the Project');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect there are two annotations in the API response').have.length(2);\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1719,"startedAt":"2021-01-12T13:40:18.597Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","should be able to edit an existing annotation"],"state":"passed","body":"function () {\n        _cypressAppControls.server.spy('PUT', '**/api/annotations/**').as('annotation-edit');\n\n        cy.step('Verify there are currently 2 annotations in the Project');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect there are two annotations in the API response').have.length(2);\n        });\n        cy.step('Toggle annotations to get back to Annotations Mode');\n        workspace.clickAnnotationsModeButton();\n        cy.step('Click Second annotation');\n        rightPanel.getAnnotation(1).click();\n        cy.step('Assert page changed to Home');\n        workspace.getTopbar().getPageMenu().getPageName().should('have.text', 'Home');\n        cy.step('Assert media query is Desktop');\n        breakpoints.getDesktop().isActive();\n        cy.step('Assert there is one annotation on the canvas for desktop');\n        popover.getCalloutButton().should('have.length', 1);\n        cy.step('Assert popover is visible');\n        popover.getNode().should('be.visible');\n        cy.step('Open the annotation options');\n        popover.openAnnotationOptions();\n        cy.step('Hover over the edit option');\n        popover.getSingleAnnotationEdit().trigger('mouseover');\n        cy.step('Click the edit option');\n        popover.clickEditAnnotationButton();\n        popover.getEditAnnotationInput().type(' - and it has been edited!');\n        popover.updateAnnotation();\n        cy.step('Wait for the annotation to be updated');\n        cy.wait('@annotation-edit');\n        cy.step('Verify the annotation has been changed');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body[1].replies[0].content).to.include('has been edited');\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2564,"startedAt":"2021-01-12T13:40:20.317Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","should be able to remove annotation from existing node"],"state":"passed","body":"function () {\n        _cypressAppControls.server.spy('DELETE', \"**/api/annotations/**\").as('annotation-removal');\n\n        cy.step('Verify there are currently 2 annotations in the Project');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect there are two annotations in the API response').have.length(2);\n        });\n        cy.step('Click Second annotation');\n        rightPanel.getAnnotation(1).click();\n        cy.step('Assert page changed to Home');\n        workspace.getTopbar().getPageMenu().getPageName().should('have.text', 'Home');\n        cy.step('Assert media query is Desktop');\n        breakpoints.getDesktop().isActive();\n        cy.step('Assert there is one annotation on the canvas for desktop');\n        popover.getCalloutButton().should('have.length', 1);\n        cy.step('Assert popover is visible');\n        popover.getNode().should('be.visible');\n        cy.step('Open the annotation options');\n        popover.openAnnotationOptions();\n        cy.step('Hover over the remove option');\n        popover.getSingleAnnotationRemove().trigger('mouseover');\n        cy.step('Click the remove option');\n        popover.clickRemoveAnnotationButton();\n        cy.step('Wait for the annotation to be removed');\n        cy.wait('@annotation-removal');\n        cy.step('Verify there is currently 1 annotation in the Project');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect there is one annotation in the API response').have.length(1);\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":433,"startedAt":"2021-01-12T13:40:22.883Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","should be able to remove parent node and attached nested annotation"],"state":"passed","body":"function () {\n        _cypressAppControls.server.spy('POST', \"**/api/annotations/**\").as('annotation-creation');\n\n        _cypressAppControls.server.spy('DELETE', \"**/api/annotations/**\").as('annotation-removal');\n\n        cy.step('Verify there is currently 1 annotation in the Project');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect there is one annotation in the API response').have.length(1);\n        }); // The following hack is here because for some reason on Cypress\n        // the first click on the canvas didn't trigger anything on the canvas\n        // and nothing actually was selected nor showed up.\n\n        cy.step('HACK: Select body');\n        canvas.selectElement('body');\n        cy.step('Select the body on canvas');\n        canvas.selectElement('.home-text-automation');\n        cy.step('Type new annotation and save it');\n        popover.addNewAnnotation('This is an annotation in the paragraph');\n        cy.step('Wait for the annotations to be created');\n        cy.wait('@annotation-creation');\n        cy.step('Verify that there are now 2 annotations in the Project');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect to have two annotations in the API response').have.length(2);\n        });\n        cy.step('Toggle Annotations mode and get back to Designer Mode');\n        workspace.clickAnnotationsModeButton();\n        cy.step('Select container on canvas');\n        canvas.selectElement('.home-container-automation');\n        cy.step('Remove the container from the canvas');\n        canvas.deleteElement();\n        canvas.within(function () {\n          cy.get('.home-container-automation').should('not.exist');\n        });\n        cy.wait('@annotation-removal');\n        cy.step('Verify that there is only one annotation in the Project');\n        cy.request({\n          method: 'GET',\n          url: \"\".concat(Cypress.env('baseUrl'), \"/api/annotations/\").concat(Cypress.env('siteId'))\n        }).then(function (res) {\n          expect(res.body, 'Expect there is one annotation in the API response').have.length(1);\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2919,"startedAt":"2021-01-12T13:40:23.317Z","screenshots":[]}]},{"title":["Annotations Smoke Test","Beta users","Annotations popover and counter","should be able to add replies and the last one is always visible in the right panel"],"state":"passed","body":"function () {\n        var annotation = rightPanel.getAnnotation(0);\n        cy.step('Toggle annotations to get back to Annotations Mode');\n        workspace.clickAnnotationsModeButton();\n        cy.step('Switch to first annotation');\n        annotation.click();\n        cy.step('Assert page changed to About');\n        workspace.getTopbar().getPageMenu().getPageName().should('have.text', 'About Us');\n        cy.step('Assert media query is Tablet');\n        breakpoints.getTablet().isActive();\n        cy.step('Assert that there is only 1 reply');\n        annotation.getReplies().should('not.exist');\n        cy.step('Add new reply');\n        popover.addNewAnnotation('this is a new reply');\n        cy.step('Last reply should be visible in the right panel');\n        annotation.getContent().should('have.text', 'this is a new reply');\n        cy.step('Annotation popover container should now have 1 reply');\n        annotation.getReplies().should('contain', '1 reply');\n        popover.getAllReplies().should('have.length', 2);\n        cy.step('Add another reply');\n        popover.addNewAnnotation('this is a different reply');\n        cy.step('Last reply should be visible in the right panel');\n        annotation.getContent().should('have.text', 'this is a different reply');\n        cy.step('Annotation popover container should now have 2 replies');\n        annotation.getReplies().should('contain', '2 replies');\n        popover.getAllReplies().should('have.length', 3);\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3166,"startedAt":"2021-01-12T13:40:26.243Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/annotations/annotations-basic.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/annotations/annotations-basic.spec.js","absolute":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/entrypoints/designer/client/ui-tests/annotations/annotations-basic.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":6,"tests":30,"passes":30,"pending":0,"skipped":0,"failures":0,"duration":236199,"startedAt":"2021-01-12T13:40:37.150Z","endedAt":"2021-01-12T13:44:33.349Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":6,"tests":30,"passes":30,"pending":0,"failures":0,"start":"2021-01-12T13:40:37.153Z","end":"2021-01-12T13:44:33.361Z","duration":236208},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan(); // allows us to use a clean snapshot for every test\n\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    sidebar = workspace.getLeftSidebar();\n    rightPanel = workspace.getRightPanel();\n    canvas = workspace.getCanvas(); // load a fresh image fixture for each tes\n\n    (0, _cypressAppControls.loadFixture)('wolfdew.jpeg', 'image/jpeg').as('wolfdewImageBlob');\n    (0, _cypressAppControls.loadFixture)('webflow-logo.png', 'image/png').as('webflowLogoBlob');\n    (0, _cypressAppControls.loadFixture)('webflow-twitter.png', 'image/png').as('webflowTwitterBlob'); // make asset upload and deletion endpoints available as fixtures\n\n    cy.server();\n    cy.route('POST', '**/api/sites/*/upload').as('create-asset');\n    cy.route('POST', 'https://webflow-dev-assets.s3.amazonaws.com/').as('upload-asset');\n    cy.route('PUT', '**api/sites/*/files/*').as('delete-asset');\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    sidebar = workspace.getLeftSidebar();\n    sidebar.clickAssetsButton();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    sidebar = workspace.getLeftSidebar();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    sidebar = workspace.getLeftSidebar();\n    assetsTab = sidebar.clickAssetsButton(); // load a fresh image fixture for each test\n    // make asset upload and deletion endpoints available as fixtures\n\n    cy.server();\n    cy.route('POST', '**/api/sites/*/upload').as('create-asset');\n    cy.route('POST', 'https://webflow-dev-assets.s3.amazonaws.com/').as('upload-asset');\n    (0, _cypressAppControls.loadFixture)('wolfdew.jpeg', 'image/jpeg').then(function (blob) {\n      assetsTab.dropAsset(blob, 'image/jpeg', 'wolfdew.jpeg');\n    });\n    waitForAssetUpload();\n    dismissFirstTimeUserCallout();\n    (0, _cypressAppControls.loadFixture)('webflow-logo.png', 'image/png').then(function (blob) {\n      assetsTab.dropAsset(blob, 'image/png', 'webflow.png');\n    });\n    waitForAssetUpload();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    sidebar = workspace.getLeftSidebar();\n    sidebar.clickAssetsButton();\n    cy.get('[aria-label=\"Expand to Full View\"]').click();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    sidebar = workspace.getLeftSidebar();\n    assetsTab = sidebar.clickAssetsButton(); // load a fresh image fixture for each test\n\n    (0, _cypressAppControls.loadFixture)('wolfdew.jpeg', 'image/jpeg').as('wolfdewImageBlob');\n    (0, _cypressAppControls.loadFixture)('webflow-logo.png', 'image/png').as('webflowLogoBlob'); // make asset upload and deletion endpoints available as fixtures\n\n    cy.server();\n    cy.route('POST', '**/api/sites/*/upload').as('create-asset');\n    cy.route('POST', 'https://webflow-dev-assets.s3.amazonaws.com/').as('upload-asset');\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Asset upload and deletion","Can upload an asset"],"state":"passed","body":"function () {\n    var assetsTab = sidebar.clickAssetsButton();\n    var data = 'wolfdew.jpeg';\n    cy.get(\"[aria-label=\\\"wolfdew.jpeg\\\"]\").should('not.exist');\n    assetsTab.dropAsset(this.wolfdewImageBlob, 'image/jpeg', data);\n    waitForAssetUpload();\n    cy.get(\"[aria-label=\\\"wolfdew.jpeg\\\"]\").should('exist');\n    cy.getByDataAutomationId('asset-grid-item-spinner').should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13644,"startedAt":"2021-01-12T13:40:42.452Z","screenshots":[]}]},{"title":["Asset upload and deletion","Can add an uploaded asset to an image element on canvas"],"state":"passed","body":"function () {\n    cy.step('upload image asset');\n    var assetsTab = sidebar.clickAssetsButton();\n    assetsTab.dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpg');\n    waitForAssetUpload();\n    cy.step('add image element to the canvas');\n    sidebar.clickAddElementButton().clickBuiltinTab().clickOption('Image');\n    cy.step('add uploaded asset to the image element');\n    rightPanel.clickPropertiesTab().imageSettings.getUploadImageButton().click();\n    assetsTab.clickAsset('wolfdew.jpg');\n    cy.step('assert that the uploaded asset is now shown in the image element');\n    cy.getByDataAutomationId('close-mini-settings-button').click();\n    canvas.within(function () {\n      cy.get('img').should('have.attr', 'src').then(function (src) {\n        var srcString = src.toString();\n        expect(srcString.endsWith('wolfdew.jpg'), \"Image element src attribute did not reference wolfdew.jpg, found '\".concat(srcString, \"' instead.\")).to.be[\"true\"];\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13459,"startedAt":"2021-01-12T13:40:56.110Z","screenshots":[]}]},{"title":["Asset upload and deletion","Can delete an asset"],"state":"passed","body":"function () {\n    cy.step('upload image asset');\n    var assetsTab = sidebar.clickAssetsButton();\n    assetsTab.dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpg');\n    waitForAssetUpload();\n    cy.get(\"[aria-label=\\\"wolfdew.jpg\\\"]\").should('exist');\n    dismissFirstTimeUserCallout();\n    cy.step('delete the asset');\n    assetsTab.deleteAsset('wolfdew.jpg');\n    cy.step('make sure the request goes through');\n    cy.wait('@delete-asset').then(function (xhr) {\n      expect(xhr.requestBody.markedAsDeleted).to.equal(true);\n      expect(xhr.status).to.equal(200);\n    });\n    cy.step('assert that the asset is no longer in the assets tab');\n    cy.get(\"[aria-label=\\\"wolfdew.jpg\\\"]\").should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11279,"startedAt":"2021-01-12T13:41:09.578Z","screenshots":[]}]},{"title":["Asset upload and deletion","Keeps an asset on the canvas even if you delete it from the assets tab"],"state":"passed","body":"function () {\n    sidebar.clickAssetsButton().dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpg');\n    waitForAssetUpload();\n    dismissFirstTimeUserCallout();\n    sidebar.clickAddElementButton().clickBuiltinTab().clickOption('Image');\n    canvas.within(function () {\n      cy.get('img').should('have.attr', 'src').should('include', placeholderSrc);\n    });\n    rightPanel.clickPropertiesTab().imageSettings.getUploadImageButton().click();\n    var assetsTab = sidebar.getAssetsTab();\n    assetsTab.clickAsset('wolfdew.jpg');\n    cy.get('[data-automation-id=\"close-mini-settings-button\"]').click();\n    canvas.within(function () {\n      cy.get('img').should('have.attr', 'src').should(function (src) {\n        var srcString = src.toString();\n        expect(srcString.endsWith('wolfdew.jpg'), \"Image element src attribute did not reference wolfdew.jpg, found '\".concat(srcString, \"' instead.\")).to.be[\"true\"];\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13410,"startedAt":"2021-01-12T13:41:20.869Z","screenshots":[]}]},{"title":["Asset upload and deletion","Can upload an asset"],"state":"passed","body":"function () {\n    var assetsTab = sidebar.clickAssetsButton();\n    cy.get(\"[aria-label=\\\"wolfdew.jpg\\\"]\").should('not.exist');\n    assetsTab.dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpeg');\n    waitForAssetUpload();\n    dismissFirstTimeUserCallout();\n    cy.get(\"[aria-label=\\\"wolfdew.jpeg\\\"]\").should('exist');\n    cy.get('[data-automation-id=\"asset-grid-item-spinner\"]').should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10176,"startedAt":"2021-01-12T13:41:34.287Z","screenshots":[]}]},{"title":["Asset upload and deletion","Can add an uploaded asset to an image element on canvas"],"state":"passed","body":"function () {\n    cy.step('upload image asset');\n    sidebar.clickAssetsButton().dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpg');\n    waitForAssetUpload();\n    dismissFirstTimeUserCallout();\n    cy.step('add image element to the canvas');\n    sidebar.clickAddElementButton().clickBuiltinTab().clickOption('Image');\n    cy.step('add uploaded asset to the image element');\n    rightPanel.clickPropertiesTab().imageSettings.getUploadImageButton().click();\n    var assetsTab = sidebar.getAssetsTab();\n    assetsTab.clickAsset('wolfdew.jpg');\n    cy.step('assert that the uploaded asset is now shown in the image element');\n    cy.get('[data-automation-id=\"close-mini-settings-button\"]').click();\n    canvas.within(function () {\n      cy.get('img').should('have.attr', 'src').should(function (src) {\n        var srcString = src.toString();\n        expect(srcString.endsWith('wolfdew.jpg'), \"Image element src attribute did not reference wolfdew.jpg, found '\".concat(srcString, \"' instead.\")).to.be[\"true\"];\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14315,"startedAt":"2021-01-12T13:41:44.470Z","screenshots":[]}]},{"title":["Asset upload and deletion","Can delete an asset"],"state":"passed","body":"function () {\n    cy.step('upload image asset');\n    var assetsTab = sidebar.clickAssetsButton();\n    assetsTab.dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpg');\n    waitForAssetUpload();\n    dismissFirstTimeUserCallout();\n    cy.get(\"[aria-label=\\\"wolfdew.jpg\\\"]\").should('exist');\n    cy.step('delete the asset');\n    assetsTab.deleteAsset('wolfdew.jpg');\n    cy.step('make sure the request goes through');\n    cy.wait('@delete-asset').then(function (xhr) {\n      expect(xhr.requestBody.markedAsDeleted).to.equal(true);\n      expect(xhr.status).to.equal(200);\n    });\n    cy.step('assert that the asset is no longer in the assets tab');\n    cy.get(\"[aria-label=\\\"wolfdew.jpg\\\"]\").should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9809,"startedAt":"2021-01-12T13:41:58.793Z","screenshots":[]}]},{"title":["Asset upload and deletion","Keeps an asset on the canvas even if you delete it from the assets tab"],"state":"passed","body":"function () {\n    sidebar.clickAssetsButton().dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpg');\n    waitForAssetUpload();\n    dismissFirstTimeUserCallout();\n    sidebar.clickAddElementButton().clickBuiltinTab().clickOption('Image');\n    canvas.within(function () {\n      cy.get('img').should('have.attr', 'src').should('include', placeholderSrc);\n    });\n    rightPanel.clickPropertiesTab().imageSettings.getUploadImageButton().click();\n    var assetsTab = sidebar.getAssetsTab();\n    assetsTab.clickAsset('wolfdew.jpg');\n    cy.get('[data-automation-id=\"close-mini-settings-button\"]').click();\n    canvas.within(function () {\n      cy.get('img').should('have.attr', 'src').should(function (src) {\n        var srcString = src.toString();\n        expect(srcString.endsWith('wolfdew.jpg'), \"Image element src attribute did not reference wolfdew.jpg, found '\".concat(srcString, \"' instead.\")).to.be[\"true\"];\n      });\n    });\n    sidebar.clickAssetsButton().deleteAsset('wolfdew.jpg');\n    cy.wait('@delete-asset').then(function (xhr) {\n      expect(xhr.requestBody.markedAsDeleted).to.equal(true);\n      expect(xhr.status).to.equal(200);\n    });\n    canvas.within(function () {\n      cy.get('img').should('have.attr', 'src').should(function (src) {\n        var srcString = src.toString();\n        expect(srcString.endsWith('wolfdew.jpg'), \"Image element src attribute did not reference wolfdew.jpg, found '\".concat(srcString, \"' instead.\")).to.be[\"true\"];\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":16031,"startedAt":"2021-01-12T13:42:08.611Z","screenshots":[]}]},{"title":["Asset upload and deletion","Asset is un/selectable"],"state":"passed","body":"function () {\n    // getter functions avoid issues of trying to find an unmounted DOM element\n    // that gets replaced when props change\n    var getAsset = function getAsset() {\n      return cy.get('[aria-label=\"wolfdew.jpg\"]');\n    };\n\n    var getSelectButton = function getSelectButton() {\n      return cy.get('[aria-label=\"Select asset\"]');\n    };\n\n    var getUnselectButton = function getUnselectButton() {\n      return cy.get('[aria-label=\"Unselect asset\"]');\n    };\n\n    sidebar.clickAssetsButton().dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpg');\n    waitForAssetUpload();\n    dismissFirstTimeUserCallout();\n    cy.step('Open Full View');\n    cy.get('[aria-label=\"Expand to Full View\"]').click();\n    cy.step('hover and select asset');\n    getAsset().trigger('mouseover');\n    getSelectButton().click();\n    getAsset().trigger('mouseleave');\n    getUnselectButton().should('exist');\n    cy.step('unselect asset');\n    getUnselectButton().click();\n    getUnselectButton().should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11265,"startedAt":"2021-01-12T13:42:24.653Z","screenshots":[]}]},{"title":["Asset upload and deletion","should be able to bulk select and bulk unselect"],"state":"passed","body":"function () {\n    // getter functions avoid issues of trying to find an unmounted DOM element\n    // that gets replaced when props change\n    var getAsset = function getAsset() {\n      return cy.get('[aria-label=\"wolfdew.jpg\"]');\n    };\n\n    var getSelectButtons = function getSelectButtons() {\n      return cy.get('[aria-label=\"Select asset\"]');\n    };\n\n    var getUnselectButtons = function getUnselectButtons() {\n      return cy.get('[aria-label=\"Unselect asset\"]');\n    };\n\n    var getSelectAllButton = function getSelectAllButton() {\n      return cy.get('[aria-label=\"Select all assets\"]');\n    };\n\n    var getUnselectAllButton = function getUnselectAllButton() {\n      return cy.get('[aria-label=\"Unselect all assets\"]');\n    };\n\n    var assetsTab = sidebar.clickAssetsButton();\n    assetsTab.dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpg');\n    assetsTab.dropAsset(this.webflowLogoBlob, 'image/png', 'webflow.png');\n    waitForAssetUpload();\n    dismissFirstTimeUserCallout();\n    cy.step('Open Full View');\n    cy.get('[aria-label=\"Expand to Full View\"]').click();\n    cy.step('assert select all exists');\n    getSelectAllButton().should('exist');\n    cy.step('select a single asset to assert that cancel exists');\n    getAsset().trigger('mouseover');\n    getSelectButtons().first().click();\n    getAsset().trigger('mouseleave');\n    getUnselectAllButton().should('exist');\n    cy.step('use select all button');\n    getSelectAllButton().click();\n    getUnselectButtons().should('have.length', 2);\n    cy.step('use cancel button');\n    getUnselectAllButton().click();\n    getUnselectButtons().should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12644,"startedAt":"2021-01-12T13:42:35.929Z","screenshots":[]}]},{"title":["Asset upload and deletion","should be able to bulk delete assets"],"state":"passed","body":"function () {\n    var assetsTab = sidebar.clickAssetsButton();\n    assetsTab.dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpg');\n    assetsTab.dropAsset(this.webflowLogoBlob, 'image/png', 'webflow.png');\n    waitForAssetUpload();\n    dismissFirstTimeUserCallout();\n    cy.step('Open Full View');\n    cy.get('[aria-label=\"Expand to Full View\"]').click();\n    cy.step('Select all assets');\n    cy.get('[aria-label=\"wolfdew.jpg\"]').trigger('mouseover');\n    cy.get('[aria-label=\"Select asset\"]').first().click();\n    cy.get('[aria-label=\"Select all assets\"]').click();\n    cy.step('Click Delete');\n    cy.get('[aria-label=\"Delete selected assets\"]').click();\n    cy.step('Ensure correct number of assets are being deleted');\n    cy.get('p').contains(\"You're about to delete 2 assets.\").should('exist');\n    cy.step('Confirm deletion');\n    cy.get('[data-automation-id=\"Delete\"]').click();\n    cy.step('All assets are deleted');\n    cy.get('.bem-AssetGrid_Item').should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11113,"startedAt":"2021-01-12T13:42:48.585Z","screenshots":[]}]},{"title":["Asset Manager Views","should render Side View by default"],"state":"passed","body":"function () {\n    cy.get('[data-automation-id=\"AssetsTabSideView\"]').should('exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9438,"startedAt":"2021-01-12T13:42:59.709Z","screenshots":[]}]},{"title":["Asset Manager Views","should show Full View when Expand to Full View button is clicked"],"state":"passed","body":"function () {\n    cy.get('[aria-label=\"Expand to Full View\"]').click();\n    cy.get('[data-automation-id=\"AssetsTabFullView\"]').should('exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9534,"startedAt":"2021-01-12T13:43:09.152Z","screenshots":[]}]},{"title":["Asset Manager Views","should return to Side View when Close Full View button is clicked"],"state":"passed","body":"function () {\n    cy.get('[aria-label=\"Expand to Full View\"]').click();\n    cy.get('[data-automation-id=\"AssetsTabFullView\"]').should('exist');\n    cy.get('[aria-label=\"Close Full View\"]').click();\n    cy.get('[data-automation-id=\"AssetsTabFullView\"]').should('not.exist');\n    cy.get('[data-automation-id=\"AssetsTabSideView\"]').should('exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10114,"startedAt":"2021-01-12T13:43:18.692Z","screenshots":[]}]},{"title":["Asset Manager Add Folder Flow","should switch to Full View whenever Add Folder is clicked"],"state":"passed","body":"function () {\n    sidebar.clickAssetsButton(); // Side View -> Full View\n\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"AssetsTabFullView\"]').should('exist'); // Clear the modal\n\n    cy.get('[data-automation-id=\"Cancel\"]').click(); // Full View -> Full View\n\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"AssetsTabFullView\"]').should('exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10149,"startedAt":"2021-01-12T13:43:28.812Z","screenshots":[]}]},{"title":["Asset Manager Add Folder Flow","should open the Add Folder modal when Add Folder is clicked"],"state":"passed","body":"function () {\n    cy.get('[data-automation-id=\"AddFolderModal\"]').should('exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":27,"startedAt":"2021-01-12T13:43:38.968Z","screenshots":[]}]},{"title":["Asset Manager Add Folder Flow","should display default folder options"],"state":"passed","body":"function () {\n    cy.get('[data-automation-id=\"ParentFolderSelect\"]').should('exist');\n    cy.get('[data-automation-id=\"ParentFolderSelect\"]').should('contain', 'None');\n    cy.get('[data-automation-id=\"FolderNameInput\"]').should('exist');\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').should('have.value', 'Untitled');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":39,"startedAt":"2021-01-12T13:43:38.996Z","screenshots":[]}]},{"title":["Asset Manager Add Folder Flow","should create a new folder on submission"],"state":"passed","body":"function () {\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type('Test Folder');\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.get('[data-automation-id=\"FolderList\"]').should('exist');\n    cy.get('[data-automation-id=\"FolderItem\"]').should('have.length', 1).should('contain', 'Test Folder');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":685,"startedAt":"2021-01-12T13:43:39.036Z","screenshots":[]}]},{"title":["Asset Manager Add Folder Flow","should use the selected folder as the selected parent folder"],"state":"passed","body":"function () {\n    cy.get('[data-automation-id=\"FolderItem\"]').contains('Test Folder').click();\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"ParentFolderSelect\"]').should('contain', 'Test Folder');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":341,"startedAt":"2021-01-12T13:43:39.722Z","screenshots":[]}]},{"title":["Asset Manager Add Folder Flow","should create a nested folder"],"state":"passed","body":"function () {\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type('Sub Folder');\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.get('[data-automation-id=\"FolderItem\"]').contains('Sub Folder').should('exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":741,"startedAt":"2021-01-12T13:43:40.064Z","screenshots":[]}]},{"title":["Asset Manager Delete Folder Flow","should be able to delete a single folder"],"state":"passed","body":"function () {\n    var folderName = 'Test Folder';\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type(folderName);\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.step('verify folder exists');\n    cy.get('[data-automation-id=\"FolderList\"]').should('exist');\n    cy.get('[data-automation-id=\"FolderItem\"]').should('have.length', 1).should('contain', folderName);\n    cy.get('[data-automation-id=\"FolderItem\"]').contains(folderName).parent().within(function () {\n      cy.get('[data-automation-id=\"Toggle settings\"]').click();\n    });\n    cy.get('[data-automation-id=\"Delete Folder\"]').click();\n    cy.step('verify folder deletion');\n    cy.get('[data-automation-id=\"FolderList\"]').should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11878,"startedAt":"2021-01-12T13:43:40.806Z","screenshots":[]}]},{"title":["Asset Manager Delete Folder Flow","should delete all nested folders when parent is deleted"],"state":"passed","body":"function () {\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type('A');\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.get('[data-automation-id=\"FolderItem\"]').contains('A').click();\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type('B');\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.step('verify folders');\n    cy.get('[data-automation-id=\"FolderItem\"]').should('have.length', 2);\n    cy.step('delete A');\n    cy.get('[data-automation-id=\"FolderItem\"]').contains('A').parent().within(function () {\n      cy.get('[data-automation-id=\"Toggle settings\"]').click();\n    });\n    cy.get('[data-automation-id=\"Delete Folder\"]').click();\n    cy.step('verify deletion');\n    cy.get('[data-automation-id=\"FolderList\"]').should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2596,"startedAt":"2021-01-12T13:43:52.694Z","screenshots":[]}]},{"title":["Asset Manager Delete Folder Flow","should delete all associated assets after confirmation"],"state":"passed","body":"function () {\n    cy.step('create a set of nested folders');\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type('A');\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.get('[data-automation-id=\"FolderItem\"]').contains('A').click();\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type('B');\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.step('move an asset to A folder');\n    cy.get('[aria-label=\"All Assets\"]').click();\n    cy.get('[aria-label=\"wolfdew.jpeg\"]').trigger('mouseover');\n    cy.get('[aria-label=\"wolfdew.jpeg\"] [aria-label=\"Select asset\"]').click();\n    cy.get('[aria-label=\"wolfdew.jpeg\"]').trigger('mouseleave');\n    cy.get('[aria-label=\"Move selected assets\"]').click();\n    cy.get('[data-automation-id=\"DestinationFolderSelect\"]').click();\n    cy.get('[data-automation-id=\"DestinationFolderOption-A\"]').click();\n    cy.get('[data-automation-id=\"Move\"]').click();\n    cy.step('move other asset to B folder');\n    cy.get('[aria-label=\"webflow.png\"]').trigger('mouseover');\n    cy.get('[aria-label=\"webflow.png\"] [aria-label=\"Select asset\"]').click();\n    cy.get('[aria-label=\"webflow.png\"]').trigger('mouseleave');\n    cy.get('[aria-label=\"Move selected assets\"]').click();\n    cy.get('[data-automation-id=\"DestinationFolderSelect\"]').click();\n    cy.get('[data-automation-id=\"DestinationFolderOption-B\"]').click();\n    cy.get('[data-automation-id=\"Move\"]').click();\n    cy.step('delete folder A');\n    cy.get('[data-automation-id=\"FolderItem\"]').contains('A').parent().within(function () {\n      cy.get('[data-automation-id=\"Toggle settings\"]').click();\n    });\n    cy.get('[data-automation-id=\"Delete Folder\"]').click();\n    cy.step('verify modal says 2 assets');\n    cy.get('[data-automation-id=\"dialog-body-content\"]').contains('2 assets');\n    cy.step('delete');\n    cy.get('[data-automation-id=\"Delete\"]').click();\n    cy.step('verify assets are deleted'); // This deletion should have automatically moved us to the All Assets filter\n\n    cy.get('.bem-AssetGrid_Item').should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3625,"startedAt":"2021-01-12T13:43:55.292Z","screenshots":[]}]},{"title":["Asset Manager Edit Folder Flow","should be able to edit a folder name"],"state":"passed","body":"function () {\n    cy.step('make folder');\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type(folder1);\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.step('verify folder exists');\n    cy.get('[data-automation-id=\"FolderList\"]').should('exist');\n    cy.get('[data-automation-id=\"FolderItem\"]').should('have.length', 1).should('contain', folder1);\n    cy.step('edit name');\n    cy.get('[data-automation-id=\"FolderItem\"]').contains(folder1).parent().within(function () {\n      cy.get('[data-automation-id=\"Toggle settings\"]').click();\n    });\n    folder1 = 'Edit Test Folder';\n    cy.get('[data-automation-id=\"Edit Folder\"]').click();\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type(folder1);\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.step('verify edited name');\n    cy.get('[data-automation-id=\"FolderList\"]').should('exist');\n    cy.get('[data-automation-id=\"FolderItem\"]').should('have.length', 1).should('contain', folder1);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12233,"startedAt":"2021-01-12T13:43:58.918Z","screenshots":[]}]},{"title":["Asset Manager Edit Folder Flow","should be able to edit the parent of a folder"],"state":"passed","body":"function () {\n    cy.step('make second folder');\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type(folder2);\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.step('verify folders exists');\n    cy.get('[data-automation-id=\"FolderList\"]').should('exist');\n    cy.get('[data-automation-id=\"FolderItem\"]').should('have.length', 2);\n    cy.step('edit parent');\n    cy.get('[data-automation-id=\"FolderItem\"]').contains(folder2).parent().within(function () {\n      cy.get('[data-automation-id=\"Toggle settings\"]').click();\n    });\n    cy.get('[data-automation-id=\"Edit Folder\"]').click();\n    cy.get('[data-automation-id=\"ParentFolderSelect\"]').click();\n    cy.get(\"[data-automation-id=\\\"ParentFolderOption-\".concat(folder1, \"\\\"]\")).click();\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.step('verify edit'); // This works because folder2 should now be a child of folder1\n    // and by default not visible.\n\n    cy.get('[data-automation-id=\"FolderItem\"]').should('have.length', 1);\n    cy.get('[data-automation-id=\"FolderItem\"]').contains(folder1).parent().within(function () {\n      cy.get('[data-automation-id=\"Toggle sub folders\"]').click();\n    });\n    cy.get('[data-automation-id=\"FolderItem\"]').should('have.length', 2);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1850,"startedAt":"2021-01-12T13:44:11.160Z","screenshots":[]}]},{"title":["Asset Manager Edit Folder Flow","should update the current filter if that folder is edited"],"state":"passed","body":"function () {\n    cy.step('select a folder as filter');\n    cy.get('[data-automation-id=\"FolderItem\"]').contains(folder1).parent().click();\n    cy.step('update that folder name');\n    cy.get('[data-automation-id=\"FolderItem\"]').contains(folder1).parent().within(function () {\n      cy.get('[data-automation-id=\"Toggle settings\"]').click();\n    });\n    folder1 = 'Edit Test Folder Again';\n    cy.get('[data-automation-id=\"Edit Folder\"]').click();\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type(folder1);\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.step('verify filter heading updates, too');\n    cy.get('[data-automation-id=\"panel-header\"]').contains(folder1).should('exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1281,"startedAt":"2021-01-12T13:44:13.011Z","screenshots":[]}]},{"title":["Asset Manager Bulk Move Assets Flow","should be able to move assets into a folder"],"state":"passed","body":"function () {\n    cy.step('upload assets');\n    assetsTab.dropAsset(this.wolfdewImageBlob, 'image/jpeg', 'wolfdew.jpeg');\n    waitForAssetUpload();\n    dismissFirstTimeUserCallout();\n    assetsTab.dropAsset(this.webflowLogoBlob, 'image/png', 'webflow.png');\n    waitForAssetUpload();\n    cy.step('create folder');\n    cy.get('[aria-label=\"Add folder\"]').click();\n    cy.get('[data-automation-id=\"FolderNameInput\"] > input').clear().type('Test Folder');\n    cy.get('[data-automation-id=\"Submit\"]').click();\n    cy.step('select assets');\n    cy.get('[aria-label=\"Select all assets\"]').click();\n    cy.step('initiate move');\n    cy.get('[aria-label=\"Move selected assets\"]').click();\n    cy.step('select destination folder');\n    cy.get('[data-automation-id=\"DestinationFolderSelect\"]').click();\n    cy.get('[data-automation-id=\"DestinationFolderOption-Test Folder\"]').click();\n    cy.step('submit');\n    cy.get('[data-automation-id=\"Move\"]').click();\n    cy.step('filter by the destination folder');\n    cy.get('[data-automation-id=\"FolderItem\"]').contains('Test Folder').click();\n    cy.step('verify images are displayed by folder filter');\n    cy.get('.bem-AssetGrid_Item').should('have.length', 2);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":16765,"startedAt":"2021-01-12T13:44:14.294Z","screenshots":[]}]},{"title":["Asset Manager Bulk Move Assets Flow","should be able to create a new folder and move assets in one step"],"state":"passed","body":"function () {\n    cy.step('select assets');\n    cy.get('[aria-label=\"Select all assets\"]').click();\n    cy.step('initiate move');\n    cy.get('[aria-label=\"Move selected assets\"]').click();\n    cy.step('create new folder path');\n    cy.get('[data-automation-id=\"CreateNewFolder\"]').click();\n    cy.step('Name new folder');\n    cy.get('[data-automation-id=\"DestinationFolderNameInput\"] > input').clear().type('Test Folder 2');\n    cy.step('submit');\n    cy.get('[data-automation-id=\"Add and Move\"]').click();\n    cy.get('[data-automation-id=\"FolderItem\"]').get('[aria-label=\"Test Folder 2\"]').click();\n    cy.get('.bem-AssetGrid_Item').should('have.length', 2);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1240,"startedAt":"2021-01-12T13:44:31.072Z","screenshots":[]}]},{"title":["Asset Manager Bulk Move Assets Flow","should be able to go back to existing folders"],"state":"passed","body":"function () {\n    cy.step('select assets in currently filtered folder');\n    cy.get('[aria-label=\"Select all assets\"]').click();\n    cy.step('initiate move');\n    cy.get('[aria-label=\"Move selected assets\"]').click();\n    cy.step('start create new folder path');\n    cy.get('[data-automation-id=\"CreateNewFolder\"]').click();\n    cy.step('go back instead');\n    cy.get('[data-automation-id=\"UseExistingFolder\"]').click();\n    cy.get('[data-automation-id=\"CreateNewFolder\"]').should('exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":494,"startedAt":"2021-01-12T13:44:32.313Z","screenshots":[]}]},{"title":["Asset Manager Bulk Move Assets Flow","should be able to move assets out of folder"],"state":"passed","body":"function () {\n    cy.step('select None folder');\n    cy.get('[data-automation-id=\"DestinationFolderSelect\"]').click();\n    cy.get('[data-automation-id=\"DestinationFolderOption-None\"]').click();\n    cy.step('submit');\n    cy.get('[data-automation-id=\"Move\"]').click();\n    cy.step('verify current folder has no assets');\n    cy.get('.bem-AssetGrid_Item').should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":540,"startedAt":"2021-01-12T13:44:32.808Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/assets.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/assets.spec.js","absolute":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/entrypoints/designer/client/ui-tests/assets.spec.js","specType":"integration"},"shouldUploadVideo":false}],"browserPath":"/chromium64/chrome-linux/chrome","browserName":"chromium","browserVersion":"74.0.3729.0","osName":"linux","osVersion":"Debian - 9.13","cypressVersion":"6.2.1","config":{"env":{"baseUrl":"http://wfdev.io:3030","stagingSuperDomain":"dev.webflowtest.io","User-Agent":"cypress","RECORD_KEY":"f9ae3...c4cf9"},"integrationFolder":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow","configFile":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/cypress.json","version":"6.2.1","chromeWebSecurity":false,"browser":"chromium","video":false,"videoUploadOnPasses":false,"viewportWidth":1440,"viewportHeight":900,"defaultCommandTimeout":30000,"numTestsKeptInMemory":0,"ignoreTestFiles":"*.quarantined.spec.js","testFiles":"**/*.spec.js","fileServerFolder":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config","fixturesFolder":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/fixtures","pluginsFile":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/plugins/index.js","screenshotsFolder":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/screenshots","supportFile":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/support/index.js","videosFolder":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/videos","retries":{"runMode":2,"openMode":0},"projectId":"xfhtj7","reporter":"../../../node_modules/cypress-multi-reporters","reporterOptions":{"configFile":"reporter-config.json"},"projectRoot":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config","projectName":"cypress-config","morgan":false,"isTextTerminal":true,"socketId":"krzv1","report":true,"browsers":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"animationDistanceThreshold":5,"autoOpen":false,"baseUrl":null,"blockHosts":null,"clientRoute":"/__/","componentFolder":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/cypress/component","execTimeout":60000,"experimentalComponentTesting":false,"experimentalFetchPolyfill":false,"experimentalRunEvents":false,"experimentalSourceRewriting":false,"firefoxGcInterval":{"runMode":1,"openMode":null},"hosts":null,"includeShadowDom":false,"javascripts":[],"modifyObstructiveCode":true,"namespace":"__cypress","nodeVersion":"default","pageLoadTimeout":60000,"port":41505,"reporterRoute":"/__cypress/reporter","requestTimeout":5000,"responseTimeout":30000,"screenshotOnRunFailure":true,"socketIoRoute":"/__socket.io","socketIoCookie":"__socket.io","taskTimeout":60000,"trashAssetsBeforeRuns":true,"userAgent":null,"videoCompression":32,"waitForAnimations":true,"scrollBehavior":"top","watchForFileChanges":false,"xhrRoute":"/xhrs/","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"baseUrl":{"value":null,"from":"default"},"blockHosts":{"value":null,"from":"default"},"browsers":{"value":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"from":"default"},"chromeWebSecurity":{"value":false,"from":"config"},"componentFolder":{"value":"cypress/component","from":"default"},"defaultCommandTimeout":{"value":30000,"from":"config"},"env":{"baseUrl":{"value":"http://wfdev.io:3030","from":"plugin"},"User-Agent":{"value":"cypress","from":"config"},"RECORD_KEY":{"value":"f9ae3...c4cf9","from":"env"},"stagingSuperDomain":{"value":"dev.webflowtest.io","from":"plugin"}},"execTimeout":{"value":60000,"from":"default"},"experimentalComponentTesting":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalRunEvents":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"fileServerFolder":{"value":"./","from":"config"},"firefoxGcInterval":{"value":{"runMode":1,"openMode":null},"from":"default"},"fixturesFolder":{"value":"./fixtures","from":"config"},"hosts":{"value":null,"from":"default"},"ignoreTestFiles":{"value":"*.quarantined.spec.js","from":"config"},"includeShadowDom":{"value":false,"from":"default"},"integrationFolder":{"value":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow","from":"plugin"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"value":"default","from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"pageLoadTimeout":{"value":60000,"from":"default"},"pluginsFile":{"value":"./plugins/index.js","from":"config"},"port":{"value":null,"from":"default"},"projectId":{"value":"xfhtj7","from":"config"},"reporter":{"value":"../../../node_modules/cypress-multi-reporters","from":"cli"},"reporterOptions":{"value":{"configFile":"reporter-config.json"},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":2,"openMode":0},"from":"config"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"./screenshots","from":"config"},"supportFile":{"value":"./support/index.js","from":"config"},"taskTimeout":{"value":60000,"from":"default"},"testFiles":{"value":"**/*.spec.js","from":"config"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"config"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"./videos","from":"config"},"videoUploadOnPasses":{"value":false,"from":"config"},"viewportHeight":{"value":900,"from":"config"},"viewportWidth":{"value":1440,"from":"config"},"waitForAnimations":{"value":true,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"configFile":{"value":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/cypress.json","from":"plugin"},"version":{"value":"6.2.1","from":"plugin"}},"parentTestsFolder":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/cypress","parentTestsFolderDisplay":"cypress-config/cypress","supportFolder":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/support","integrationExampleName":"examples","integrationExamplePath":"/scratch/buildkite-agent-8d926af1-54da-11eb-97fa-4a22e55b2d68-l8n2t/webflow/webflow/packages/tooling/cypress-config/cypress/integration/examples","scaffoldedFiles":[{"name":"cypress","children":[{"name":"integration","children":[{"name":"examples","children":[{"name":"actions.spec.js"},{"name":"aliasing.spec.js"},{"name":"assertions.spec.js"},{"name":"connectors.spec.js"},{"name":"cookies.spec.js"},{"name":"cypress_api.spec.js"},{"name":"files.spec.js"},{"name":"local_storage.spec.js"},{"name":"location.spec.js"},{"name":"misc.spec.js"},{"name":"navigation.spec.js"},{"name":"network_requests.spec.js"},{"name":"querying.spec.js"},{"name":"spies_stubs_clocks.spec.js"},{"name":"traversal.spec.js"},{"name":"utilities.spec.js"},{"name":"viewport.spec.js"},{"name":"waiting.spec.js"},{"name":"window.spec.js"}]}]}]},{"name":"fixtures","children":[{"name":"example.json"}]},{"name":"support","children":[{"name":"commands.js"},{"name":"index.js"}]},{"name":"plugins","children":[{"name":"index.js"}]}],"resolvedNodeVersion":"12.18.3","state":{},"proxyUrl":"http://localhost:41505","browserUrl":"http://localhost:41505/__/","reporterUrl":"http://localhost:41505/__cypress/reporter","xhrUrl":"__cypress/xhrs/"},"status":"finished"}]