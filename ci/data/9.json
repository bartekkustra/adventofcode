[{"startedTestsAt":"2021-01-12T13:40:41.561Z","endedTestsAt":"2021-01-12T14:01:49.457Z","totalDuration":1166158,"totalSuites":359,"totalTests":900,"totalFailed":0,"totalPassed":900,"totalPending":0,"totalSkipped":0,"runs":[{"stats":{"suites":4,"tests":5,"passes":5,"pending":0,"skipped":0,"failures":0,"duration":23725,"startedAt":"2021-01-12T13:40:41.561Z","endedAt":"2021-01-12T13:41:05.286Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":4,"tests":5,"passes":5,"pending":0,"failures":0,"start":"2021-01-12T13:40:41.564Z","end":"2021-01-12T13:41:05.294Z","duration":23730},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.openCMSItem).as('open-cms-item');\n\n      cy.step('Load a snapshot with at least one pre-made CMS collection');\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.fiveDummyItems);\n      cy.step('Click the CMS button on the left sidebar to open the panel');\n      cmsTab = workspace.getLeftSidebar().clickCMSButton();\n      cy.step('Click to open the Dummy Items collection');\n      collectionPanel = cmsTab.getCollectionByName('Testers').clickCollectionTab();\n      cy.wait('@open-cms-item');\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS Collection Settings","Scenario: Opening an already-made collection's settings","should open the collection settings form"],"state":"passed","body":"function () {\n      cy.step('Click the settings button');\n      collectionSettings = collectionPanel.clickSettingsButton();\n      cy.step('Assert that the collection settings form is open');\n      collectionSettings.getHeading().contains('Tester Settings').should('exist');\n      cy.step('Close all UI panels');\n      workspace.escapeAllUiPanels();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12414,"startedAt":"2021-01-12T13:40:47.901Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Adding a custom field to an existing CMS collection","should add a new field to the existing CMS collection"],"state":"passed","body":"function () {\n      cy.step('Click the CMS button on the left sidebar to open the panel');\n      cmsTab = workspace.getLeftSidebar().clickCMSButton();\n      cy.step(\"Click the 'Add Field' button\");\n      var fieldOptions = collectionSettings.clickAddFieldButton();\n      cy.step(\"Add a new 'PlanText' field\");\n      fieldOptions.clickOption('PlainText').fill(plainTextField).clickSaveButton();\n      cy.step('Assert that the new text field exists within the collection form');\n      collectionSettings.getCustomFieldsList().should('be.visible').and('contain', 'Test Text Field');\n      cy.step('Save the changes to the collection');\n      collectionSettings.clickSaveCollectionButton();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1963,"startedAt":"2021-01-12T13:41:00.326Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Adding a custom field to an existing CMS collection","should assert that the CMS items have a new, empty text field"],"state":"passed","body":"function () {\n      cy.step('Click to open the first collection item');\n      collectionPanel.clickCollectionItem('Natus Porro Quos');\n      cy.step('Asseert that the custom text field exists');\n      cy.getByDataAutomationId('dyn-item-test-text-field-input').should('exist').and('have.value', '');\n      cy.step('Close all UI panels');\n      workspace.escapeAllUiPanels();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1026,"startedAt":"2021-01-12T13:41:02.291Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Removing a custom field from a CMS collection","should delete a field from the CMS collection"],"state":"passed","body":"function () {\n      cy.step('Click the CMS button on the left sidebar to open the panel');\n      cmsTab = workspace.getLeftSidebar().clickCMSButton();\n      cy.step('Click to open the Dummy Items collection');\n      cmsTab.getCollectionByName('Testers').clickCollectionTab();\n      cy.step('Click the settings button');\n      collectionSettings = collectionPanel.clickSettingsButton();\n      cy.step('Click the Test Text field');\n      var fieldSettings = collectionSettings.clickCustomField(plainTextField.label);\n      cy.step('Remove the field');\n      fieldSettings.remove();\n      cy.step('Assert that the text field no longer exists exists');\n      collectionSettings.getCustomFieldsList().contains('Test Text Field').should('not.exist');\n      cy.step('Save the changes to the collection');\n      collectionSettings.clickSaveCollectionButton();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1574,"startedAt":"2021-01-12T13:41:03.318Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Removing a custom field from a CMS collection","should assert that the CMS items no longer has the Test Text field"],"state":"passed","body":"function () {\n      cy.step('Click the first collection item');\n      collectionPanel.clickCollectionItem('Natus Porro Quos');\n      cy.step('Assert that th custom field no longer exists');\n      cy.getByDataAutomationId('dyn-item-test-text-input').should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":385,"startedAt":"2021-01-12T13:41:04.900Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/settings/cms-collection-settings.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/settings/cms-collection-settings.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/cms/settings/cms-collection-settings.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":19311,"startedAt":"2021-01-12T13:41:12.872Z","endedAt":"2021-01-12T13:41:32.183Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:41:12.875Z","end":"2021-01-12T13:41:32.220Z","duration":19345},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    sidebar = workspace.getLeftSidebar();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Create read only preview link","can create a read only link"],"state":"passed","body":"function () {\n    cy.step('Click on the Share Project button');\n    cy.getByDataAutomationId('share-project-button').click();\n    cy.step('Toggle the share switch ON');\n    cy.getByDataAutomationId('read-only-input-outer').click();\n    cy.step('Copy the read only link to clipboard');\n    cy.getByDataAutomationId('copy-read-only-link-button').click();\n    cy.step('Verify the action was successful');\n    cy.getByDataAutomationId('copy-read-only-link-check').should('be.visible');\n    cy.step('Toggle the share switch OFF');\n    cy.getByDataAutomationId('read-only-input-outer').click();\n    cy.getByDataAutomationId('copy-read-only-link-check').should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12984,"startedAt":"2021-01-12T13:41:18.021Z","screenshots":[]}]},{"title":["Create read only preview link","with a pinned navigator","should not render the entire navigator panel over the canvas"],"state":"passed","body":"function () {\n      cy.step('Select the Navigator panel');\n      sidebar.clickNavigatorButton();\n      cy.step('Pin the navigator to the canvas');\n      cy.getByDataAutomationId('pin-navigator-button').click();\n      cy.step('Click on the Share Project button');\n      cy.getByDataAutomationId('share-project-button').click();\n      cy.step('Toggle the share switch ON');\n      cy.getByDataAutomationId('read-only-input-outer').click();\n      cy.step('Copy the read only link to clipboard');\n      cy.getByDataAutomationId('copy-read-only-link-button').click();\n      cy.step('Verify the full navigator panel does not show up');\n      cy.getByDataAutomationId('navigator-panel').should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1165,"startedAt":"2021-01-12T13:41:31.015Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/create-preview-link.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/create-preview-link.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/create-preview-link.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":34749,"startedAt":"2021-01-12T13:41:39.667Z","endedAt":"2021-01-12T13:42:14.416Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:41:39.671Z","end":"2021-01-12T13:42:14.421Z","duration":34750},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    finder = workspace.getFinder();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Designer Interactions #1","should open and focus on the finder when the [cmd+k] key combo is pressed"],"state":"passed","body":"function () {\n    cy.step('Open Finder');\n    finder = finder.open();\n    cy.step('Assert that the finder is open');\n    finder.getInput().should('be.visible').should('have.attr', 'placeholder', 'Find anything...');\n    cy.step('Assert that the focused element is the finder');\n    finder.getInput().should('have.focus');\n    cy.step('Select the body element and simulate a click (exits out of the Finder input)');\n    cy.get('body').click();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12065,"startedAt":"2021-01-12T13:41:45.534Z","screenshots":[]}]},{"title":["Designer Interactions #1","should be able to add a new element, style it and add a new page"],"state":"passed","body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    canvas = workspace.getCanvas();\n    cy.step('Add div element with class .qa-div');\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DivBlock');\n    workspace.getRightPanel().clickStylesTab().selector.setClassNames(['qa-div']);\n    cy.step('Add background color: yellow to class .qa-div');\n    canvas.selectElement('.qa-div');\n    var backgrounds = workspace.getRightPanel().clickStylesTab().properties.backgrounds;\n    backgrounds.input.clickAddButton().clickSolidColorType().color.setValue('yellow');\n    cy.step('Close finder');\n    finder.close();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13268,"startedAt":"2021-01-12T13:41:57.609Z","screenshots":[]}]},{"title":["Designer Interactions #1","should be able to delete an element"],"state":"passed","body":"function () {\n    cy.step('Add div element with class .qa-div');\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DivBlock');\n    workspace.getRightPanel().clickStylesTab().selector.setClassNames(['qa-div']);\n    workspace.escapeAllUiPanels();\n    cy.step('Remove the .qa-div element');\n    canvas.selectElement('.qa-div');\n    cy.get('body').type('{backspace}');\n    cy.step(\"Assert .qa-div doesn't exist on canvas\");\n    canvas.within(function () {\n      cy.get('.qa-div').should('not.exist');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3527,"startedAt":"2021-01-12T13:42:10.887Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/designer-interactions-01.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/designer-interactions-01.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/designer-interactions-01.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":34491,"startedAt":"2021-01-12T13:42:22.116Z","endedAt":"2021-01-12T13:42:56.607Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:42:22.121Z","end":"2021-01-12T13:42:56.661Z","duration":34540},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    _cypressAppControls.api.verifyUser();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Designer Interactions #2","should be able to change classname and render it properly on canvas and published site"],"state":"passed","body":"function () {\n    var firstClass = 'qa-div';\n    var secondClass = 'qa-new-div';\n    var stylesTab = workspace.getRightPanel().clickStylesTab();\n    var backgrounds = stylesTab.properties.backgrounds;\n    cy.step(\"Add div with class \\\".\".concat(firstClass, \"\\\"\"));\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DivBlock');\n    workspace.getRightPanel().clickStylesTab().selector.setClassNames([firstClass]);\n    cy.step(\"Add background color: yellow to class \\\".\".concat(firstClass, \"\\\"\"));\n    workspace.getRightPanel().clickStylesTab().properties.backgroundColor.input.openPicker().setHex('yellow').close();\n    var item = backgrounds.input.clickAddButton();\n    item.clickSolidColorType().color.setValue('yellow');\n    cy.step('Assert background color on canvas');\n    canvas.within(function () {\n      cy.get(\".\".concat(firstClass)).should('have.css', 'background-color').and('match', /(rgb\\(255, 255, 0\\)|yellow)/);\n    });\n    cy.step('Publish site');\n    workspace.getTopbar().clickPublishButton().clickPublishSelectedDomainsButton().waitUntilDonePublishing().then(function (href) {\n      cy.step('Verify site');\n\n      _cypressAppControls.PublishedUtils.verifyCssAttributeOnPublishedSite(href, {\n        className: firstClass,\n        css: '#ff0'\n      });\n    });\n    cy.step('Close Publish window');\n    workspace.getTopbar().clickPublishButton();\n    cy.step('Close all open UIs');\n    workspace.escapeAllUiPanels();\n    cy.step(\"Select .\".concat(firstClass, \" on canvas\"));\n    canvas.selectElement(\".\".concat(firstClass));\n    cy.step(\"Rename class to: \\\"\".concat(secondClass, \"\\\"\"));\n    workspace.getRightPanel().clickStylesTab().selector.renameClass(firstClass, secondClass);\n    cy.step('Publish site');\n    workspace.getTopbar().clickPublishButton().clickPublishSelectedDomainsButton().waitUntilDonePublishing().then(function (href) {\n      cy.step('Verify site');\n\n      _cypressAppControls.PublishedUtils.verifyCssAttributeOnPublishedSite(href, {\n        className: secondClass,\n        css: '#ff0'\n      });\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":29182,"startedAt":"2021-01-12T13:42:27.421Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/designer-interactions-02.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/designer-interactions-02.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/designer-interactions-02.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":34207,"startedAt":"2021-01-12T13:43:04.180Z","endedAt":"2021-01-12T13:43:38.387Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:43:04.182Z","end":"2021-01-12T13:43:38.438Z","duration":34256},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Designer Interactions #3","should be able to add a new element, style it and add a new page"],"state":"passed","body":"function () {\n    _cypressAppControls.api.verifyUser();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    cy.step('Add div element with class .qa-div');\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DivBlock');\n    workspace.getRightPanel().clickStylesTab().selector.setClassNames(['qa-div']);\n    cy.step('Add background color: yellow to class .qa-div');\n    stylesTab = workspace.getRightPanel().clickStylesTab();\n    var picker = stylesTab.properties.backgroundColor.input.openPicker();\n    picker.setHex('yellow');\n    picker.close();\n    cy.step('Assert .qa-div has yellow background');\n    canvas = workspace.getCanvas();\n    canvas.within(function () {\n      cy.get('.qa-div').should('have.css', 'background-color').and('match', /(rgb\\(255, 255, 0\\)|yellow)/);\n    });\n    cy.step('Create new Contact page');\n    var pageManager = workspace.getLeftSidebar().clickPagesTab();\n    var form = pageManager.clickAddNewPageButton();\n    form.fill({\n      name: 'Contact'\n    }).clickCreateButton();\n    workspace.getTopbar().getPageMenu().getPageName().should('contain', 'Contact');\n    cy.step('Add heading element');\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Heading');\n    workspace.getRightPanel().clickStylesTab().selector.setClassNames(['qa-heading']);\n    cy.step('Replace heading text');\n    workspace.escapeAllUiPanels();\n    canvas.type('.qa-heading', 'Contact Us');\n    cy.step('Publish site');\n    workspace.getTopbar().clickPublishButton().clickPublishSelectedDomainsButton().waitUntilDonePublishing().then(function (href) {\n      Cypress.env('pageUrl', href);\n      cy.forceVisit(href);\n      cy.get('.qa-heading').should('exist').and('be.visible').and('have.text', 'Contact Us');\n      var homePageUrl = href.substring(0, href.lastIndexOf('/'));\n      cy.forceVisit(homePageUrl);\n      cy.get('.qa-div').should('exist').and('have.css', 'background-color').and('match', /(rgb\\(255, 255, 0\\)|yellow)/);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":29156,"startedAt":"2021-01-12T13:43:09.229Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/designer-interactions-03.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/designer-interactions-03.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/designer-interactions-03.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":31564,"startedAt":"2021-01-12T13:43:45.788Z","endedAt":"2021-01-12T13:44:17.352Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:43:45.790Z","end":"2021-01-12T13:44:17.364Z","duration":31574},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.verifyUser();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Designer Interactions Test","should add nodes to the canvas"],"state":"passed","body":"function () {\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Section');\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Container');\n    workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Paragraph');\n    canvas.doubleClickElement('p');\n    canvas.within(function () {\n      cy.get('p').type('This is a random change');\n    });\n    cy.get('body').type(\"{command} s\");\n    cy.get('.bem-TopBar_Body_SyncStatus svg').should('have.attr', 'data-icon', 'CircleCheckLarge');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":16970,"startedAt":"2021-01-12T13:43:50.848Z","screenshots":[]}]},{"title":["Designer Interactions Test","reloading the designer to mimic going to dashboard and back to Designer"],"state":"passed","body":"function () {\n    cy.step('Reload Designer');\n    cy.reload();\n    cy.step('Wait for designer to load');\n    workspace.assertWorkspaceIsLoaded();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":7663,"startedAt":"2021-01-12T13:44:07.835Z","screenshots":[]}]},{"title":["Designer Interactions Test","should be able to edit paragraph content"],"state":"passed","body":"function () {\n    canvas.doubleClickElement('p');\n    canvas.within(function () {\n      cy.get('p').should('have.attr', 'contenteditable');\n      cy.get('p').type('THIS IS SPARTA{esc}');\n      cy.get('p').should('contain', 'THIS IS SPARTA');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1845,"startedAt":"2021-01-12T13:44:15.504Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/designer-nodeeditable.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/designer-nodeeditable.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/designer-nodeeditable.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":15,"tests":27,"passes":27,"pending":0,"skipped":0,"failures":0,"duration":39872,"startedAt":"2021-01-12T13:44:25.359Z","endedAt":"2021-01-12T13:45:05.231Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":15,"tests":27,"passes":27,"pending":0,"failures":0,"start":"2021-01-12T13:44:25.361Z","end":"2021-01-12T13:45:05.393Z","duration":40032},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot('roope-tmhtd6/dd3434ce-19df-40ea-bd8a-6075bb116774.v1-lite');\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Collection As Template');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Checkout');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Checkout (PayPal)');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Order Confirmation');\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Binding target: dataWHref","Homepage","self dataWHref inside a Collection List Item","Link should have the correct initial dataWHref binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12745,"startedAt":"2021-01-12T13:44:31.245Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Homepage","self dataWHref inside a Collection List Item","Link should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').children().then(function ($children) {\n          cy.wrap($children.toArray().map(function (el) {\n            return el.innerText;\n          })).should('to.have.members', ['None'].concat((0, _toConsumableArray2[\"default\"])(expectedItemSlugOptions), (0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions.length ? ['References'].concat((0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions)) : [])));\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1443,"startedAt":"2021-01-12T13:44:43.999Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Homepage","self dataWHref inside a Collection List Item","Link should reset and add the dataWHref binding back correctly"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed as the result of resetting the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      }); // Adding back the `dataWHref` binding\n\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(itemSlugToBind).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":577,"startedAt":"2021-01-12T13:44:45.446Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Homepage","reference dataWHref inside a Collection List","Link should have the correct initial dataWHref binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":55,"startedAt":"2021-01-12T13:44:46.025Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Homepage","reference dataWHref inside a Collection List","Link should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').children().then(function ($children) {\n          cy.wrap($children.toArray().map(function (el) {\n            return el.innerText;\n          })).should('to.have.members', ['None'].concat((0, _toConsumableArray2[\"default\"])(expectedItemSlugOptions), (0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions.length ? ['References'].concat((0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions)) : [])));\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":585,"startedAt":"2021-01-12T13:44:46.081Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Homepage","reference dataWHref inside a Collection List","Link should reset and add the dataWHref binding back correctly"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed as the result of resetting the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      }); // Adding back the `dataWHref` binding\n\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(itemSlugToBind).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":583,"startedAt":"2021-01-12T13:44:46.668Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Homepage","self dataWHref inside a nested Collection List Item","Link should have the correct initial dataWHref binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":40,"startedAt":"2021-01-12T13:44:47.253Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Homepage","self dataWHref inside a nested Collection List Item","Link should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').children().then(function ($children) {\n          cy.wrap($children.toArray().map(function (el) {\n            return el.innerText;\n          })).should('to.have.members', ['None'].concat((0, _toConsumableArray2[\"default\"])(expectedItemSlugOptions), (0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions.length ? ['References'].concat((0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions)) : [])));\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":521,"startedAt":"2021-01-12T13:44:47.294Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Homepage","self dataWHref inside a nested Collection List Item","Link should reset and add the dataWHref binding back correctly"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed as the result of resetting the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      }); // Adding back the `dataWHref` binding\n\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(itemSlugToBind).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":542,"startedAt":"2021-01-12T13:44:47.816Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Collection Template page","self dataWHref outside a Collection List","Link should have the correct initial dataWHref binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1241,"startedAt":"2021-01-12T13:44:48.360Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Collection Template page","self dataWHref outside a Collection List","Link should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').children().then(function ($children) {\n          cy.wrap($children.toArray().map(function (el) {\n            return el.innerText;\n          })).should('to.have.members', ['None'].concat((0, _toConsumableArray2[\"default\"])(expectedItemSlugOptions), (0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions.length ? ['References'].concat((0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions)) : [])));\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":870,"startedAt":"2021-01-12T13:44:49.602Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Collection Template page","self dataWHref outside a Collection List","Link should reset and add the dataWHref binding back correctly"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed as the result of resetting the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      }); // Adding back the `dataWHref` binding\n\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(itemSlugToBind).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":732,"startedAt":"2021-01-12T13:44:50.473Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Collection Template page","reference dataWHref outside a Collection List","Link should have the correct initial dataWHref binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":28,"startedAt":"2021-01-12T13:44:51.206Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Collection Template page","reference dataWHref outside a Collection List","Link should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').children().then(function ($children) {\n          cy.wrap($children.toArray().map(function (el) {\n            return el.innerText;\n          })).should('to.have.members', ['None'].concat((0, _toConsumableArray2[\"default\"])(expectedItemSlugOptions), (0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions.length ? ['References'].concat((0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions)) : [])));\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":429,"startedAt":"2021-01-12T13:44:51.235Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Collection Template page","reference dataWHref outside a Collection List","Link should reset and add the dataWHref binding back correctly"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed as the result of resetting the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      }); // Adding back the `dataWHref` binding\n\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(itemSlugToBind).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":456,"startedAt":"2021-01-12T13:44:51.665Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Collection Template page","self dataWHref inside a Multi-reference list","Link should have the correct initial dataWHref binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":49,"startedAt":"2021-01-12T13:44:52.123Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Collection Template page","self dataWHref inside a Multi-reference list","Link should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').children().then(function ($children) {\n          cy.wrap($children.toArray().map(function (el) {\n            return el.innerText;\n          })).should('to.have.members', ['None'].concat((0, _toConsumableArray2[\"default\"])(expectedItemSlugOptions), (0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions.length ? ['References'].concat((0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions)) : [])));\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":809,"startedAt":"2021-01-12T13:44:52.174Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Collection Template page","self dataWHref inside a Multi-reference list","Link should reset and add the dataWHref binding back correctly"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed as the result of resetting the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      }); // Adding back the `dataWHref` binding\n\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(itemSlugToBind).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":525,"startedAt":"2021-01-12T13:44:52.984Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Checkout page","reference dataWHref inside Order Items list","Link should have the correct initial dataWHref binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1753,"startedAt":"2021-01-12T13:44:53.510Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Checkout page","reference dataWHref inside Order Items list","Link should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').children().then(function ($children) {\n          cy.wrap($children.toArray().map(function (el) {\n            return el.innerText;\n          })).should('to.have.members', ['None'].concat((0, _toConsumableArray2[\"default\"])(expectedItemSlugOptions), (0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions.length ? ['References'].concat((0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions)) : [])));\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":984,"startedAt":"2021-01-12T13:44:55.265Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Checkout page","reference dataWHref inside Order Items list","Link should reset and add the dataWHref binding back correctly"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed as the result of resetting the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      }); // Adding back the `dataWHref` binding\n\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(itemSlugToBind).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1646,"startedAt":"2021-01-12T13:44:56.250Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Checkout (PayPal) page","reference dataWHref inside Order Items list","Link should have the correct initial dataWHref binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1812,"startedAt":"2021-01-12T13:44:57.897Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Checkout (PayPal) page","reference dataWHref inside Order Items list","Link should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').children().then(function ($children) {\n          cy.wrap($children.toArray().map(function (el) {\n            return el.innerText;\n          })).should('to.have.members', ['None'].concat((0, _toConsumableArray2[\"default\"])(expectedItemSlugOptions), (0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions.length ? ['References'].concat((0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions)) : [])));\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":801,"startedAt":"2021-01-12T13:44:59.710Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Checkout (PayPal) page","reference dataWHref inside Order Items list","Link should reset and add the dataWHref binding back correctly"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed as the result of resetting the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      }); // Adding back the `dataWHref` binding\n\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(itemSlugToBind).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1143,"startedAt":"2021-01-12T13:45:00.512Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Order Confirmation page","reference dataWHref inside Order Items list","Link should have the correct initial dataWHref binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1221,"startedAt":"2021-01-12T13:45:01.656Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Order Confirmation page","reference dataWHref inside Order Items list","Link should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').children().then(function ($children) {\n          cy.wrap($children.toArray().map(function (el) {\n            return el.innerText;\n          })).should('to.have.members', ['None'].concat((0, _toConsumableArray2[\"default\"])(expectedItemSlugOptions), (0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions.length ? ['References'].concat((0, _toConsumableArray2[\"default\"])(expectedReferenceSlugOptions)) : [])));\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":895,"startedAt":"2021-01-12T13:45:02.878Z","screenshots":[]}]},{"title":["Binding target: dataWHref","Order Confirmation page","reference dataWHref inside Order Items list","Link should reset and add the dataWHref binding back correctly"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed as the result of resetting the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      }); // Adding back the `dataWHref` binding\n\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(itemSlugToBind).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1455,"startedAt":"2021-01-12T13:45:03.774Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/dynamo/binding-targets/binding-dataWHref.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/dynamo/binding-targets/binding-dataWHref.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/dynamo/binding-targets/binding-dataWHref.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":65,"tests":180,"passes":180,"pending":0,"skipped":0,"failures":0,"duration":113405,"startedAt":"2021-01-12T13:45:13.625Z","endedAt":"2021-01-12T13:47:07.030Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":65,"tests":180,"passes":180,"pending":0,"failures":0,"start":"2021-01-12T13:45:13.627Z","end":"2021-01-12T13:47:07.080Z","duration":113453},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot('jaakko-l7g8wm/f3e0a40b-4fb3-45c0-a549-73b0e604388d.v1-lite');\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Products Template');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Regional Offices Template');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Shopping Cart'); // open the shopping cart\n\n      canvas.selectElement('.w-commerce-commercecartopenlink').then(function () {\n        workspace.getRightPanel().clickPropertiesTab();\n        cy.get('[data-automation-id=\"cart-toggle-button\"]').click();\n      });\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Checkout');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Checkout (PayPal)');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Order Confirmation');\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Binding target: href (plain)","Homepage","inside a collection list item","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13540,"startedAt":"2021-01-12T13:45:20.101Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1560,"startedAt":"2021-01-12T13:45:33.650Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":344,"startedAt":"2021-01-12T13:45:35.211Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":551,"startedAt":"2021-01-12T13:45:35.558Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":64,"startedAt":"2021-01-12T13:45:36.111Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":605,"startedAt":"2021-01-12T13:45:36.178Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":279,"startedAt":"2021-01-12T13:45:36.784Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":584,"startedAt":"2021-01-12T13:45:37.064Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":76,"startedAt":"2021-01-12T13:45:37.650Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":532,"startedAt":"2021-01-12T13:45:37.727Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":295,"startedAt":"2021-01-12T13:45:38.261Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":505,"startedAt":"2021-01-12T13:45:38.557Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":79,"startedAt":"2021-01-12T13:45:39.064Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":519,"startedAt":"2021-01-12T13:45:39.144Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":497,"startedAt":"2021-01-12T13:45:39.666Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a collection list item","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":901,"startedAt":"2021-01-12T13:45:40.165Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":69,"startedAt":"2021-01-12T13:45:41.068Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":755,"startedAt":"2021-01-12T13:45:41.140Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":318,"startedAt":"2021-01-12T13:45:41.896Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":531,"startedAt":"2021-01-12T13:45:42.215Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":79,"startedAt":"2021-01-12T13:45:42.748Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":927,"startedAt":"2021-01-12T13:45:42.829Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":426,"startedAt":"2021-01-12T13:45:43.757Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":470,"startedAt":"2021-01-12T13:45:44.184Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":70,"startedAt":"2021-01-12T13:45:44.657Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":490,"startedAt":"2021-01-12T13:45:44.729Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":278,"startedAt":"2021-01-12T13:45:45.220Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":486,"startedAt":"2021-01-12T13:45:45.500Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":42,"startedAt":"2021-01-12T13:45:45.988Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":538,"startedAt":"2021-01-12T13:45:46.031Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":245,"startedAt":"2021-01-12T13:45:46.571Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a nested collection list item","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":495,"startedAt":"2021-01-12T13:45:46.817Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":58,"startedAt":"2021-01-12T13:45:47.314Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":577,"startedAt":"2021-01-12T13:45:47.373Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":242,"startedAt":"2021-01-12T13:45:47.951Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":578,"startedAt":"2021-01-12T13:45:48.194Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":277,"startedAt":"2021-01-12T13:45:48.774Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":690,"startedAt":"2021-01-12T13:45:49.052Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":229,"startedAt":"2021-01-12T13:45:49.743Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":438,"startedAt":"2021-01-12T13:45:49.973Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":54,"startedAt":"2021-01-12T13:45:50.413Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":463,"startedAt":"2021-01-12T13:45:50.469Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":208,"startedAt":"2021-01-12T13:45:50.933Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":418,"startedAt":"2021-01-12T13:45:51.143Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":56,"startedAt":"2021-01-12T13:45:51.562Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":457,"startedAt":"2021-01-12T13:45:51.619Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":224,"startedAt":"2021-01-12T13:45:52.077Z","screenshots":[]}]},{"title":["Binding target: href (plain)","Homepage","inside a Products collection list item","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":653,"startedAt":"2021-01-12T13:45:52.302Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1211,"startedAt":"2021-01-12T13:45:52.957Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":846,"startedAt":"2021-01-12T13:45:54.169Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":204,"startedAt":"2021-01-12T13:45:55.016Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":426,"startedAt":"2021-01-12T13:45:55.221Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":52,"startedAt":"2021-01-12T13:45:55.649Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":527,"startedAt":"2021-01-12T13:45:55.703Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":198,"startedAt":"2021-01-12T13:45:56.231Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":414,"startedAt":"2021-01-12T13:45:56.430Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":52,"startedAt":"2021-01-12T13:45:56.846Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":437,"startedAt":"2021-01-12T13:45:56.899Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":187,"startedAt":"2021-01-12T13:45:57.338Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":410,"startedAt":"2021-01-12T13:45:57.527Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":66,"startedAt":"2021-01-12T13:45:57.938Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":457,"startedAt":"2021-01-12T13:45:58.006Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":192,"startedAt":"2021-01-12T13:45:58.464Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","in template page root context","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":404,"startedAt":"2021-01-12T13:45:58.657Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":60,"startedAt":"2021-01-12T13:45:59.063Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":529,"startedAt":"2021-01-12T13:45:59.125Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":438,"startedAt":"2021-01-12T13:45:59.655Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1186,"startedAt":"2021-01-12T13:46:00.094Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":57,"startedAt":"2021-01-12T13:46:01.282Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":456,"startedAt":"2021-01-12T13:46:01.340Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":218,"startedAt":"2021-01-12T13:46:01.797Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":440,"startedAt":"2021-01-12T13:46:02.016Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":62,"startedAt":"2021-01-12T13:46:02.457Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":465,"startedAt":"2021-01-12T13:46:02.520Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":215,"startedAt":"2021-01-12T13:46:02.987Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":438,"startedAt":"2021-01-12T13:46:03.204Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":64,"startedAt":"2021-01-12T13:46:03.643Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":537,"startedAt":"2021-01-12T13:46:03.708Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":225,"startedAt":"2021-01-12T13:46:04.246Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Products Template page","inside a multi-reference collection list item","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":435,"startedAt":"2021-01-12T13:46:04.473Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1484,"startedAt":"2021-01-12T13:46:04.910Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2655,"startedAt":"2021-01-12T13:46:06.395Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":319,"startedAt":"2021-01-12T13:46:09.054Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":401,"startedAt":"2021-01-12T13:46:09.375Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":43,"startedAt":"2021-01-12T13:46:09.777Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":442,"startedAt":"2021-01-12T13:46:09.821Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":204,"startedAt":"2021-01-12T13:46:10.264Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":417,"startedAt":"2021-01-12T13:46:10.470Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":59,"startedAt":"2021-01-12T13:46:10.888Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":428,"startedAt":"2021-01-12T13:46:10.948Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":183,"startedAt":"2021-01-12T13:46:11.377Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1138,"startedAt":"2021-01-12T13:46:11.561Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":263,"startedAt":"2021-01-12T13:46:12.701Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":438,"startedAt":"2021-01-12T13:46:12.965Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":190,"startedAt":"2021-01-12T13:46:13.404Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","in template page root context","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":385,"startedAt":"2021-01-12T13:46:13.595Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":54,"startedAt":"2021-01-12T13:46:13.981Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":502,"startedAt":"2021-01-12T13:46:14.037Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":227,"startedAt":"2021-01-12T13:46:14.540Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":437,"startedAt":"2021-01-12T13:46:14.768Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":74,"startedAt":"2021-01-12T13:46:15.207Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":968,"startedAt":"2021-01-12T13:46:15.282Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":948,"startedAt":"2021-01-12T13:46:16.251Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":527,"startedAt":"2021-01-12T13:46:17.200Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":52,"startedAt":"2021-01-12T13:46:17.728Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":480,"startedAt":"2021-01-12T13:46:17.782Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":218,"startedAt":"2021-01-12T13:46:18.263Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":447,"startedAt":"2021-01-12T13:46:18.483Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":56,"startedAt":"2021-01-12T13:46:18.932Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":478,"startedAt":"2021-01-12T13:46:18.989Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":221,"startedAt":"2021-01-12T13:46:19.469Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Regional Offices Template page","inside a Products multi-reference collection list item","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":554,"startedAt":"2021-01-12T13:46:19.692Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2441,"startedAt":"2021-01-12T13:46:20.248Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":728,"startedAt":"2021-01-12T13:46:22.690Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":348,"startedAt":"2021-01-12T13:46:23.419Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":921,"startedAt":"2021-01-12T13:46:23.769Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":127,"startedAt":"2021-01-12T13:46:24.764Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":555,"startedAt":"2021-01-12T13:46:24.892Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":331,"startedAt":"2021-01-12T13:46:25.448Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":518,"startedAt":"2021-01-12T13:46:25.780Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":57,"startedAt":"2021-01-12T13:46:26.299Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1249,"startedAt":"2021-01-12T13:46:26.357Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":331,"startedAt":"2021-01-12T13:46:27.607Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":523,"startedAt":"2021-01-12T13:46:27.939Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":54,"startedAt":"2021-01-12T13:46:28.463Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":550,"startedAt":"2021-01-12T13:46:28.518Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":321,"startedAt":"2021-01-12T13:46:29.069Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Shopping Cart page","inside cart items list","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":832,"startedAt":"2021-01-12T13:46:29.391Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2481,"startedAt":"2021-01-12T13:46:30.225Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":695,"startedAt":"2021-01-12T13:46:32.707Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":733,"startedAt":"2021-01-12T13:46:33.403Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":899,"startedAt":"2021-01-12T13:46:34.138Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":90,"startedAt":"2021-01-12T13:46:35.039Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1660,"startedAt":"2021-01-12T13:46:35.130Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1055,"startedAt":"2021-01-12T13:46:36.792Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":832,"startedAt":"2021-01-12T13:46:37.848Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":59,"startedAt":"2021-01-12T13:46:38.681Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":577,"startedAt":"2021-01-12T13:46:38.741Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":639,"startedAt":"2021-01-12T13:46:39.319Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1282,"startedAt":"2021-01-12T13:46:39.959Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":572,"startedAt":"2021-01-12T13:46:41.242Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1151,"startedAt":"2021-01-12T13:46:41.815Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":617,"startedAt":"2021-01-12T13:46:42.967Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Checkout page","inside order items list","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":801,"startedAt":"2021-01-12T13:46:43.585Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1500,"startedAt":"2021-01-12T13:46:44.388Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":644,"startedAt":"2021-01-12T13:46:45.889Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":444,"startedAt":"2021-01-12T13:46:46.535Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":638,"startedAt":"2021-01-12T13:46:46.980Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":62,"startedAt":"2021-01-12T13:46:47.619Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":527,"startedAt":"2021-01-12T13:46:47.682Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":429,"startedAt":"2021-01-12T13:46:48.210Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1034,"startedAt":"2021-01-12T13:46:48.640Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":515,"startedAt":"2021-01-12T13:46:49.676Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":989,"startedAt":"2021-01-12T13:46:50.192Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":437,"startedAt":"2021-01-12T13:46:51.183Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":644,"startedAt":"2021-01-12T13:46:51.622Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":65,"startedAt":"2021-01-12T13:46:52.267Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":499,"startedAt":"2021-01-12T13:46:52.333Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":570,"startedAt":"2021-01-12T13:46:52.833Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on PayPal Checkout page","inside order items list","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":629,"startedAt":"2021-01-12T13:46:53.404Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1368,"startedAt":"2021-01-12T13:46:54.035Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":720,"startedAt":"2021-01-12T13:46:55.404Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1070,"startedAt":"2021-01-12T13:46:56.125Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":665,"startedAt":"2021-01-12T13:46:57.196Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","Email Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":36,"startedAt":"2021-01-12T13:46:57.863Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","Email Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":825,"startedAt":"2021-01-12T13:46:57.899Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","Email Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":482,"startedAt":"2021-01-12T13:46:58.726Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","Email Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":631,"startedAt":"2021-01-12T13:46:59.209Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","Phone Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":40,"startedAt":"2021-01-12T13:46:59.842Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","Phone Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":675,"startedAt":"2021-01-12T13:46:59.883Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","Phone Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":883,"startedAt":"2021-01-12T13:47:00.559Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","Phone Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":642,"startedAt":"2021-01-12T13:47:01.443Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","File Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":59,"startedAt":"2021-01-12T13:47:02.087Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","File Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1325,"startedAt":"2021-01-12T13:47:02.148Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","File Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":451,"startedAt":"2021-01-12T13:47:03.474Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside order items list","File Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":612,"startedAt":"2021-01-12T13:47:03.926Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside downloads list item","URL Link","should have the correct initial href binding"],"state":"passed","body":"function () {\n      // First, we verify that the link originally has the expected `href`.\n      // As the Link has the `dataWHref` binding initially, we can open the\n      // Mini settings and have the correct binding type already selected.\n      //\n      // This test becomes more important later when we have shortened the\n      // dataWHref binding path and older binding paths with the longer\n      // format still need to work and render correctly.\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":60,"startedAt":"2021-01-12T13:47:04.539Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside downloads list item","URL Link","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.contains(linkToEdit).click();\n      }); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":568,"startedAt":"2021-01-12T13:47:04.600Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside downloads list item","URL Link","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `href` attribute gets removed\n\n      canvas.within(function () {\n        cy.contains(linkToEdit).should('have.attr', 'href', '#');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":328,"startedAt":"2021-01-12T13:47:05.169Z","screenshots":[]}]},{"title":["Binding target: href (plain)","on Order Confirmation page","inside downloads list item","URL Link","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `href` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(optionToSelect).click();\n      }); // Verifying that the Link gets the correct `href` as the result of adding the binding\n\n      canvas.within(function () {\n        if (typeof expectedHref === 'string') {\n          cy.contains(linkToEdit).should('have.attr', 'href', expectedHref);\n        } else {\n          cy.contains(linkToEdit).should('have.attr', 'href').should('match', expectedHref);\n        }\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1529,"startedAt":"2021-01-12T13:47:05.499Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/dynamo/binding-targets/binding-href.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/dynamo/binding-targets/binding-href.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/dynamo/binding-targets/binding-href.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":19,"tests":44,"passes":44,"pending":0,"skipped":0,"failures":0,"duration":47908,"startedAt":"2021-01-12T13:47:14.923Z","endedAt":"2021-01-12T13:48:02.831Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":19,"tests":44,"passes":44,"pending":0,"failures":0,"start":"2021-01-12T13:47:14.925Z","end":"2021-01-12T13:48:02.855Z","duration":47930},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot('jaakko-l7g8wm/bd84e034-8515-4566-9008-8608288e1189.v1-lite');\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Products Template');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Regional Offices Template');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Shopping Cart'); // open the shopping cart\n\n      canvas.selectElement('.w-commerce-commercecartopenlink').then(function () {\n        workspace.getRightPanel().clickPropertiesTab();\n        cy.get('[data-automation-id=\"cart-toggle-button\"]').click();\n      });\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Checkout');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Checkout (PayPal)');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Order Confirmation');\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Binding target: RichText innerHTML","Homepage","inside a collection list item","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11010,"startedAt":"2021-01-12T13:47:20.978Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a collection list item","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1915,"startedAt":"2021-01-12T13:47:31.998Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a collection list item","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":319,"startedAt":"2021-01-12T13:47:33.918Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a collection list item","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":500,"startedAt":"2021-01-12T13:47:34.239Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a nested collection list item","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":75,"startedAt":"2021-01-12T13:47:34.741Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a nested collection list item","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":624,"startedAt":"2021-01-12T13:47:34.817Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a nested collection list item","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":303,"startedAt":"2021-01-12T13:47:35.442Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a nested collection list item","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":683,"startedAt":"2021-01-12T13:47:35.747Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a Products collection list item","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":76,"startedAt":"2021-01-12T13:47:36.478Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a Products collection list item","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":911,"startedAt":"2021-01-12T13:47:36.555Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a Products collection list item","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":252,"startedAt":"2021-01-12T13:47:37.467Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","Homepage","inside a Products collection list item","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":439,"startedAt":"2021-01-12T13:47:37.720Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Products Template page","in template page root context","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1011,"startedAt":"2021-01-12T13:47:38.160Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Products Template page","in template page root context","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1029,"startedAt":"2021-01-12T13:47:39.172Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Products Template page","in template page root context","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":394,"startedAt":"2021-01-12T13:47:40.202Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Products Template page","in template page root context","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":425,"startedAt":"2021-01-12T13:47:40.597Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Products Template page","inside a multi-reference collection list item","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":64,"startedAt":"2021-01-12T13:47:41.024Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Products Template page","inside a multi-reference collection list item","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":512,"startedAt":"2021-01-12T13:47:41.089Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Products Template page","inside a multi-reference collection list item","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":239,"startedAt":"2021-01-12T13:47:41.603Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Products Template page","inside a multi-reference collection list item","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":461,"startedAt":"2021-01-12T13:47:41.843Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Regional Offices Template page","in template page root context","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1271,"startedAt":"2021-01-12T13:47:42.306Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Regional Offices Template page","in template page root context","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":773,"startedAt":"2021-01-12T13:47:43.578Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Regional Offices Template page","in template page root context","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":195,"startedAt":"2021-01-12T13:47:44.353Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Regional Offices Template page","in template page root context","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":396,"startedAt":"2021-01-12T13:47:44.549Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Regional Offices Template page","inside a Products multi-reference collection list item","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":49,"startedAt":"2021-01-12T13:47:44.946Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Regional Offices Template page","inside a Products multi-reference collection list item","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":837,"startedAt":"2021-01-12T13:47:44.996Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Regional Offices Template page","inside a Products multi-reference collection list item","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":224,"startedAt":"2021-01-12T13:47:45.835Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Regional Offices Template page","inside a Products multi-reference collection list item","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":410,"startedAt":"2021-01-12T13:47:46.060Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Shopping Cart page","inside cart items list","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2257,"startedAt":"2021-01-12T13:47:46.472Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Shopping Cart page","inside cart items list","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":688,"startedAt":"2021-01-12T13:47:48.731Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Shopping Cart page","inside cart items list","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":315,"startedAt":"2021-01-12T13:47:49.420Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Shopping Cart page","inside cart items list","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":479,"startedAt":"2021-01-12T13:47:49.736Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Checkout page","inside order items list","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1546,"startedAt":"2021-01-12T13:47:50.217Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Checkout page","inside order items list","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":815,"startedAt":"2021-01-12T13:47:51.764Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Checkout page","inside order items list","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1031,"startedAt":"2021-01-12T13:47:52.580Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Checkout page","inside order items list","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":984,"startedAt":"2021-01-12T13:47:53.612Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on PayPal Checkout page","inside order items list","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1341,"startedAt":"2021-01-12T13:47:54.597Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on PayPal Checkout page","inside order items list","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":684,"startedAt":"2021-01-12T13:47:55.939Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on PayPal Checkout page","inside order items list","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":565,"startedAt":"2021-01-12T13:47:56.624Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on PayPal Checkout page","inside order items list","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":778,"startedAt":"2021-01-12T13:47:57.190Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Order Confirmation page","inside order items list","should have the correct initial innerHTML binding"],"state":"passed","body":"function () {\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2317,"startedAt":"2021-01-12T13:47:57.970Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Order Confirmation page","inside order items list","should have the correct binding options"],"state":"passed","body":"function () {\n      canvas.selectElement(richTextSelector); // Opening mini settings\n\n      cy.getByDataAutomationId('outline-breadcrumbs-mini-settings').click();\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Opening the dyn field select dropdown\n        cy.getByDataAutomationId('dyn-bind-select').first().click(); // Verifying the dyn field select dropdown shows the expected options\n\n        cy.getByDataAutomationId('dyn-bind-select-ul').first().should('be.visible').find('.label').then(function ($labels) {\n          cy.wrap($labels.toArray().map(function (el) {\n            return el.innerText;\n          })).should('have.ordered.members', expectedBindingOptions);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1110,"startedAt":"2021-01-12T13:48:00.291Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Order Confirmation page","inside order items list","should be able to remove binding"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        // Resetting the binding\n        cy.contains('None').click();\n      }); // Verify that the `innerHTML` attribute gets removed, and\n      // the Rich Text element shows the placeholder content.\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.contain('<h2>What’s a Rich Text element?</h2>');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":777,"startedAt":"2021-01-12T13:48:01.402Z","screenshots":[]}]},{"title":["Binding target: RichText innerHTML","on Order Confirmation page","inside order items list","should be able to add a binding"],"state":"passed","body":"function () {\n      // Adding back the `innerHTML` binding\n      cy.getByDataAutomationId('mini-settings-container').within(function () {\n        cy.getByDataAutomationId('dyn-bind-checkbox').first().click();\n        cy.getByDataAutomationId('dyn-bind-select').first().click();\n        cy.contains(bindingToSelect).click();\n      }); // Verifying that the Rich Text element renders the binding content\n\n      canvas.within(function () {\n        cy.get(richTextSelector).should(function ($richText) {\n          var cleanedHtml = removeWfIdAttributesFromHtml($richText.html());\n          expect(cleanedHtml).to.equal(expectedInnerHTML);\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":649,"startedAt":"2021-01-12T13:48:02.180Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/dynamo/binding-targets/binding-innerHTML-RichText.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/dynamo/binding-targets/binding-innerHTML-RichText.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/dynamo/binding-targets/binding-innerHTML-RichText.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":24,"tests":63,"passes":63,"pending":0,"skipped":0,"failures":0,"duration":79374,"startedAt":"2021-01-12T13:48:10.556Z","endedAt":"2021-01-12T13:49:29.930Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":24,"tests":63,"passes":63,"pending":0,"failures":0,"start":"2021-01-12T13:48:10.559Z","end":"2021-01-12T13:49:29.942Z","duration":79383},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.Dynamo.bindingTargets);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding context\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage); // select the test element inside the binding context\n\n          canvas.selectElement(elementSelector).then(function () {\n            var filterSettings = workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createFilterSettings();\n            filterSettings.addFilterAnd(function (conditionPanel) {\n              panel = conditionPanel;\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          panel.close();\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding context\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage); // select the test element inside the binding context\n\n          canvas.selectElement(elementSelector).then(function () {\n            var filterSettings = workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createFilterSettings();\n            filterSettings.addFilterAnd(function (conditionPanel) {\n              panel = conditionPanel;\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          panel.close();\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      // go to the page that contains the binding context\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Collection List of Plain CMS Items'); // select the test element inside the binding context\n\n      canvas.selectElement('.w-dyn-list').then(function () {\n        filterSettings = workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createFilterSettings(); // add a placeholder passing condition\n\n        filterSettings.addFilter({\n          name: 'Name',\n          operator: 'Does Not Equal',\n          value: 'PLACEHOLDER'\n        });\n      });\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","has the right binding sources available in all binding contexts","on a static page","should have the correct available field options"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsEqual(fieldOptions);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14095,"startedAt":"2021-01-12T13:48:16.645Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","has the right binding sources available in all binding contexts","on a static page","should not have field options for restricted CMS fields"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsDoNotContain(restrictedFieldOptions);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":225,"startedAt":"2021-01-12T13:48:30.760Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","has the right binding sources available in all binding contexts","on a collection template page","should have the correct available field options"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsEqual(fieldOptions);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2287,"startedAt":"2021-01-12T13:48:30.990Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","has the right binding sources available in all binding contexts","on a collection template page","should not have field options for restricted CMS fields"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsDoNotContain(restrictedFieldOptions);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":236,"startedAt":"2021-01-12T13:48:33.278Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"PlainText Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3255,"startedAt":"2021-01-12T13:48:33.516Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"PlainText Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2245,"startedAt":"2021-01-12T13:48:36.772Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"PlainText Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1094,"startedAt":"2021-01-12T13:48:39.023Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"RichText Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":555,"startedAt":"2021-01-12T13:48:40.119Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"RichText Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1077,"startedAt":"2021-01-12T13:48:40.676Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"RichText Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":834,"startedAt":"2021-01-12T13:48:41.754Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":551,"startedAt":"2021-01-12T13:48:42.590Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Image Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1444,"startedAt":"2021-01-12T13:48:43.143Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Image Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1219,"startedAt":"2021-01-12T13:48:44.589Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Video Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":514,"startedAt":"2021-01-12T13:48:45.809Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Video Link Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":794,"startedAt":"2021-01-12T13:48:46.324Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Video Link Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":879,"startedAt":"2021-01-12T13:48:47.119Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"URL Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":526,"startedAt":"2021-01-12T13:48:48.000Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"URL Link Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":777,"startedAt":"2021-01-12T13:48:48.528Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"URL Link Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":692,"startedAt":"2021-01-12T13:48:49.306Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Email Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":984,"startedAt":"2021-01-12T13:48:49.999Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Email Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1568,"startedAt":"2021-01-12T13:48:50.984Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Email Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":960,"startedAt":"2021-01-12T13:48:52.553Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Phone Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":619,"startedAt":"2021-01-12T13:48:53.514Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Phone Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1401,"startedAt":"2021-01-12T13:48:54.134Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Phone Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1049,"startedAt":"2021-01-12T13:48:55.536Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Number Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":531,"startedAt":"2021-01-12T13:48:56.587Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Number Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1193,"startedAt":"2021-01-12T13:48:57.119Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Number Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1009,"startedAt":"2021-01-12T13:48:58.313Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Date Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":821,"startedAt":"2021-01-12T13:48:59.323Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Date Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":987,"startedAt":"2021-01-12T13:49:00.145Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Date Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":608,"startedAt":"2021-01-12T13:49:01.133Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Switch Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":729,"startedAt":"2021-01-12T13:49:01.742Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Switch Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1129,"startedAt":"2021-01-12T13:49:02.472Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Switch Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":565,"startedAt":"2021-01-12T13:49:03.602Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Option Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":499,"startedAt":"2021-01-12T13:49:04.169Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Option Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1371,"startedAt":"2021-01-12T13:49:04.669Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Option Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":680,"startedAt":"2021-01-12T13:49:06.041Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"File Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":511,"startedAt":"2021-01-12T13:49:06.722Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"File Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1401,"startedAt":"2021-01-12T13:49:07.235Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"File Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":603,"startedAt":"2021-01-12T13:49:08.638Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Name\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":517,"startedAt":"2021-01-12T13:49:09.242Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Name\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1472,"startedAt":"2021-01-12T13:49:09.760Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Name\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1445,"startedAt":"2021-01-12T13:49:11.233Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Created On\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":492,"startedAt":"2021-01-12T13:49:12.680Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Created On\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1484,"startedAt":"2021-01-12T13:49:13.173Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Created On\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":627,"startedAt":"2021-01-12T13:49:14.658Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Updated On\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":516,"startedAt":"2021-01-12T13:49:15.287Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Updated On\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1737,"startedAt":"2021-01-12T13:49:15.804Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Updated On\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":578,"startedAt":"2021-01-12T13:49:17.542Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Published On\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":524,"startedAt":"2021-01-12T13:49:18.121Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Published On\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":796,"startedAt":"2021-01-12T13:49:18.646Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Published On\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1171,"startedAt":"2021-01-12T13:49:19.443Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Reference Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":895,"startedAt":"2021-01-12T13:49:20.616Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Reference Field\"","should have correct reference value options"],"state":"passed","body":"function () {\n            filterSettings.addFilterAnd(function (panel) {\n              panel.setConditionValues({\n                name: fieldName,\n                operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                nested: nested\n              });\n              panel.assertReferenceValueOptionsEqual([// Only Referenced Items collection item\n              'A Referenced Item']);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":681,"startedAt":"2021-01-12T13:49:21.512Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Reference Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":938,"startedAt":"2021-01-12T13:49:22.196Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Reference Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1047,"startedAt":"2021-01-12T13:49:23.136Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Multi-reference Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":513,"startedAt":"2021-01-12T13:49:24.185Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Multi-reference Field\"","should have correct reference value options"],"state":"passed","body":"function () {\n            filterSettings.addFilterAnd(function (panel) {\n              panel.setConditionValues({\n                name: fieldName,\n                operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                nested: nested\n              });\n              panel.assertReferenceValueOptionsEqual([// Only Referenced Items collection item\n              'A Referenced Item']);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":677,"startedAt":"2021-01-12T13:49:24.699Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Multi-reference Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1391,"startedAt":"2021-01-12T13:49:25.378Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Multi-reference Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":561,"startedAt":"2021-01-12T13:49:26.770Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Multi-image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":546,"startedAt":"2021-01-12T13:49:27.332Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Multi-image Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1457,"startedAt":"2021-01-12T13:49:27.879Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > CMS Collection","can configure collection list filters in a binding context","for  field \"Multi-image Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only Plain CMS Item.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'A Plain CMS Item'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":591,"startedAt":"2021-01-12T13:49:29.338Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/dynamo/binding-targets/collection-list-filters/cms-collection.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/dynamo/binding-targets/collection-list-filters/cms-collection.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/dynamo/binding-targets/collection-list-filters/cms-collection.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":29,"tests":78,"passes":78,"pending":0,"skipped":0,"failures":0,"duration":94152,"startedAt":"2021-01-12T13:49:37.615Z","endedAt":"2021-01-12T13:51:11.767Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":29,"tests":78,"passes":78,"pending":0,"failures":0,"start":"2021-01-12T13:49:37.617Z","end":"2021-01-12T13:51:11.793Z","duration":94176},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.Dynamo.bindingTargets);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding context\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage); // select the test element inside the binding context\n\n          canvas.selectElement(elementSelector).then(function () {\n            var filterSettings = workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createFilterSettings();\n            filterSettings.addFilterAnd(function (conditionPanel) {\n              panel = conditionPanel;\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          panel.close();\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding context\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage); // select the test element inside the binding context\n\n          canvas.selectElement(elementSelector).then(function () {\n            var filterSettings = workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createFilterSettings();\n            filterSettings.addFilterAnd(function (conditionPanel) {\n              panel = conditionPanel;\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          panel.close();\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      // go to the page that contains the binding context\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Collection List of Products'); // select the test element inside the binding context\n\n      canvas.selectElement('.w-dyn-list').then(function () {\n        filterSettings = workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createFilterSettings(); // add a placeholder passing condition\n\n        filterSettings.addFilter({\n          name: 'Name',\n          operator: 'Does Not Equal',\n          value: 'PLACEHOLDER'\n        });\n      });\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","has the right binding sources available in all binding contexts","on a static page","should have the correct available field options"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsEqual(fieldOptions);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":16123,"startedAt":"2021-01-12T13:49:43.813Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","has the right binding sources available in all binding contexts","on a collection template page","should have the correct available field options"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsEqual(fieldOptions);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1788,"startedAt":"2021-01-12T13:49:59.986Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Product type\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2924,"startedAt":"2021-01-12T13:50:01.777Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Product type\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1523,"startedAt":"2021-01-12T13:50:04.702Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Product type\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":949,"startedAt":"2021-01-12T13:50:06.227Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Name\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":559,"startedAt":"2021-01-12T13:50:07.177Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Name\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1932,"startedAt":"2021-01-12T13:50:07.737Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Name\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":707,"startedAt":"2021-01-12T13:50:09.671Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Description\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":569,"startedAt":"2021-01-12T13:50:10.379Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Description\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1133,"startedAt":"2021-01-12T13:50:10.950Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Description\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":653,"startedAt":"2021-01-12T13:50:12.084Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Categories\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":547,"startedAt":"2021-01-12T13:50:12.739Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Categories\"","should have correct reference value options"],"state":"passed","body":"function () {\n            filterSettings.addFilterAnd(function (panel) {\n              panel.setConditionValues({\n                name: fieldName,\n                operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                nested: nested\n              });\n              panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1001,"startedAt":"2021-01-12T13:50:13.287Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Categories\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":833,"startedAt":"2021-01-12T13:50:14.290Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Categories\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":617,"startedAt":"2021-01-12T13:50:15.124Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Requires Shipping\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":555,"startedAt":"2021-01-12T13:50:15.742Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Requires Shipping\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1155,"startedAt":"2021-01-12T13:50:16.298Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Requires Shipping\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1128,"startedAt":"2021-01-12T13:50:17.454Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"PlainText Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":858,"startedAt":"2021-01-12T13:50:18.584Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"PlainText Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1857,"startedAt":"2021-01-12T13:50:19.443Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"PlainText Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1081,"startedAt":"2021-01-12T13:50:21.303Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Rich Text Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":556,"startedAt":"2021-01-12T13:50:22.385Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Rich Text Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":838,"startedAt":"2021-01-12T13:50:22.942Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Rich Text Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":907,"startedAt":"2021-01-12T13:50:23.782Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":826,"startedAt":"2021-01-12T13:50:24.691Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Image Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":825,"startedAt":"2021-01-12T13:50:25.518Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Image Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":583,"startedAt":"2021-01-12T13:50:26.344Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Video Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":699,"startedAt":"2021-01-12T13:50:26.928Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Video Link Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":903,"startedAt":"2021-01-12T13:50:27.628Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Video Link Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":580,"startedAt":"2021-01-12T13:50:28.533Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"URL Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":531,"startedAt":"2021-01-12T13:50:29.114Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"URL Link Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":824,"startedAt":"2021-01-12T13:50:29.647Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"URL Link Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":731,"startedAt":"2021-01-12T13:50:30.472Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Email Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":556,"startedAt":"2021-01-12T13:50:31.205Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Email Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1676,"startedAt":"2021-01-12T13:50:31.762Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Email Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1039,"startedAt":"2021-01-12T13:50:33.439Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Phone Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":524,"startedAt":"2021-01-12T13:50:34.480Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Phone Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1904,"startedAt":"2021-01-12T13:50:35.005Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Phone Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":781,"startedAt":"2021-01-12T13:50:36.911Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Number Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":622,"startedAt":"2021-01-12T13:50:37.693Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Number Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1735,"startedAt":"2021-01-12T13:50:38.316Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Number Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":604,"startedAt":"2021-01-12T13:50:40.051Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Date Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":523,"startedAt":"2021-01-12T13:50:40.656Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Date Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1400,"startedAt":"2021-01-12T13:50:41.181Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Date Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":896,"startedAt":"2021-01-12T13:50:42.582Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Switch Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":528,"startedAt":"2021-01-12T13:50:43.479Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Switch Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":772,"startedAt":"2021-01-12T13:50:44.008Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Switch Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":564,"startedAt":"2021-01-12T13:50:44.781Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Option Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":797,"startedAt":"2021-01-12T13:50:45.346Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Option Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1011,"startedAt":"2021-01-12T13:50:46.144Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Option Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":606,"startedAt":"2021-01-12T13:50:47.156Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"File Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":518,"startedAt":"2021-01-12T13:50:47.763Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"File Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":821,"startedAt":"2021-01-12T13:50:48.283Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"File Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":699,"startedAt":"2021-01-12T13:50:49.105Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Reference Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":534,"startedAt":"2021-01-12T13:50:49.805Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Reference Field\"","should have correct reference value options"],"state":"passed","body":"function () {\n            filterSettings.addFilterAnd(function (panel) {\n              panel.setConditionValues({\n                name: fieldName,\n                operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                nested: nested\n              });\n              panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":696,"startedAt":"2021-01-12T13:50:50.340Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Reference Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1148,"startedAt":"2021-01-12T13:50:51.037Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Reference Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":631,"startedAt":"2021-01-12T13:50:52.186Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Multi-reference Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":543,"startedAt":"2021-01-12T13:50:52.819Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Multi-reference Field\"","should have correct reference value options"],"state":"passed","body":"function () {\n            filterSettings.addFilterAnd(function (panel) {\n              panel.setConditionValues({\n                name: fieldName,\n                operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                nested: nested\n              });\n              panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1187,"startedAt":"2021-01-12T13:50:53.363Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Multi-reference Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1098,"startedAt":"2021-01-12T13:50:54.551Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Multi-reference Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":598,"startedAt":"2021-01-12T13:50:55.651Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Multi-image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":544,"startedAt":"2021-01-12T13:50:56.250Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Multi-image Field\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":841,"startedAt":"2021-01-12T13:50:56.795Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Multi-image Field\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":597,"startedAt":"2021-01-12T13:50:57.637Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Default SKU\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":532,"startedAt":"2021-01-12T13:50:58.237Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Default SKU\"","should have correct reference value options"],"state":"passed","body":"function () {\n            filterSettings.addFilterAnd(function (panel) {\n              panel.setConditionValues({\n                name: fieldName,\n                operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                nested: nested\n              });\n              panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":706,"startedAt":"2021-01-12T13:50:58.771Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Default SKU\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1270,"startedAt":"2021-01-12T13:50:59.478Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Default SKU\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":881,"startedAt":"2021-01-12T13:51:00.749Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Created On\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":551,"startedAt":"2021-01-12T13:51:01.632Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Created On\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2183,"startedAt":"2021-01-12T13:51:02.184Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Created On\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":740,"startedAt":"2021-01-12T13:51:04.369Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Updated On\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":556,"startedAt":"2021-01-12T13:51:05.111Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Updated On\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2345,"startedAt":"2021-01-12T13:51:05.668Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Updated On\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":652,"startedAt":"2021-01-12T13:51:08.014Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Published On\"","should have correct operator options"],"state":"passed","body":"function () {\n          filterSettings.openFilterAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":546,"startedAt":"2021-01-12T13:51:08.668Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Published On\"","should be able to configure a filter that fails for the only item"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          filterSettings.editFilterAt(failingCondition, 0);\n          canvas.within(function () {\n            // DynamoList is not rendered when there are no items\n            cy.get('.w-dyn-items').should('not.exist'); // DynamoEmpty is visible when there are no items\n\n            cy.get('.w-dyn-empty').should('not.have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1931,"startedAt":"2021-01-12T13:51:09.215Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Collection List Filters > Products Collection","can configure collection list filters in a binding context","for  field \"Published On\"","should be able to configure a filter that passes for the only item"],"state":"passed","body":"function () {\n          filterSettings.editFilterAt(conditions.pass, 0);\n          canvas.within(function () {\n            // DynamoList is rendered when there are items\n            cy.get('.w-dyn-items').should('exist'); // Exactly one DynamoItem is rendered and\n            // it is the snapshot's only product.\n\n            cy.get('.w-dyn-items > .w-dyn-item').should('have.length', 1).should('have.text', 'Awesome Wooden Tuna'); // DynamoEmpty is hidden when there are items\n\n            cy.get('.w-dyn-empty').should('have.class', 'w-dyn-hide');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":618,"startedAt":"2021-01-12T13:51:11.147Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/dynamo/binding-targets/collection-list-filters/ecommerce-products-collection.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/dynamo/binding-targets/collection-list-filters/ecommerce-products-collection.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/dynamo/binding-targets/collection-list-filters/ecommerce-products-collection.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":43,"tests":119,"passes":119,"pending":0,"skipped":0,"failures":0,"duration":129751,"startedAt":"2021-01-12T13:51:19.676Z","endedAt":"2021-01-12T13:53:29.427Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":43,"tests":119,"passes":119,"pending":0,"failures":0,"start":"2021-01-12T13:51:19.678Z","end":"2021-01-12T13:53:29.457Z","duration":129779},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.Dynamo.bindingTargets);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding context\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage); // select the test element inside the binding context\n\n          canvas.selectElement(elementSelector).then(function () {\n            var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n            conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n              panel = conditionPanel;\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          panel.close();\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding context\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage); // select the test element inside the binding context\n\n          canvas.selectElement(elementSelector).then(function () {\n            var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n            conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n              panel = conditionPanel;\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          panel.close();\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding context\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage); // select the test element inside the binding context\n\n          canvas.selectElement(elementSelector).then(function () {\n            var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n            conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n              panel = conditionPanel;\n            });\n          });\n        }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n          panel.close();\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      // go to the page that contains the binding context\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Plain CMS Items Template'); // select the test element inside the binding context\n\n      canvas.selectElement(elementSelector).then(function () {\n        conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings; // add a placeholder passing condition\n\n        conditionalVisibilitySettings.addCondition({\n          name: 'Name',\n          operator: 'Does Not Equal',\n          value: 'PLACEHOLDER'\n        });\n      });\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","has the right binding sources available in all binding contexts","on a collection template page","should have the correct available field options"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsEqual(availableFields);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":15608,"startedAt":"2021-01-12T13:51:25.964Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","has the right binding sources available in all binding contexts","on a collection template page","should not have field options for restricted CMS fields"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsDoNotContain(RESTRICTED_CONDVIS_FIELDS);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":729,"startedAt":"2021-01-12T13:51:41.599Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","has the right binding sources available in all binding contexts","inside a collection list","should have the correct available field options"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsEqual(availableFields);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1033,"startedAt":"2021-01-12T13:51:42.331Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","has the right binding sources available in all binding contexts","inside a collection list","should not have field options for restricted CMS fields"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsDoNotContain(RESTRICTED_CONDVIS_FIELDS);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":241,"startedAt":"2021-01-12T13:51:43.365Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","has the right binding sources available in all binding contexts","inside a multi-reference list","should have the correct available field options"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsEqual(availableFields);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2087,"startedAt":"2021-01-12T13:51:43.609Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","has the right binding sources available in all binding contexts","inside a multi-reference list","should not have field options for restricted CMS fields"],"state":"passed","body":"function () {\n          panel.assertConditionFieldOptionsDoNotContain(RESTRICTED_CONDVIS_FIELDS);\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":233,"startedAt":"2021-01-12T13:51:45.697Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Plain CMS Item\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3551,"startedAt":"2021-01-12T13:51:45.933Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Plain CMS Item\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":907,"startedAt":"2021-01-12T13:51:49.485Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Plain CMS Item\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":515,"startedAt":"2021-01-12T13:51:50.393Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"PlainText Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":824,"startedAt":"2021-01-12T13:51:50.910Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"PlainText Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2302,"startedAt":"2021-01-12T13:51:51.735Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"PlainText Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":536,"startedAt":"2021-01-12T13:51:54.038Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"RichText Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":585,"startedAt":"2021-01-12T13:51:54.576Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"RichText Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1564,"startedAt":"2021-01-12T13:51:55.162Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"RichText Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":958,"startedAt":"2021-01-12T13:51:56.727Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":754,"startedAt":"2021-01-12T13:51:57.687Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Image Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":876,"startedAt":"2021-01-12T13:51:58.442Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Image Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":968,"startedAt":"2021-01-12T13:51:59.319Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Video Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":556,"startedAt":"2021-01-12T13:52:00.289Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Video Link Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":884,"startedAt":"2021-01-12T13:52:00.847Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Video Link Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":523,"startedAt":"2021-01-12T13:52:01.733Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"URL Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":727,"startedAt":"2021-01-12T13:52:02.257Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"URL Link Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1150,"startedAt":"2021-01-12T13:52:02.985Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"URL Link Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":861,"startedAt":"2021-01-12T13:52:04.137Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Email Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":582,"startedAt":"2021-01-12T13:52:04.999Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Email Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2167,"startedAt":"2021-01-12T13:52:05.582Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Email Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":545,"startedAt":"2021-01-12T13:52:07.754Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Phone Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":577,"startedAt":"2021-01-12T13:52:08.301Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Phone Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1964,"startedAt":"2021-01-12T13:52:08.880Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Phone Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":517,"startedAt":"2021-01-12T13:52:10.845Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Number Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":600,"startedAt":"2021-01-12T13:52:11.363Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Number Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1529,"startedAt":"2021-01-12T13:52:11.964Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Number Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":540,"startedAt":"2021-01-12T13:52:13.495Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Date Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":572,"startedAt":"2021-01-12T13:52:14.037Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Date Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1641,"startedAt":"2021-01-12T13:52:14.610Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Date Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":522,"startedAt":"2021-01-12T13:52:16.252Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Switch Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":581,"startedAt":"2021-01-12T13:52:16.776Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Switch Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1375,"startedAt":"2021-01-12T13:52:17.358Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Switch Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":513,"startedAt":"2021-01-12T13:52:18.734Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Option Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":591,"startedAt":"2021-01-12T13:52:19.249Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Option Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1732,"startedAt":"2021-01-12T13:52:19.841Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Option Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":630,"startedAt":"2021-01-12T13:52:21.574Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"File Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":582,"startedAt":"2021-01-12T13:52:22.205Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"File Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":861,"startedAt":"2021-01-12T13:52:22.788Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"File Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":677,"startedAt":"2021-01-12T13:52:23.650Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Name\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":560,"startedAt":"2021-01-12T13:52:24.328Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Name\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1430,"startedAt":"2021-01-12T13:52:24.889Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Name\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":474,"startedAt":"2021-01-12T13:52:26.320Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Created On\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":567,"startedAt":"2021-01-12T13:52:26.796Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Created On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1774,"startedAt":"2021-01-12T13:52:27.364Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Created On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":517,"startedAt":"2021-01-12T13:52:29.139Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Updated On\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":567,"startedAt":"2021-01-12T13:52:29.658Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Updated On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1548,"startedAt":"2021-01-12T13:52:30.226Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Updated On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":905,"startedAt":"2021-01-12T13:52:31.775Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Published On\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":612,"startedAt":"2021-01-12T13:52:32.682Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Published On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1420,"startedAt":"2021-01-12T13:52:33.295Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Published On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":537,"startedAt":"2021-01-12T13:52:34.716Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Reference Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":555,"startedAt":"2021-01-12T13:52:35.255Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Reference Field\"","should have correct reference value options"],"state":"passed","body":"function () {\n            conditionalVisibilitySettings.addConditionAnd(function (panel) {\n              panel.setConditionValues({\n                name: fieldName,\n                operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                nested: nested\n              });\n              panel.assertReferenceValueOptionsEqual([// Only Referenced Items collection item\n              'A Referenced Item', // DYN_CONTEXT value options\n              'Reference Field of Current Plain CMS Item', 'Any Multi-reference Field of Current Plain CMS Item']);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":935,"startedAt":"2021-01-12T13:52:35.811Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Reference Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1648,"startedAt":"2021-01-12T13:52:36.747Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Reference Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":508,"startedAt":"2021-01-12T13:52:38.396Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"PlainText Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":504,"startedAt":"2021-01-12T13:52:38.905Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"PlainText Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3113,"startedAt":"2021-01-12T13:52:39.410Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"PlainText Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":645,"startedAt":"2021-01-12T13:52:42.529Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"RichText Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":513,"startedAt":"2021-01-12T13:52:43.175Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"RichText Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":835,"startedAt":"2021-01-12T13:52:43.690Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"RichText Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":483,"startedAt":"2021-01-12T13:52:44.526Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1385,"startedAt":"2021-01-12T13:52:45.011Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Image Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1067,"startedAt":"2021-01-12T13:52:46.397Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Image Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":503,"startedAt":"2021-01-12T13:52:47.465Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Video Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":504,"startedAt":"2021-01-12T13:52:47.969Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Video Link Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":814,"startedAt":"2021-01-12T13:52:48.474Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Video Link Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":499,"startedAt":"2021-01-12T13:52:49.290Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":496,"startedAt":"2021-01-12T13:52:49.790Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Link Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1309,"startedAt":"2021-01-12T13:52:50.287Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Link Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":507,"startedAt":"2021-01-12T13:52:51.597Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Email Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":513,"startedAt":"2021-01-12T13:52:52.106Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Email Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1642,"startedAt":"2021-01-12T13:52:52.620Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Email Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":509,"startedAt":"2021-01-12T13:52:54.263Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Phone Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":512,"startedAt":"2021-01-12T13:52:54.774Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Phone Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1466,"startedAt":"2021-01-12T13:52:55.287Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Phone Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":595,"startedAt":"2021-01-12T13:52:56.755Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Number Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":526,"startedAt":"2021-01-12T13:52:57.352Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Number Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1161,"startedAt":"2021-01-12T13:52:57.879Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Number Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":518,"startedAt":"2021-01-12T13:52:59.042Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Date Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":802,"startedAt":"2021-01-12T13:52:59.562Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Date Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1316,"startedAt":"2021-01-12T13:53:00.366Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Date Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":519,"startedAt":"2021-01-12T13:53:01.683Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Switch Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":485,"startedAt":"2021-01-12T13:53:02.204Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Switch Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1465,"startedAt":"2021-01-12T13:53:02.690Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Switch Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":508,"startedAt":"2021-01-12T13:53:04.157Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Option Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":569,"startedAt":"2021-01-12T13:53:04.667Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Option Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1658,"startedAt":"2021-01-12T13:53:05.237Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Option Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":952,"startedAt":"2021-01-12T13:53:06.897Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"File Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":485,"startedAt":"2021-01-12T13:53:07.851Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"File Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":788,"startedAt":"2021-01-12T13:53:08.337Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"File Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":492,"startedAt":"2021-01-12T13:53:09.126Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Name\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":851,"startedAt":"2021-01-12T13:53:09.619Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Name\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2384,"startedAt":"2021-01-12T13:53:10.471Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Name\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":588,"startedAt":"2021-01-12T13:53:12.856Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Created On\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":506,"startedAt":"2021-01-12T13:53:13.446Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Created On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":773,"startedAt":"2021-01-12T13:53:13.953Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Created On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":496,"startedAt":"2021-01-12T13:53:14.727Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Updated On\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1121,"startedAt":"2021-01-12T13:53:15.225Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Updated On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1982,"startedAt":"2021-01-12T13:53:16.347Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Updated On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":554,"startedAt":"2021-01-12T13:53:18.330Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Published On\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":486,"startedAt":"2021-01-12T13:53:18.886Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Published On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":806,"startedAt":"2021-01-12T13:53:19.373Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Published On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":496,"startedAt":"2021-01-12T13:53:20.180Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Multi-image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":510,"startedAt":"2021-01-12T13:53:20.677Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Multi-image Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":781,"startedAt":"2021-01-12T13:53:21.188Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for referenced field \"Multi-image Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1265,"startedAt":"2021-01-12T13:53:21.970Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Multi-reference Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1737,"startedAt":"2021-01-12T13:53:23.237Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Multi-reference Field\"","should have correct reference value options"],"state":"passed","body":"function () {\n            conditionalVisibilitySettings.addConditionAnd(function (panel) {\n              panel.setConditionValues({\n                name: fieldName,\n                operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                nested: nested\n              });\n              panel.assertReferenceValueOptionsEqual([// Only Referenced Items collection item\n              'A Referenced Item', // DYN_CONTEXT value options\n              'Reference Field of Current Plain CMS Item', 'Any Multi-reference Field of Current Plain CMS Item']);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":728,"startedAt":"2021-01-12T13:53:24.975Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Multi-reference Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1088,"startedAt":"2021-01-12T13:53:25.704Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Multi-reference Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":516,"startedAt":"2021-01-12T13:53:26.793Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Multi-image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n            panel.setConditionValues({\n              name: fieldName,\n              nested: nested\n            });\n            panel.assertOperatorOptionsEqual(operatorOptions);\n            panel.close();\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":696,"startedAt":"2021-01-12T13:53:27.311Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Multi-image Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n          var _conditions$all = conditions.all,\n              all = _conditions$all === void 0 ? {} : _conditions$all,\n              fail = conditions.fail;\n          var failingCondition = (0, _extends2[\"default\"])({\n            name: fieldName,\n            nested: nested\n          }, all, fail);\n          conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n          canvas.within(function () {\n            cy.get(elementSelector).should('have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":790,"startedAt":"2021-01-12T13:53:28.008Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > CMS Collection","can configure conditional visibility in a binding context","for  field \"Multi-image Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n          conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n          canvas.within(function () {\n            cy.get(elementSelector).should('not.have.class', 'w-condition-invisible');\n          });\n        }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":627,"startedAt":"2021-01-12T13:53:28.799Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/dynamo/binding-targets/conditional-visibility/cms-collection.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/dynamo/binding-targets/conditional-visibility/cms-collection.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/dynamo/binding-targets/conditional-visibility/cms-collection.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":51,"tests":130,"passes":130,"pending":0,"skipped":0,"failures":0,"duration":159403,"startedAt":"2021-01-12T13:53:37.211Z","endedAt":"2021-01-12T13:56:16.614Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":51,"tests":130,"passes":130,"pending":0,"failures":0,"start":"2021-01-12T13:53:37.213Z","end":"2021-01-12T13:56:16.620Z","duration":159407},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.Dynamo.bindingTargets);\n    canvas = workspace.getCanvas(); // go to the page that contains the binding context\n\n    workspace.getLeftSidebar().clickPagesTab().switchPage('Shopping Cart');\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      // open the shopping cart\n      canvas.selectElement('.w-commerce-commercecartopenlink').then(function () {\n        workspace.getRightPanel().clickPropertiesTab();\n        cy.get('[data-automation-id=\"cart-toggle-button\"]').click();\n      });\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n            // select the test element inside the binding context\n            canvas.selectElement(selector).then(function () {\n              conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n            });\n          }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n            // select the test element inside the binding context\n            canvas.selectElement(selector).then(function () {\n              conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n            });\n          }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n            // select the test element inside the binding context\n            canvas.selectElement(selector).then(function () {\n              conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n            });\n          }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n            // select the test element inside the binding context\n            canvas.selectElement(selector).then(function () {\n              conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings; // add a placeholder passing condition\n\n              conditionalVisibilitySettings.addCondition(placeholderOption || defaultPlaceholderOption);\n            });\n          }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n            // select the test element inside the binding context\n            canvas.selectElement(selector).then(function () {\n              conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings; // add a placeholder passing condition\n\n              conditionalVisibilitySettings.addCondition(placeholderOption || defaultPlaceholderOption);\n            });\n          }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n            // select the test element inside the binding context\n            canvas.selectElement(selector).then(function () {\n              conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings; // add a placeholder passing condition\n\n              conditionalVisibilitySettings.addCondition(placeholderOption || defaultPlaceholderOption);\n            });\n          }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n      // close the shopping cart\n      cy.get('[data-automation-id=\"cart-toggle-button\"]').click();\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      canvas.selectElement(atcElementSeclector).then(function () {\n        conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n      });\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","has the right binding sources available in all binding contexts","in the Cart Root context","should have the correct available field options"],"state":"passed","body":"function () {\n            conditionalVisibilitySettings.addConditionAnd(function (panel) {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":16073,"startedAt":"2021-01-12T13:53:44.272Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","has the right binding sources available in all binding contexts","in the Order Item context","should have the correct available field options"],"state":"passed","body":"function () {\n            conditionalVisibilitySettings.addConditionAnd(function (panel) {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1103,"startedAt":"2021-01-12T13:54:00.362Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","has the right binding sources available in all binding contexts","in the Product Option context","should have the correct available field options"],"state":"passed","body":"function () {\n            conditionalVisibilitySettings.addConditionAnd(function (panel) {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n              panel.close();\n            });\n          }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":649,"startedAt":"2021-01-12T13:54:01.466Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Cart Root context","for  field \"Quantity\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2539,"startedAt":"2021-01-12T13:54:02.118Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Cart Root context","for  field \"Quantity\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1357,"startedAt":"2021-01-12T13:54:04.658Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Cart Root context","for  field \"Quantity\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":639,"startedAt":"2021-01-12T13:54:06.016Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Cart Root context","for  field \"Subtotal\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":524,"startedAt":"2021-01-12T13:54:06.657Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Cart Root context","for  field \"Subtotal\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1189,"startedAt":"2021-01-12T13:54:07.182Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Cart Root context","for  field \"Subtotal\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":885,"startedAt":"2021-01-12T13:54:08.372Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Product type\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3102,"startedAt":"2021-01-12T13:54:09.259Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Product type\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1416,"startedAt":"2021-01-12T13:54:12.363Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Product type\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":824,"startedAt":"2021-01-12T13:54:13.780Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Name\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":684,"startedAt":"2021-01-12T13:54:14.606Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Name\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2691,"startedAt":"2021-01-12T13:54:15.291Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Name\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":613,"startedAt":"2021-01-12T13:54:17.988Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Description\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1037,"startedAt":"2021-01-12T13:54:18.602Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Description\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1114,"startedAt":"2021-01-12T13:54:19.640Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Description\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":604,"startedAt":"2021-01-12T13:54:20.756Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Categories\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1160,"startedAt":"2021-01-12T13:54:21.361Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Categories\"","should have correct reference value options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.addConditionAnd(function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                      nested: nested\n                    });\n                    panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":804,"startedAt":"2021-01-12T13:54:22.522Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Categories\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":965,"startedAt":"2021-01-12T13:54:23.327Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Categories\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":714,"startedAt":"2021-01-12T13:54:24.293Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Main Image\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":592,"startedAt":"2021-01-12T13:54:25.009Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Main Image\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1197,"startedAt":"2021-01-12T13:54:25.603Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Main Image\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":610,"startedAt":"2021-01-12T13:54:26.802Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"More Images\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":625,"startedAt":"2021-01-12T13:54:27.413Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"More Images\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1831,"startedAt":"2021-01-12T13:54:28.039Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"More Images\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":595,"startedAt":"2021-01-12T13:54:29.872Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Price\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":609,"startedAt":"2021-01-12T13:54:30.469Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Price\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1547,"startedAt":"2021-01-12T13:54:31.080Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Price\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":971,"startedAt":"2021-01-12T13:54:32.629Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Compare-at price\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":628,"startedAt":"2021-01-12T13:54:33.602Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Compare-at price\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1809,"startedAt":"2021-01-12T13:54:34.232Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Compare-at price\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":742,"startedAt":"2021-01-12T13:54:36.042Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"SKU\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":566,"startedAt":"2021-01-12T13:54:36.785Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"SKU\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2513,"startedAt":"2021-01-12T13:54:37.353Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"SKU\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":590,"startedAt":"2021-01-12T13:54:39.873Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Quantity\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":592,"startedAt":"2021-01-12T13:54:40.464Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Quantity\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1118,"startedAt":"2021-01-12T13:54:41.057Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Quantity\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":797,"startedAt":"2021-01-12T13:54:42.176Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Requires Shipping\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":648,"startedAt":"2021-01-12T13:54:42.975Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Requires Shipping\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1095,"startedAt":"2021-01-12T13:54:43.624Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Requires Shipping\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":584,"startedAt":"2021-01-12T13:54:44.720Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Weight\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":885,"startedAt":"2021-01-12T13:54:45.305Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Weight\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1932,"startedAt":"2021-01-12T13:54:46.191Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Weight\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":638,"startedAt":"2021-01-12T13:54:48.124Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Width\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":608,"startedAt":"2021-01-12T13:54:48.764Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Width\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2032,"startedAt":"2021-01-12T13:54:49.373Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Width\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":707,"startedAt":"2021-01-12T13:54:51.406Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Height\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":618,"startedAt":"2021-01-12T13:54:52.114Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Height\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2190,"startedAt":"2021-01-12T13:54:52.733Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Height\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":775,"startedAt":"2021-01-12T13:54:54.924Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Length\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":609,"startedAt":"2021-01-12T13:54:55.701Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Length\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1240,"startedAt":"2021-01-12T13:54:56.312Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Length\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":841,"startedAt":"2021-01-12T13:54:57.554Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Item quantity\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1560,"startedAt":"2021-01-12T13:54:58.396Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Item quantity\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1243,"startedAt":"2021-01-12T13:54:59.957Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Item quantity\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":648,"startedAt":"2021-01-12T13:55:01.201Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Item subtotal\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":588,"startedAt":"2021-01-12T13:55:01.851Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Item subtotal\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1366,"startedAt":"2021-01-12T13:55:02.441Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Item subtotal\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":752,"startedAt":"2021-01-12T13:55:03.808Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"PlainText Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":564,"startedAt":"2021-01-12T13:55:04.561Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"PlainText Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2489,"startedAt":"2021-01-12T13:55:05.126Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"PlainText Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":660,"startedAt":"2021-01-12T13:55:07.626Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Rich Text Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":596,"startedAt":"2021-01-12T13:55:08.288Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Rich Text Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1400,"startedAt":"2021-01-12T13:55:08.886Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Rich Text Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":562,"startedAt":"2021-01-12T13:55:10.287Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":580,"startedAt":"2021-01-12T13:55:10.855Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Image Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":955,"startedAt":"2021-01-12T13:55:11.436Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Image Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":600,"startedAt":"2021-01-12T13:55:12.392Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Video Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":925,"startedAt":"2021-01-12T13:55:12.993Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Video Link Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":964,"startedAt":"2021-01-12T13:55:13.920Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Video Link Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":993,"startedAt":"2021-01-12T13:55:14.885Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"URL Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":967,"startedAt":"2021-01-12T13:55:15.880Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"URL Link Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1009,"startedAt":"2021-01-12T13:55:16.848Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"URL Link Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":962,"startedAt":"2021-01-12T13:55:17.858Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Email Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1337,"startedAt":"2021-01-12T13:55:18.822Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Email Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2054,"startedAt":"2021-01-12T13:55:20.160Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Email Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":843,"startedAt":"2021-01-12T13:55:22.215Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Phone Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1749,"startedAt":"2021-01-12T13:55:23.060Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Phone Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1715,"startedAt":"2021-01-12T13:55:24.810Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Phone Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":572,"startedAt":"2021-01-12T13:55:26.527Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Number Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":587,"startedAt":"2021-01-12T13:55:27.101Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Number Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2169,"startedAt":"2021-01-12T13:55:27.689Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Number Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":683,"startedAt":"2021-01-12T13:55:29.860Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Date Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":588,"startedAt":"2021-01-12T13:55:30.545Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Date Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1106,"startedAt":"2021-01-12T13:55:31.135Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Date Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":592,"startedAt":"2021-01-12T13:55:32.242Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Switch Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":834,"startedAt":"2021-01-12T13:55:32.835Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Switch Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":919,"startedAt":"2021-01-12T13:55:33.670Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Switch Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":581,"startedAt":"2021-01-12T13:55:34.590Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Option Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":568,"startedAt":"2021-01-12T13:55:35.172Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Option Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1151,"startedAt":"2021-01-12T13:55:35.742Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Option Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":588,"startedAt":"2021-01-12T13:55:36.894Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"File Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":574,"startedAt":"2021-01-12T13:55:37.483Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"File Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1232,"startedAt":"2021-01-12T13:55:38.058Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"File Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":575,"startedAt":"2021-01-12T13:55:39.291Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Reference Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":567,"startedAt":"2021-01-12T13:55:39.868Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Reference Field\"","should have correct reference value options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.addConditionAnd(function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                      nested: nested\n                    });\n                    panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1688,"startedAt":"2021-01-12T13:55:40.436Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Reference Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1210,"startedAt":"2021-01-12T13:55:42.126Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Reference Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":690,"startedAt":"2021-01-12T13:55:43.337Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Multi-reference Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1398,"startedAt":"2021-01-12T13:55:44.028Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Multi-reference Field\"","should have correct reference value options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.addConditionAnd(function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                      nested: nested\n                    });\n                    panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":830,"startedAt":"2021-01-12T13:55:45.427Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Multi-reference Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1904,"startedAt":"2021-01-12T13:55:46.258Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Multi-reference Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1019,"startedAt":"2021-01-12T13:55:48.163Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Multi-image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":585,"startedAt":"2021-01-12T13:55:49.183Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Multi-image Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":979,"startedAt":"2021-01-12T13:55:49.769Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Multi-image Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":550,"startedAt":"2021-01-12T13:55:50.749Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Default SKU\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1693,"startedAt":"2021-01-12T13:55:51.301Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Default SKU\"","should have correct reference value options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.addConditionAnd(function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                      nested: nested\n                    });\n                    panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1199,"startedAt":"2021-01-12T13:55:52.995Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Default SKU\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1121,"startedAt":"2021-01-12T13:55:54.195Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Default SKU\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":620,"startedAt":"2021-01-12T13:55:55.318Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Created On\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":680,"startedAt":"2021-01-12T13:55:55.940Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Created On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3613,"startedAt":"2021-01-12T13:55:56.621Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Created On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":658,"startedAt":"2021-01-12T13:56:00.235Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Updated On\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":576,"startedAt":"2021-01-12T13:56:00.894Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Updated On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1685,"startedAt":"2021-01-12T13:56:01.471Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Updated On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":588,"startedAt":"2021-01-12T13:56:03.157Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Published On\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":643,"startedAt":"2021-01-12T13:56:03.746Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Published On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1840,"startedAt":"2021-01-12T13:56:04.390Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Order Item context","for  field \"Published On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":561,"startedAt":"2021-01-12T13:56:06.231Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Product Option context","for  field \"Name\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2121,"startedAt":"2021-01-12T13:56:06.795Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Product Option context","for  field \"Name\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1055,"startedAt":"2021-01-12T13:56:08.917Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Product Option context","for  field \"Name\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":557,"startedAt":"2021-01-12T13:56:09.973Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Product Option context","for  field \"Value\"","should have correct operator options"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                  panel.setConditionValues({\n                    name: fieldName,\n                    nested: nested\n                  });\n                  panel.assertOperatorOptionsEqual(operatorOptions);\n                  panel.close();\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":432,"startedAt":"2021-01-12T13:56:10.532Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Product Option context","for  field \"Value\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                var _conditions$all = conditions.all,\n                    all = _conditions$all === void 0 ? {} : _conditions$all,\n                    fail = conditions.fail;\n                var failingCondition = (0, _extends2[\"default\"])({\n                  name: fieldName,\n                  nested: nested\n                }, all, fail);\n                conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                canvas.within(function () {\n                  cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1401,"startedAt":"2021-01-12T13:56:10.965Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Shopping Cart","can configure conditional visibility in each binding context","in the Product Option context","for  field \"Value\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                canvas.within(function () {\n                  cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                });\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1675,"startedAt":"2021-01-12T13:56:12.367Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Product Options inside the Add to Cart element","should have the correct field options"],"state":"passed","body":"function () {\n      conditionalVisibilitySettings.addConditionAnd(function (panel) {\n        panel.assertConditionFieldOptionsEqual([ATC_PRODUCT_OPTION_NAME]);\n        panel.close();\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":534,"startedAt":"2021-01-12T13:56:14.075Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Product Options inside the Add to Cart element","should be able to configure a failing condition"],"state":"passed","body":"function () {\n      var fieldName = ATC_PRODUCT_OPTION_NAME.fieldName;\n      var _ATC_PRODUCT_OPTION_N = ATC_PRODUCT_OPTION_NAME.conditions,\n          all = _ATC_PRODUCT_OPTION_N.all,\n          fail = _ATC_PRODUCT_OPTION_N.fail;\n      conditionalVisibilitySettings.addCondition((0, _extends2[\"default\"])({\n        name: fieldName\n      }, fail, all));\n      canvas.within(function () {\n        cy.get(atcElementSeclector).first().should('have.class', 'w-condition-invisible');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1004,"startedAt":"2021-01-12T13:56:14.611Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Cart and ATC","Product Options inside the Add to Cart element","should be able to configure a passing condition"],"state":"passed","body":"function () {\n      var pass = ATC_PRODUCT_OPTION_NAME.conditions.pass;\n      conditionalVisibilitySettings.editConditionAt(0, pass);\n      canvas.within(function () {\n        cy.get(atcElementSeclector).first().should('not.have.class', 'w-condition-invisible');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":997,"startedAt":"2021-01-12T13:56:15.616Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/dynamo/binding-targets/conditional-visibility/ecommerce-cart.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/dynamo/binding-targets/conditional-visibility/ecommerce-cart.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/dynamo/binding-targets/conditional-visibility/ecommerce-cart.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":103,"tests":244,"passes":244,"pending":0,"skipped":0,"failures":0,"duration":324246,"startedAt":"2021-01-12T13:56:25.211Z","endedAt":"2021-01-12T14:01:49.457Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":103,"tests":244,"passes":244,"pending":0,"failures":0,"start":"2021-01-12T13:56:25.214Z","end":"2021-01-12T14:01:49.696Z","duration":324482},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.Dynamo.bindingTargets);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding context\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding context\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding context\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                var conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings;\n                conditionalVisibilitySettings.addConditionAnd(function (conditionPanel) {\n                  panel = conditionPanel;\n                });\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n              panel.close();\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding contexts\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage);\n        }"},{"hookName":"before all","title":["\"before all\" hook: before"],"body":"function before() {\n        canvas.selectElement('.w-commerce-commerceorderconfirmationcontainer').then(function () {\n          // Set the previewed order items count to 1.\n          // This ensures order subtotal and total are determined\n          // using the only product collection item and no randomly\n          // generated order items are used.\n          workspace.getRightPanel().clickPropertiesTab();\n          cy.get('[data-automation-id=\"Type--Plugin_Number_Preview\"]').clear().type(\"1{enter}\");\n        });\n      }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings; // add a placeholder passing condition\n\n                conditionalVisibilitySettings.addCondition(placeholderOption || defaultPlaceholderOption);\n              });\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings; // add a placeholder passing condition\n\n                conditionalVisibilitySettings.addCondition(placeholderOption || defaultPlaceholderOption);\n              });\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings; // add a placeholder passing condition\n\n                conditionalVisibilitySettings.addCondition(placeholderOption || defaultPlaceholderOption);\n              });\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings; // add a placeholder passing condition\n\n                conditionalVisibilitySettings.addCondition(placeholderOption || defaultPlaceholderOption);\n              });\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings; // add a placeholder passing condition\n\n                conditionalVisibilitySettings.addCondition(placeholderOption || defaultPlaceholderOption);\n              });\n            }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n          // go to the page that contains the binding contexts\n          workspace.getLeftSidebar().clickPagesTab().switchPage(contextPage);\n        }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n              // select the test element inside the binding context\n              canvas.selectElement(selector).then(function () {\n                conditionalVisibilitySettings = workspace.getRightPanel().clickPropertiesTab().conditionalVisibilitySettings; // add a placeholder passing condition\n\n                conditionalVisibilitySettings.addCondition(placeholderOption || defaultPlaceholderOption);\n              });\n            }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on checkout page","in the Checkout Order Root binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":16708,"startedAt":"2021-01-12T13:56:32.240Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on checkout page","in the Checkout Order Root binding context","should not have field options for restricted CMS fields"],"state":"passed","body":"function () {\n                panel.assertConditionFieldOptionsDoNotContain(restrictedOptions);\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":317,"startedAt":"2021-01-12T13:56:48.969Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on checkout page","in the Shipping Method binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1584,"startedAt":"2021-01-12T13:56:49.312Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on checkout page","in the Extra Item binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":858,"startedAt":"2021-01-12T13:56:50.993Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on checkout page","in the Order Item binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1055,"startedAt":"2021-01-12T13:56:51.876Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on checkout page","in the Product Option binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1288,"startedAt":"2021-01-12T13:56:52.971Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on PayPal checkout page","in the Order Root binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3253,"startedAt":"2021-01-12T13:56:54.261Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on PayPal checkout page","in the Order Root binding context","should not have field options for restricted CMS fields"],"state":"passed","body":"function () {\n                panel.assertConditionFieldOptionsDoNotContain(restrictedOptions);\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":315,"startedAt":"2021-01-12T13:56:57.527Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on PayPal checkout page","in the Shipping Method binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1155,"startedAt":"2021-01-12T13:56:57.881Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on PayPal checkout page","in the Extra Item binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1135,"startedAt":"2021-01-12T13:56:59.060Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on PayPal checkout page","in the Order Item binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1404,"startedAt":"2021-01-12T13:57:00.320Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on PayPal checkout page","in the Product Option binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":728,"startedAt":"2021-01-12T13:57:01.766Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on order confirmation page","in the Order Root binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1989,"startedAt":"2021-01-12T13:57:02.495Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on order confirmation page","in the Order Root binding context","should not have field options for restricted CMS fields"],"state":"passed","body":"function () {\n                panel.assertConditionFieldOptionsDoNotContain(restrictedOptions);\n              }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":221,"startedAt":"2021-01-12T13:57:04.485Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on order confirmation page","in the Extra Item binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":636,"startedAt":"2021-01-12T13:57:04.730Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on order confirmation page","in the Download Item binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":820,"startedAt":"2021-01-12T13:57:05.371Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on order confirmation page","in the Order Item binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":840,"startedAt":"2021-01-12T13:57:06.226Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","has the right binding sources available in all binding contexts","on order confirmation page","in the Product Option binding context","should have the correct available field options"],"state":"passed","body":"function () {\n              panel.assertConditionFieldOptionsEqual(fieldOptions);\n            }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":889,"startedAt":"2021-01-12T13:57:07.110Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Total\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":5847,"startedAt":"2021-01-12T13:57:08.006Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Total\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1516,"startedAt":"2021-01-12T13:57:13.870Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Total\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1261,"startedAt":"2021-01-12T13:57:15.387Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Subtotal\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":567,"startedAt":"2021-01-12T13:57:16.649Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Subtotal\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1238,"startedAt":"2021-01-12T13:57:17.217Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Subtotal\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":974,"startedAt":"2021-01-12T13:57:18.456Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Customer Email\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1286,"startedAt":"2021-01-12T13:57:19.432Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Customer Email\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1586,"startedAt":"2021-01-12T13:57:20.719Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Customer Email\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":650,"startedAt":"2021-01-12T13:57:22.306Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Provider\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":590,"startedAt":"2021-01-12T13:57:22.957Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Provider\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1920,"startedAt":"2021-01-12T13:57:23.548Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Provider\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":859,"startedAt":"2021-01-12T13:57:25.470Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Last Four\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":582,"startedAt":"2021-01-12T13:57:26.331Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Last Four\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1571,"startedAt":"2021-01-12T13:57:26.914Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Last Four\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":642,"startedAt":"2021-01-12T13:57:28.486Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Expires Month\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1196,"startedAt":"2021-01-12T13:57:29.129Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Expires Month\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1208,"startedAt":"2021-01-12T13:57:30.327Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Expires Month\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":672,"startedAt":"2021-01-12T13:57:31.536Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Expires Year\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":604,"startedAt":"2021-01-12T13:57:32.210Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Expires Year\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2092,"startedAt":"2021-01-12T13:57:32.815Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Card Expires Year\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":708,"startedAt":"2021-01-12T13:57:34.908Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Addressee\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":566,"startedAt":"2021-01-12T13:57:35.618Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Addressee\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1324,"startedAt":"2021-01-12T13:57:36.185Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Addressee\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1490,"startedAt":"2021-01-12T13:57:37.511Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Line 1\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1127,"startedAt":"2021-01-12T13:57:39.003Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Line 1\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1430,"startedAt":"2021-01-12T13:57:40.131Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Line 1\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":618,"startedAt":"2021-01-12T13:57:41.562Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Line 2\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":550,"startedAt":"2021-01-12T13:57:42.181Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Line 2\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1326,"startedAt":"2021-01-12T13:57:42.732Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Line 2\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":645,"startedAt":"2021-01-12T13:57:44.059Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address City\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":571,"startedAt":"2021-01-12T13:57:44.705Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address City\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1971,"startedAt":"2021-01-12T13:57:45.277Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address City\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":646,"startedAt":"2021-01-12T13:57:47.249Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address State\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1139,"startedAt":"2021-01-12T13:57:47.897Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address State\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1556,"startedAt":"2021-01-12T13:57:49.038Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address State\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":638,"startedAt":"2021-01-12T13:57:50.595Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Postal Code\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":665,"startedAt":"2021-01-12T13:57:51.235Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Postal Code\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2140,"startedAt":"2021-01-12T13:57:51.901Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Postal Code\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":779,"startedAt":"2021-01-12T13:57:54.043Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Country\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":554,"startedAt":"2021-01-12T13:57:54.824Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Country\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1503,"startedAt":"2021-01-12T13:57:55.379Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Address Country\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1613,"startedAt":"2021-01-12T13:57:56.884Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Addressee\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":567,"startedAt":"2021-01-12T13:57:58.499Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Addressee\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1330,"startedAt":"2021-01-12T13:57:59.067Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Addressee\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":659,"startedAt":"2021-01-12T13:58:00.398Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Line 1\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":589,"startedAt":"2021-01-12T13:58:01.059Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Line 1\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3146,"startedAt":"2021-01-12T13:58:01.649Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Line 1\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":612,"startedAt":"2021-01-12T13:58:04.797Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Line 2\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":566,"startedAt":"2021-01-12T13:58:05.411Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Line 2\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1268,"startedAt":"2021-01-12T13:58:05.979Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Line 2\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":693,"startedAt":"2021-01-12T13:58:07.248Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address City\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":593,"startedAt":"2021-01-12T13:58:07.943Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address City\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3093,"startedAt":"2021-01-12T13:58:08.537Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address City\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":643,"startedAt":"2021-01-12T13:58:11.634Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address State\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":578,"startedAt":"2021-01-12T13:58:12.278Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address State\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1135,"startedAt":"2021-01-12T13:58:12.857Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address State\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":626,"startedAt":"2021-01-12T13:58:13.994Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Postal Code\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":565,"startedAt":"2021-01-12T13:58:14.622Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Postal Code\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1728,"startedAt":"2021-01-12T13:58:15.189Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Postal Code\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1594,"startedAt":"2021-01-12T13:58:16.918Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Country\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":678,"startedAt":"2021-01-12T13:58:18.514Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Country\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1149,"startedAt":"2021-01-12T13:58:19.193Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Billing Address Country\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":604,"startedAt":"2021-01-12T13:58:20.343Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Method Name\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":919,"startedAt":"2021-01-12T13:58:20.949Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Method Name\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2166,"startedAt":"2021-01-12T13:58:21.869Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Method Name\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":610,"startedAt":"2021-01-12T13:58:24.037Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Method Description\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":543,"startedAt":"2021-01-12T13:58:24.648Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Method Description\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3856,"startedAt":"2021-01-12T13:58:25.192Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Shipping Method Description\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":656,"startedAt":"2021-01-12T13:58:29.053Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Count\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":703,"startedAt":"2021-01-12T13:58:29.711Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Count\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1159,"startedAt":"2021-01-12T13:58:30.416Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Count\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":732,"startedAt":"2021-01-12T13:58:31.577Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Requires Shipping\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1189,"startedAt":"2021-01-12T13:58:32.310Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Requires Shipping\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2202,"startedAt":"2021-01-12T13:58:33.500Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Requires Shipping\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":603,"startedAt":"2021-01-12T13:58:35.703Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Additional TextInput\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":536,"startedAt":"2021-01-12T13:58:36.307Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Additional TextInput\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1466,"startedAt":"2021-01-12T13:58:36.844Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Additional TextInput\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":621,"startedAt":"2021-01-12T13:58:38.311Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Additional Textarea\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":540,"startedAt":"2021-01-12T13:58:38.933Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Additional Textarea\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2590,"startedAt":"2021-01-12T13:58:39.474Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Additional Textarea\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":636,"startedAt":"2021-01-12T13:58:42.069Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Additional Checkbox\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":566,"startedAt":"2021-01-12T13:58:42.707Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Additional Checkbox\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":828,"startedAt":"2021-01-12T13:58:43.274Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Additional Checkbox\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":610,"startedAt":"2021-01-12T13:58:44.103Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Has Downloads\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":560,"startedAt":"2021-01-12T13:58:44.715Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Has Downloads\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":826,"startedAt":"2021-01-12T13:58:45.276Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Root binding context","for  field \"Has Downloads\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":676,"startedAt":"2021-01-12T13:58:46.103Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Extra Item binding context","for  field \"Name\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3110,"startedAt":"2021-01-12T13:58:46.782Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Extra Item binding context","for  field \"Name\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1766,"startedAt":"2021-01-12T13:58:49.894Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Extra Item binding context","for  field \"Name\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1759,"startedAt":"2021-01-12T13:58:51.662Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Extra Item binding context","for  field \"Price\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":501,"startedAt":"2021-01-12T13:58:53.423Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Extra Item binding context","for  field \"Price\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1086,"startedAt":"2021-01-12T13:58:53.926Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Extra Item binding context","for  field \"Price\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":729,"startedAt":"2021-01-12T13:58:55.013Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Download Item binding context","for  field \"File name\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2804,"startedAt":"2021-01-12T13:58:55.743Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Download Item binding context","for  field \"File name\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1351,"startedAt":"2021-01-12T13:58:58.548Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Download Item binding context","for  field \"File name\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":721,"startedAt":"2021-01-12T13:58:59.900Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Download Item binding context","for  field \"File URL\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":504,"startedAt":"2021-01-12T13:59:00.622Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Download Item binding context","for  field \"File URL\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":799,"startedAt":"2021-01-12T13:59:01.127Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Download Item binding context","for  field \"File URL\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":913,"startedAt":"2021-01-12T13:59:01.928Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Product type\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3901,"startedAt":"2021-01-12T13:59:02.844Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Product type\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1486,"startedAt":"2021-01-12T13:59:06.746Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Product type\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":843,"startedAt":"2021-01-12T13:59:08.233Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Name\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":676,"startedAt":"2021-01-12T13:59:09.078Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Name\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2782,"startedAt":"2021-01-12T13:59:09.755Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Name\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":596,"startedAt":"2021-01-12T13:59:12.539Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Description\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":591,"startedAt":"2021-01-12T13:59:13.137Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Description\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1079,"startedAt":"2021-01-12T13:59:13.729Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Description\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":595,"startedAt":"2021-01-12T13:59:14.810Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Categories\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":585,"startedAt":"2021-01-12T13:59:15.406Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Categories\"","should have correct reference value options"],"state":"passed","body":"function () {\n                    conditionalVisibilitySettings.addConditionAnd(function (panel) {\n                      panel.setConditionValues({\n                        name: fieldName,\n                        operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                        nested: nested\n                      });\n                      panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n                      panel.close();\n                    });\n                  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":749,"startedAt":"2021-01-12T13:59:15.992Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Categories\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3326,"startedAt":"2021-01-12T13:59:16.742Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Categories\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":643,"startedAt":"2021-01-12T13:59:20.072Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Main Image\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":606,"startedAt":"2021-01-12T13:59:20.718Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Main Image\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":982,"startedAt":"2021-01-12T13:59:21.325Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Main Image\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":589,"startedAt":"2021-01-12T13:59:22.309Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"More Images\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":590,"startedAt":"2021-01-12T13:59:22.899Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"More Images\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1244,"startedAt":"2021-01-12T13:59:23.490Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"More Images\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":617,"startedAt":"2021-01-12T13:59:24.736Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Price\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1240,"startedAt":"2021-01-12T13:59:25.355Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Price\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2187,"startedAt":"2021-01-12T13:59:26.596Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Price\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":960,"startedAt":"2021-01-12T13:59:28.784Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Compare-at price\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1769,"startedAt":"2021-01-12T13:59:29.746Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Compare-at price\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1610,"startedAt":"2021-01-12T13:59:31.516Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Compare-at price\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":800,"startedAt":"2021-01-12T13:59:33.128Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"SKU\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1532,"startedAt":"2021-01-12T13:59:33.929Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"SKU\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2565,"startedAt":"2021-01-12T13:59:35.462Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"SKU\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":632,"startedAt":"2021-01-12T13:59:38.028Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Quantity\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":602,"startedAt":"2021-01-12T13:59:38.661Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Quantity\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3077,"startedAt":"2021-01-12T13:59:39.264Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Quantity\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":851,"startedAt":"2021-01-12T13:59:42.345Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Requires Shipping\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":590,"startedAt":"2021-01-12T13:59:43.197Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Requires Shipping\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1152,"startedAt":"2021-01-12T13:59:43.788Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Requires Shipping\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":614,"startedAt":"2021-01-12T13:59:44.942Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Weight\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":612,"startedAt":"2021-01-12T13:59:45.557Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Weight\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4107,"startedAt":"2021-01-12T13:59:46.170Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Weight\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":674,"startedAt":"2021-01-12T13:59:50.282Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Width\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":701,"startedAt":"2021-01-12T13:59:50.957Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Width\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1502,"startedAt":"2021-01-12T13:59:51.659Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Width\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":644,"startedAt":"2021-01-12T13:59:53.162Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Height\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":606,"startedAt":"2021-01-12T13:59:53.808Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Height\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1436,"startedAt":"2021-01-12T13:59:54.415Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Height\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1344,"startedAt":"2021-01-12T13:59:55.852Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Length\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":759,"startedAt":"2021-01-12T13:59:57.198Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Length\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1377,"startedAt":"2021-01-12T13:59:57.959Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Length\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":627,"startedAt":"2021-01-12T13:59:59.337Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Item quantity\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":614,"startedAt":"2021-01-12T13:59:59.965Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Item quantity\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1294,"startedAt":"2021-01-12T14:00:00.580Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Item quantity\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":841,"startedAt":"2021-01-12T14:00:01.875Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Item subtotal\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":612,"startedAt":"2021-01-12T14:00:02.717Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Item subtotal\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2619,"startedAt":"2021-01-12T14:00:03.330Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Item subtotal\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":679,"startedAt":"2021-01-12T14:00:05.950Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"PlainText Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1203,"startedAt":"2021-01-12T14:00:06.631Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"PlainText Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2446,"startedAt":"2021-01-12T14:00:07.835Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"PlainText Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":676,"startedAt":"2021-01-12T14:00:10.286Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Rich Text Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1817,"startedAt":"2021-01-12T14:00:10.963Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Rich Text Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1186,"startedAt":"2021-01-12T14:00:12.781Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Rich Text Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":595,"startedAt":"2021-01-12T14:00:13.968Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":592,"startedAt":"2021-01-12T14:00:14.564Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Image Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2912,"startedAt":"2021-01-12T14:00:15.157Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Image Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":629,"startedAt":"2021-01-12T14:00:18.073Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Video Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":599,"startedAt":"2021-01-12T14:00:18.704Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Video Link Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1188,"startedAt":"2021-01-12T14:00:19.304Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Video Link Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":617,"startedAt":"2021-01-12T14:00:20.494Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"URL Link Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":572,"startedAt":"2021-01-12T14:00:21.113Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"URL Link Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3435,"startedAt":"2021-01-12T14:00:21.686Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"URL Link Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":661,"startedAt":"2021-01-12T14:00:25.126Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Email Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":602,"startedAt":"2021-01-12T14:00:25.789Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Email Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1941,"startedAt":"2021-01-12T14:00:26.392Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Email Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":715,"startedAt":"2021-01-12T14:00:28.334Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Phone Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":623,"startedAt":"2021-01-12T14:00:29.051Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Phone Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":5195,"startedAt":"2021-01-12T14:00:29.675Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Phone Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":636,"startedAt":"2021-01-12T14:00:34.874Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Number Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":621,"startedAt":"2021-01-12T14:00:35.512Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Number Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1434,"startedAt":"2021-01-12T14:00:36.134Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Number Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":666,"startedAt":"2021-01-12T14:00:37.569Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Date Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":595,"startedAt":"2021-01-12T14:00:38.236Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Date Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1061,"startedAt":"2021-01-12T14:00:38.832Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Date Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1044,"startedAt":"2021-01-12T14:00:39.895Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Switch Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2995,"startedAt":"2021-01-12T14:00:40.940Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Switch Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1279,"startedAt":"2021-01-12T14:00:43.937Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Switch Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":652,"startedAt":"2021-01-12T14:00:45.217Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Option Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":621,"startedAt":"2021-01-12T14:00:45.871Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Option Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2873,"startedAt":"2021-01-12T14:00:46.493Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Option Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":614,"startedAt":"2021-01-12T14:00:49.367Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"File Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":607,"startedAt":"2021-01-12T14:00:49.983Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"File Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1036,"startedAt":"2021-01-12T14:00:50.591Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"File Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1360,"startedAt":"2021-01-12T14:00:51.628Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Reference Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2299,"startedAt":"2021-01-12T14:00:52.990Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Reference Field\"","should have correct reference value options"],"state":"passed","body":"function () {\n                    conditionalVisibilitySettings.addConditionAnd(function (panel) {\n                      panel.setConditionValues({\n                        name: fieldName,\n                        operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                        nested: nested\n                      });\n                      panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n                      panel.close();\n                    });\n                  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":777,"startedAt":"2021-01-12T14:00:55.290Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Reference Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1238,"startedAt":"2021-01-12T14:00:56.068Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Reference Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":660,"startedAt":"2021-01-12T14:00:57.308Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Multi-reference Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":720,"startedAt":"2021-01-12T14:00:57.970Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Multi-reference Field\"","should have correct reference value options"],"state":"passed","body":"function () {\n                    conditionalVisibilitySettings.addConditionAnd(function (panel) {\n                      panel.setConditionValues({\n                        name: fieldName,\n                        operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                        nested: nested\n                      });\n                      panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n                      panel.close();\n                    });\n                  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3275,"startedAt":"2021-01-12T14:00:58.691Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Multi-reference Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1762,"startedAt":"2021-01-12T14:01:01.967Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Multi-reference Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":633,"startedAt":"2021-01-12T14:01:03.730Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Multi-image Field\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":574,"startedAt":"2021-01-12T14:01:04.365Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Multi-image Field\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":992,"startedAt":"2021-01-12T14:01:04.940Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Multi-image Field\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":634,"startedAt":"2021-01-12T14:01:05.934Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Default SKU\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":566,"startedAt":"2021-01-12T14:01:06.569Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Default SKU\"","should have correct reference value options"],"state":"passed","body":"function () {\n                    conditionalVisibilitySettings.addConditionAnd(function (panel) {\n                      panel.setConditionValues({\n                        name: fieldName,\n                        operator: fieldType === 'ItemRefSet' ? 'Contains' : 'Equals',\n                        nested: nested\n                      });\n                      panel.assertReferenceValueOptionsEqual(fieldValueOptions);\n                      panel.close();\n                    });\n                  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1126,"startedAt":"2021-01-12T14:01:07.136Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Default SKU\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1395,"startedAt":"2021-01-12T14:01:08.263Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Default SKU\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":650,"startedAt":"2021-01-12T14:01:09.659Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Created On\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":596,"startedAt":"2021-01-12T14:01:10.310Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Created On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1705,"startedAt":"2021-01-12T14:01:10.907Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Created On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":636,"startedAt":"2021-01-12T14:01:12.613Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Updated On\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":589,"startedAt":"2021-01-12T14:01:13.251Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Updated On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4882,"startedAt":"2021-01-12T14:01:13.841Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Updated On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":623,"startedAt":"2021-01-12T14:01:18.725Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Published On\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":607,"startedAt":"2021-01-12T14:01:19.350Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Published On\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2716,"startedAt":"2021-01-12T14:01:19.958Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Order Item binding context","for  field \"Published On\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":700,"startedAt":"2021-01-12T14:01:22.680Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Product Option binding context","for  field \"Name\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3186,"startedAt":"2021-01-12T14:01:23.382Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Product Option binding context","for  field \"Name\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1705,"startedAt":"2021-01-12T14:01:26.569Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Product Option binding context","for  field \"Name\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":630,"startedAt":"2021-01-12T14:01:28.276Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Product Option binding context","for  field \"Value\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":487,"startedAt":"2021-01-12T14:01:28.908Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Product Option binding context","for  field \"Value\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1294,"startedAt":"2021-01-12T14:01:29.396Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on order confirmation page","in the Product Option binding context","for  field \"Value\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2379,"startedAt":"2021-01-12T14:01:30.691Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on checkout page","in the Shipping Method binding context","for  field \"Name\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4633,"startedAt":"2021-01-12T14:01:33.071Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on checkout page","in the Shipping Method binding context","for  field \"Name\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1461,"startedAt":"2021-01-12T14:01:37.705Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on checkout page","in the Shipping Method binding context","for  field \"Name\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":973,"startedAt":"2021-01-12T14:01:39.167Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on checkout page","in the Shipping Method binding context","for  field \"Description\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2743,"startedAt":"2021-01-12T14:01:40.142Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on checkout page","in the Shipping Method binding context","for  field \"Description\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2356,"startedAt":"2021-01-12T14:01:42.886Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on checkout page","in the Shipping Method binding context","for  field \"Description\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":804,"startedAt":"2021-01-12T14:01:45.247Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on checkout page","in the Shipping Method binding context","for  field \"Price\"","should have correct operator options"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.openConditionAtIndexAnd(0, function (panel) {\n                    panel.setConditionValues({\n                      name: fieldName,\n                      nested: nested\n                    });\n                    panel.assertOperatorOptionsEqual(operatorOptions);\n                    panel.close();\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":502,"startedAt":"2021-01-12T14:01:46.052Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on checkout page","in the Shipping Method binding context","for  field \"Price\"","should be able to configure a failing condition"],"state":"passed","body":"function () {\n                  var _conditions$all = conditions.all,\n                      all = _conditions$all === void 0 ? {} : _conditions$all,\n                      fail = conditions.fail;\n                  var failingCondition = (0, _extends2[\"default\"])({\n                    name: fieldName,\n                    nested: nested\n                  }, all, fail);\n                  conditionalVisibilitySettings.editConditionAt(0, failingCondition);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1269,"startedAt":"2021-01-12T14:01:46.555Z","screenshots":[]}]},{"title":["Dynamo > Binding Targets > Conditional Visibility > Commerce Order","can configure conditional visibility in each binding context","on checkout page","in the Shipping Method binding context","for  field \"Price\"","should be able to configure a passing condition"],"state":"passed","body":"function () {\n                  conditionalVisibilitySettings.editConditionAt(0, conditions.pass);\n                  canvas.within(function () {\n                    cy.get(selector).first().should('not.have.class', 'w-condition-invisible');\n                  });\n                }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1630,"startedAt":"2021-01-12T14:01:47.826Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/dynamo/binding-targets/conditional-visibility/ecommerce-order.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/dynamo/binding-targets/conditional-visibility/ecommerce-order.spec.js","absolute":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/entrypoints/designer/client/ui-tests/dynamo/binding-targets/conditional-visibility/ecommerce-order.spec.js","specType":"integration"},"shouldUploadVideo":false}],"browserPath":"/chromium64/chrome-linux/chrome","browserName":"chromium","browserVersion":"74.0.3729.0","osName":"linux","osVersion":"Debian - 9.13","cypressVersion":"6.2.1","config":{"env":{"baseUrl":"http://wfdev.io:3030","stagingSuperDomain":"dev.webflowtest.io","User-Agent":"cypress","RECORD_KEY":"f9ae3...c4cf9"},"integrationFolder":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow","configFile":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/cypress.json","version":"6.2.1","chromeWebSecurity":false,"browser":"chromium","video":false,"videoUploadOnPasses":false,"viewportWidth":1440,"viewportHeight":900,"defaultCommandTimeout":30000,"numTestsKeptInMemory":0,"ignoreTestFiles":"*.quarantined.spec.js","testFiles":"**/*.spec.js","fileServerFolder":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config","fixturesFolder":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/fixtures","pluginsFile":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/plugins/index.js","screenshotsFolder":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/screenshots","supportFile":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/support/index.js","videosFolder":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/videos","retries":{"runMode":2,"openMode":0},"projectId":"xfhtj7","reporter":"../../../node_modules/cypress-multi-reporters","reporterOptions":{"configFile":"reporter-config.json"},"projectRoot":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config","projectName":"cypress-config","morgan":false,"isTextTerminal":true,"socketId":"jqb5j","report":true,"browsers":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"animationDistanceThreshold":5,"autoOpen":false,"baseUrl":null,"blockHosts":null,"clientRoute":"/__/","componentFolder":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/cypress/component","execTimeout":60000,"experimentalComponentTesting":false,"experimentalFetchPolyfill":false,"experimentalRunEvents":false,"experimentalSourceRewriting":false,"firefoxGcInterval":{"runMode":1,"openMode":null},"hosts":null,"includeShadowDom":false,"javascripts":[],"modifyObstructiveCode":true,"namespace":"__cypress","nodeVersion":"default","pageLoadTimeout":60000,"port":44653,"reporterRoute":"/__cypress/reporter","requestTimeout":5000,"responseTimeout":30000,"screenshotOnRunFailure":true,"socketIoRoute":"/__socket.io","socketIoCookie":"__socket.io","taskTimeout":60000,"trashAssetsBeforeRuns":true,"userAgent":null,"videoCompression":32,"waitForAnimations":true,"scrollBehavior":"top","watchForFileChanges":false,"xhrRoute":"/xhrs/","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"baseUrl":{"value":null,"from":"default"},"blockHosts":{"value":null,"from":"default"},"browsers":{"value":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"from":"default"},"chromeWebSecurity":{"value":false,"from":"config"},"componentFolder":{"value":"cypress/component","from":"default"},"defaultCommandTimeout":{"value":30000,"from":"config"},"env":{"baseUrl":{"value":"http://wfdev.io:3030","from":"plugin"},"User-Agent":{"value":"cypress","from":"config"},"RECORD_KEY":{"value":"f9ae3...c4cf9","from":"env"},"stagingSuperDomain":{"value":"dev.webflowtest.io","from":"plugin"}},"execTimeout":{"value":60000,"from":"default"},"experimentalComponentTesting":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalRunEvents":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"fileServerFolder":{"value":"./","from":"config"},"firefoxGcInterval":{"value":{"runMode":1,"openMode":null},"from":"default"},"fixturesFolder":{"value":"./fixtures","from":"config"},"hosts":{"value":null,"from":"default"},"ignoreTestFiles":{"value":"*.quarantined.spec.js","from":"config"},"includeShadowDom":{"value":false,"from":"default"},"integrationFolder":{"value":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow","from":"plugin"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"value":"default","from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"pageLoadTimeout":{"value":60000,"from":"default"},"pluginsFile":{"value":"./plugins/index.js","from":"config"},"port":{"value":null,"from":"default"},"projectId":{"value":"xfhtj7","from":"config"},"reporter":{"value":"../../../node_modules/cypress-multi-reporters","from":"cli"},"reporterOptions":{"value":{"configFile":"reporter-config.json"},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":2,"openMode":0},"from":"config"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"./screenshots","from":"config"},"supportFile":{"value":"./support/index.js","from":"config"},"taskTimeout":{"value":60000,"from":"default"},"testFiles":{"value":"**/*.spec.js","from":"config"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"config"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"./videos","from":"config"},"videoUploadOnPasses":{"value":false,"from":"config"},"viewportHeight":{"value":900,"from":"config"},"viewportWidth":{"value":1440,"from":"config"},"waitForAnimations":{"value":true,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"configFile":{"value":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/cypress.json","from":"plugin"},"version":{"value":"6.2.1","from":"plugin"}},"parentTestsFolder":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/cypress","parentTestsFolderDisplay":"cypress-config/cypress","supportFolder":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/support","integrationExampleName":"examples","integrationExamplePath":"/scratch/buildkite-agent-c332441d-54da-11eb-97fa-4a22e55b2d68-htm2p/webflow/webflow/packages/tooling/cypress-config/cypress/integration/examples","scaffoldedFiles":[{"name":"cypress","children":[{"name":"integration","children":[{"name":"examples","children":[{"name":"actions.spec.js"},{"name":"aliasing.spec.js"},{"name":"assertions.spec.js"},{"name":"connectors.spec.js"},{"name":"cookies.spec.js"},{"name":"cypress_api.spec.js"},{"name":"files.spec.js"},{"name":"local_storage.spec.js"},{"name":"location.spec.js"},{"name":"misc.spec.js"},{"name":"navigation.spec.js"},{"name":"network_requests.spec.js"},{"name":"querying.spec.js"},{"name":"spies_stubs_clocks.spec.js"},{"name":"traversal.spec.js"},{"name":"utilities.spec.js"},{"name":"viewport.spec.js"},{"name":"waiting.spec.js"},{"name":"window.spec.js"}]}]}]},{"name":"fixtures","children":[{"name":"example.json"}]},{"name":"support","children":[{"name":"commands.js"},{"name":"index.js"}]},{"name":"plugins","children":[{"name":"index.js"}]}],"resolvedNodeVersion":"12.18.3","state":{},"proxyUrl":"http://localhost:44653","browserUrl":"http://localhost:44653/__/","reporterUrl":"http://localhost:44653/__cypress/reporter","xhrUrl":"__cypress/xhrs/"},"status":"finished"}]