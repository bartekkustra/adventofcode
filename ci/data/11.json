[{"startedTestsAt":"2021-01-12T13:40:46.101Z","endedTestsAt":"2021-01-12T13:46:44.668Z","totalDuration":298163,"totalSuites":20,"totalTests":58,"totalFailed":0,"totalPassed":58,"totalPending":0,"totalSkipped":0,"runs":[{"stats":{"suites":1,"tests":23,"passes":23,"pending":0,"skipped":0,"failures":0,"duration":101872,"startedAt":"2021-01-12T13:40:46.101Z","endedAt":"2021-01-12T13:42:27.973Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":23,"passes":23,"pending":0,"failures":0,"start":"2021-01-12T13:40:46.104Z","end":"2021-01-12T13:42:27.989Z","duration":101885},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.discounts);\n    sidebar = workspace.getLeftSidebar();\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    cy.step('Open the ecommerce tab');\n    tab = sidebar.clickECommerceButton();\n    cy.step('Open discounts page');\n    tab.getCollectionTabs('discounts', 'click');\n    discountsPage = tab.getDiscountsPage();\n\n    _cypressAppControls.server.spy('POST', '/api/**/*/commerce/discounts').as('saveDiscount');\n\n    _cypressAppControls.server.spy('PATCH', '/api/**/*/commerce/discounts/*').as('updateDiscount');\n  }"},{"hookName":"after each","title":["\"after each\" hook"],"body":"function () {\n    cy.step('Close the ecommerce tab');\n    sidebar.clickECommerceButton();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Ecommerce Discounts","Can create percent off discount"],"state":"passed","body":"function () {\n    var discountCode = 'WINTERSALE';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    discountsPage.fillForm({\n      name: 'Wintersale, 50%',\n      notes: 'This is for the winter',\n      type: 'PERCENTAGE',\n      code: discountCode,\n      value: '50'\n    });\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows created discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify contents of cells are correct');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      name: 'Wintersale, 50%',\n      code: discountCode,\n      type: 'Percentage',\n      value: '50%',\n      status: 'Active'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":18475,"startedAt":"2021-01-12T13:40:54.570Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can create amount off discount"],"state":"passed","body":"function () {\n    var discountCode = 'SUMMERSALE';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    discountsPage.fillForm({\n      name: 'Summersale, $10',\n      notes: 'This is for the summer',\n      type: 'FIXED_AMOUNT',\n      code: discountCode,\n      value: '10.00'\n    });\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows created discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify contents of cells are correct');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      name: 'Summersale, $10',\n      code: discountCode,\n      type: 'Fixed amount',\n      value: '10.00',\n      status: 'Active'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4632,"startedAt":"2021-01-12T13:41:13.065Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can create free shipping discount"],"state":"passed","body":"function () {\n    var discountCode = 'SHIPIT';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    discountsPage.fillForm({\n      name: 'Free Shipping',\n      notes: 'This is for the summer',\n      type: 'SHIPPING',\n      code: discountCode\n    });\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows created discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify contents of cells are correct');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      name: 'Free Shipping',\n      code: discountCode,\n      type: 'Free shipping',\n      status: 'Active'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4192,"startedAt":"2021-01-12T13:41:17.704Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can create a disabled discount"],"state":"passed","body":"function () {\n    var discountCode = 'AUTUMNSALE';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    discountsPage.fillForm({\n      name: 'Autumnsale, 50%',\n      type: 'PERCENTAGE',\n      code: discountCode,\n      value: '50'\n    });\n    cy.step('Toggle status to disabled');\n    discountsPage.toggleNewStatus();\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows created discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify contents of cells are correct');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      name: 'Autumnsale, 50%',\n      code: discountCode,\n      type: 'Percentage',\n      value: '50%',\n      status: 'Disabled'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3382,"startedAt":"2021-01-12T13:41:21.902Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can update discount code"],"state":"passed","body":"function () {\n    var oldDiscountCode = 'WINTERSALE';\n    var newDiscountCode = 'WINTERSALE2000';\n    cy.step('Click existing discount');\n    discountsPage.clickDiscountRow(oldDiscountCode);\n    cy.step('Enter a discount code');\n    discountsPage.enterDiscountCode(newDiscountCode);\n    cy.step('Click save discount button');\n    discountsPage.clickSaveDiscountButton();\n    cy.wait('@updateDiscount');\n    cy.step('Verify that list view shows updated discount');\n    discountsPage.getDiscountRow(oldDiscountCode).should('not.exist');\n    discountsPage.getDiscountRow(newDiscountCode).should('be.visible');\n    cy.step('Verify code cell reflects update');\n    discountsPage.verifyDiscountCellContents(newDiscountCode, {\n      code: newDiscountCode\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2120,"startedAt":"2021-01-12T13:41:25.285Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can update percent off value"],"state":"passed","body":"function () {\n    var discountCode = 'WINTERSALE2000';\n    cy.step('Click existing discount');\n    discountsPage.clickDiscountRow(discountCode);\n    cy.step('Update the percent off');\n    discountsPage.enterPercentOff('10');\n    cy.step('Click save discount button');\n    discountsPage.clickSaveDiscountButton();\n    cy.wait('@updateDiscount');\n    cy.step('Verify that list view shows updated discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify value cell reflects update');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      value: '10%'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1513,"startedAt":"2021-01-12T13:41:27.406Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can update discount type value"],"state":"passed","body":"function () {\n    var discountCode = 'WINTERSALE2000';\n    cy.step('Click existing discount');\n    discountsPage.clickDiscountRow(discountCode);\n    discountsPage.fillForm({\n      type: 'FIXED_AMOUNT',\n      value: '5.00'\n    });\n    cy.step('Click save discount button');\n    discountsPage.clickSaveDiscountButton();\n    cy.wait('@updateDiscount');\n    cy.step('Verify that list view shows updated discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify value and type cells reflect update');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      type: 'Fixed amount',\n      value: '5.00'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1313,"startedAt":"2021-01-12T13:41:28.921Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can update discount status"],"state":"passed","body":"function () {\n    var discountCode = 'WINTERSALE2000';\n    cy.step('Click existing discount');\n    discountsPage.clickDiscountRow(discountCode);\n    cy.step('Update discount status');\n    discountsPage.toggleStatus();\n    cy.step('Click cancel discount button');\n    discountsPage.clickCancelDiscountButton();\n    cy.step('Verify that list view shows updated discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify status cell reflects update');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      status: 'Disabled'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1383,"startedAt":"2021-01-12T13:41:30.235Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can delete discount"],"state":"passed","body":"function () {\n    var discountCode = 'WINTERSALE2000';\n    cy.step('Click existing discount');\n    discountsPage.clickDiscountRow(discountCode);\n    cy.step('Click delete discount button');\n    discountsPage.clickDeleteDiscountButton();\n    cy.step('Click confirm delete button');\n    discountsPage.clickConfirmDeleteDiscountButton();\n    cy.step('Verify that list view has removed deleted discount');\n    discountsPage.getDiscountRow(discountCode).should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":823,"startedAt":"2021-01-12T13:41:31.619Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Starts with a expires on value 7 days ahead of the default starts on value"],"state":"passed","body":"function () {\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    cy.step('Verify default expiration date is 7 days after default valid on date');\n    discountsPage.getValidOn().then(function ($startsOn) {\n      var timezoneOfSnapshot = 'Europe/Paris';\n\n      var startsOnIsoString = _momentTimezone[\"default\"].tz($startsOn.val(), DATETIME_FORMAT, timezoneOfSnapshot).toISOString();\n\n      var expectedIsoString = (0, _momentTimezone[\"default\"])(startsOnIsoString, _momentTimezone[\"default\"].ISO_8601).add(7, 'days').toISOString();\n      discountsPage.getExpiresOn().should('have.value', _momentTimezone[\"default\"].tz(expectedIsoString, _momentTimezone[\"default\"].ISO_8601, timezoneOfSnapshot).format(DATETIME_FORMAT));\n    });\n    discountsPage.clickCancelDiscountButton();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":676,"startedAt":"2021-01-12T13:41:32.443Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can create a discount with an expiration date"],"state":"passed","body":"function () {\n    var discountCode = '50OFF';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    var validOnDateStr = '07/01/2020 04:50 PM';\n    var expirationDateStr = '08/01/2020 04:50 PM';\n    cy.step('Fill out the form');\n    discountsPage.fillForm({\n      name: 'Discount Name',\n      code: discountCode,\n      type: 'PERCENTAGE',\n      value: '50',\n      validOn: validOnDateStr,\n      expiresOn: expirationDateStr\n    });\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Reopen the newly created discount');\n    discountsPage.clickDiscountRow(discountCode);\n    cy.step('Verify that the expiration date took');\n    discountsPage.getExpiresOn().should('have.value', expirationDateStr);\n    discountsPage.clickCancelDiscountButton();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3980,"startedAt":"2021-01-12T13:41:33.120Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can create a discount that never expires"],"state":"passed","body":"function () {\n    var discountCode = 'ALWAYS5';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    cy.step('Fill out the form');\n    discountsPage.fillForm({\n      name: 'Discount Name',\n      code: discountCode,\n      type: 'FIXED_AMOUNT',\n      value: '5'\n    });\n    cy.step('Toggle on never expires');\n    discountsPage.toggleNeverExpires();\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows updated discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3016,"startedAt":"2021-01-12T13:41:37.101Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can update a expiration date"],"state":"passed","body":"function () {\n    var discountCode = 'SOMETIMES10';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    cy.step('Fill out the form');\n    discountsPage.fillForm({\n      name: 'Discount Name',\n      code: discountCode,\n      type: 'FIXED_AMOUNT',\n      value: '10',\n      validOn: '06/01/2020 04:50 PM',\n      expiresOn: '06/10/2020 04:50 PM'\n    });\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows updated discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Reopen the newly created discount');\n    discountsPage.clickDiscountRow(discountCode);\n    cy.step('Update the expiration date');\n    var newExpirationStr = '06/20/2020 04:50 PM';\n    discountsPage.enterExpiresOn(newExpirationStr);\n    cy.step('Click save discount button');\n    discountsPage.clickSaveDiscountButton();\n    cy.wait('@updateDiscount');\n    cy.step('Verify the Discount add edit panel is gone after saving the discount');\n    cy.getByDataAutomationId('discount-add-edit-panel').should('not.exist');\n    cy.step('Reopen the newly updated discount');\n    discountsPage.clickDiscountRow(discountCode);\n    cy.step('Verify that the expiration date was updated');\n    discountsPage.getExpiresOn().should('have.value', newExpirationStr);\n    cy.step('Click cancel button');\n    discountsPage.clickCancelDiscountButton();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":5198,"startedAt":"2021-01-12T13:41:40.118Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can update an expiration date using the date picker"],"state":"passed","body":"function () {\n    var discountCode = 'IMADISCOUNT';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    cy.step('Fill out the form');\n    discountsPage.fillForm({\n      name: 'Discount Name',\n      code: discountCode,\n      type: 'FIXED_AMOUNT',\n      value: '10',\n      validOn: '06/01/2020 04:50 PM',\n      expiresOn: '06/08/2020 04:50 PM'\n    });\n    cy.step('Open the Starts On date time picker');\n    cy.getByDataAutomationId('date-picker-open-button').eq(0).click();\n    var currentMonth = 6;\n    var startDate = 5;\n    var hour = 5;\n    var minute = 25;\n    cy.step('Select a start date');\n    cy.getByDataAutomationId(\"date-picker-day-\".concat(currentMonth, \"-\").concat(startDate)).click();\n    cy.step('Select an hour');\n    cy.getByDataAutomationId(\"time-picker-hour-\".concat(hour)).click();\n    cy.step('Select a minute');\n    cy.getByDataAutomationId(\"time-picker-minute-\".concat(minute)).click();\n    cy.step('Close the date time picker');\n    cy.getByDataAutomationId('popover-mask').last().click({\n      force: true\n    });\n    cy.step('Verify that the start date was filled in properly');\n    discountsPage.getValidOn().should('have.value', '06/05/2020 05:25 AM');\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.step('Verify the Discount add edit panel is gone after saving the discount');\n    cy.getByDataAutomationId('discount-add-edit-panel').should('not.exist');\n    cy.step('Verify that list view shows updated discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Reopen the newly created discount');\n    discountsPage.clickDiscountRow(discountCode);\n    cy.step('Update the expiration date');\n    discountsPage.enterExpiresOn('06/30/2020 04:50 PM');\n    cy.step('Click save discount button');\n    discountsPage.clickSaveDiscountButton();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":7078,"startedAt":"2021-01-12T13:41:45.318Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Displays a validation error for expiration dates before start date"],"state":"passed","body":"function () {\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    cy.step('Enter a expiration date before start date');\n    discountsPage.fillForm({\n      name: 'Discount Name',\n      code: 'TESTING_OUT_SOME_VALIDATION',\n      type: 'PERCENTAGE',\n      validOn: '04/09/2099 11:18 AM',\n      expiresOn: '04/08/2099 11:18 AM'\n    });\n    cy.step('Verify that expiration field shows error text');\n    cy.getByDataAutomationId('discount-expiresOn-note-text').should('contain', 'Date must be after 04/09/2099 11:18 AM');\n    cy.step('Turn on never expires');\n    discountsPage.toggleNeverExpires();\n    cy.step('Verify that expiration field error was cleared');\n    cy.getByDataAutomationId('discount-expiresOn-note-text').should('not.exist');\n    discountsPage.clickCancelDiscountButton();\n    cy.getByDataAutomationId('discard-changes').click();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":5463,"startedAt":"2021-01-12T13:41:52.407Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can set a usage limit on the discount"],"state":"passed","body":"function () {\n    var discountCode = 'LIMITEDSALE';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    cy.step('Update usage limit type');\n    discountsPage.selectUsageLimitType('fixedLimit');\n    cy.step('Verify that default usage limit for fixed type is 10');\n    discountsPage.getUsageLimit().should('have.value', '10');\n    discountsPage.fillForm({\n      name: 'Limited Sale, 50%',\n      type: 'PERCENTAGE',\n      code: discountCode,\n      value: '50',\n      usageLimitType: 'fixedLimit',\n      usageLimit: '5'\n    });\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows created discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify contents of cells are correct');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      name: 'Limited Sale, 50%',\n      code: discountCode,\n      value: '50'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4648,"startedAt":"2021-01-12T13:41:57.876Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can set a customer usage limit on the discount"],"state":"passed","body":"function () {\n    var discountCode = 'CUSTOMERLIMITEDSALE';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    cy.step('Update customer usage limit type');\n    discountsPage.selectCustomerUsageLimitType('fixedLimit');\n    cy.step('Verify that default customer usage limit for fixed type is 1');\n    discountsPage.getCustomerUsageLimit().should('have.value', '1');\n    discountsPage.fillForm({\n      name: 'Limited Sale, 50%',\n      type: 'PERCENTAGE',\n      code: discountCode,\n      value: '50',\n      customerUsageLimitType: 'fixedLimit',\n      customerUsageLimit: '2'\n    });\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows created discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify contents of cells are correct');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      name: 'Limited Sale, 50%',\n      code: discountCode,\n      value: '50'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3608,"startedAt":"2021-01-12T13:42:02.526Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can hide a column"],"state":"passed","body":"function () {\n    var columnId = 'name';\n    cy.step('Verify column is visible');\n    cy.getByDataAutomationId(\"header-\".concat(columnId)).should('be.visible');\n    cy.step('Open pin column menu');\n    cy.getByDataAutomationId('pin-column-menu').click();\n    cy.step('Toggle column visibility');\n    cy.getByDataAutomationId(\"pin-column-menu-item-\".concat(columnId)).click();\n    cy.step('Close pin column menu');\n    cy.getByDataAutomationId('pin-column-menu').click();\n    cy.step('Verify column is not visible');\n    cy.getByDataAutomationId(\"header-\".concat(columnId)).should('not.exist');\n    cy.step('Toggle column visibility back');\n    cy.getByDataAutomationId('pin-column-menu').click();\n    cy.getByDataAutomationId(\"pin-column-menu-item-\".concat(columnId)).click();\n    cy.getByDataAutomationId('pin-column-menu').click();\n    cy.step('Verify column is visible');\n    cy.getByDataAutomationId(\"header-\".concat(columnId)).should('be.visible');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1198,"startedAt":"2021-01-12T13:42:06.135Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Can sort by a column"],"state":"passed","body":"function () {\n    cy.step('Click the code header');\n    cy.getByDataAutomationId('header-code').click();\n    cy.step('Verify the discounts are sorted by code ascending');\n    discountsPage.getNthDiscountCell(0, 'code').should('contain', '50OFF');\n    discountsPage.getNthDiscountCell(1, 'code').should('contain', 'ALWAYS5');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":701,"startedAt":"2021-01-12T13:42:07.335Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Displays the appropriate status: active"],"state":"passed","body":"function () {\n    var discountCode = 'ACTIVEDISCOUNT';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    discountsPage.fillForm({\n      name: 'Active Discount, 50%',\n      type: 'PERCENTAGE',\n      code: discountCode,\n      value: '50'\n    });\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows created discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify status is correct');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      status: 'Active'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4009,"startedAt":"2021-01-12T13:42:08.037Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Displays the appropriate status: scheduled"],"state":"passed","body":"function () {\n    var discountCode = 'SCHEDULEDDISCOUNT';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    discountsPage.fillForm({\n      name: 'Scheduled Discount, 50%',\n      type: 'PERCENTAGE',\n      code: discountCode,\n      value: '50',\n      validOn: '01/01/2099',\n      expiresOn: '02/02/2099'\n    });\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows created discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify status is correct');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      status: 'Scheduled'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":6092,"startedAt":"2021-01-12T13:42:12.055Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Displays the appropriate status: expired"],"state":"passed","body":"function () {\n    var discountCode = 'EXPIREDDISCOUNT';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    discountsPage.fillForm({\n      name: 'EXPIRED Discount, 50%',\n      type: 'PERCENTAGE',\n      code: discountCode,\n      value: '50',\n      validOn: '01/01/2020',\n      expiresOn: '02/02/2020'\n    });\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows created discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify status is correct');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      status: 'Expired'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":5193,"startedAt":"2021-01-12T13:42:18.154Z","screenshots":[]}]},{"title":["Ecommerce Discounts","Displays the appropriate status: disabled"],"state":"passed","body":"function () {\n    var discountCode = 'DISABLEDDISCOUNT';\n    cy.step('Click New Discount button');\n    discountsPage.clickNewDiscountButton();\n    discountsPage.fillForm({\n      name: 'Disabled Discount, 50%',\n      type: 'PERCENTAGE',\n      code: discountCode,\n      value: '50'\n    });\n    discountsPage.toggleNewStatus();\n    cy.step('Click create discount button');\n    discountsPage.clickCreateDiscountButton();\n    cy.wait('@saveDiscount');\n    cy.step('Verify that list view shows created discount');\n    discountsPage.getDiscountRow(discountCode).should('be.visible');\n    cy.step('Verify status is correct');\n    discountsPage.verifyDiscountCellContents(discountCode, {\n      status: 'Disabled'\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4617,"startedAt":"2021-01-12T13:42:23.352Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/discounts/discount.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/discounts/discount.spec.js","absolute":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/discounts/discount.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":4,"tests":9,"passes":9,"pending":0,"skipped":0,"failures":0,"duration":22559,"startedAt":"2021-01-12T13:42:35.809Z","endedAt":"2021-01-12T13:42:58.368Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":4,"tests":9,"passes":9,"pending":0,"failures":0,"start":"2021-01-12T13:42:35.814Z","end":"2021-01-12T13:42:58.372Z","duration":22558},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.addToBeta('nextGenPanels');\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n      cy.step('Close all open panels');\n      workspace.escapeAllUiPanels();\n      cy.step('Open the email settings');\n      workspace.getLeftSidebar().clickSettingsButton().BETA_clickEmailTab();\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["BETA - Email Settings","Can save valid changes / Can't save invalid changes","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      workspace.getLeftSidebar().clickSettingsButton().BETA_clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12582,"startedAt":"2021-01-12T13:42:41.129Z","screenshots":[]}]},{"title":["BETA - Email Settings","Can save valid changes / Can't save invalid changes","should change accent color value to an invalid entry"],"state":"passed","body":"function () {\n      cy.step('Change the accent color value');\n      cy.get(ecom.emailSettingsAccentColor).clear().type('g');\n      cy.step('Assert that the accent color is now g');\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', 'g');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":318,"startedAt":"2021-01-12T13:42:53.729Z","screenshots":[]}]},{"title":["BETA - Email Settings","Can save valid changes / Can't save invalid changes","should attempt to save changes and fail"],"state":"passed","body":"function () {\n      cy.step('Click save changes');\n      cy.get(ecom.emailSettingsSaveButton).click();\n      cy.step('Assert that the accent color error message shows up when attempting to save');\n      cy.get('.bem-TextInput.hasError.bem-TextInput-required').should('be.visible');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":178,"startedAt":"2021-01-12T13:42:54.048Z","screenshots":[]}]},{"title":["BETA - Email Settings","Can save valid changes / Can't save invalid changes","should save the settings and close all open panels to reset the DOM"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('email-settings');\n\n      cy.step('Change the accent color back to a valid value');\n      cy.get(ecom.emailSettingsAccentColor).clear().type('655');\n      cy.step('Assert that the accent color is now #468ee5');\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', '655');\n      cy.step('Change the accent color back to a valid value');\n      cy.get(ecom.emailSettingsAccentColor).type('{enter}');\n      cy.step('Assert that the accent color is now #468ee5');\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', '#655');\n      cy.step('Save Email Settings changes');\n      cy.get(ecom.emailSettingsSaveButton).click();\n      cy.wait('@email-settings');\n      cy.step('Close all open panels');\n      workspace.escapeAllUiPanels();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":910,"startedAt":"2021-01-12T13:42:54.227Z","screenshots":[]}]},{"title":["BETA - Email Settings","The correct modal appears if exiting with unsaved valid / invalid changes","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      workspace.getLeftSidebar().clickSettingsButton().BETA_clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":308,"startedAt":"2021-01-12T13:42:55.139Z","screenshots":[]}]},{"title":["BETA - Email Settings","The correct modal appears if exiting with unsaved valid / invalid changes","should enter an invalid value into the accent color field and assert that the correct modal appears when trying to exit with errors"],"state":"passed","body":"function () {\n      cy.step(\"Enter invalid entry 'wrong' into the accent color field\");\n      cy.get(ecom.emailSettingsAccentColor).clear().type('wrong');\n      cy.step(\"Assert that the Accent color field has 'wrong' as its value\");\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', 'wrong');\n      cy.step('Click the background settings input (just to make sure the invalid accent value is confirmed there)');\n      cy.get(ecom.emailSettingsBackgroundColor).click();\n      cy.step('Attempt to cancel changes');\n      cy.get(ecom.emailSettingsCancelButton).click();\n      cy.step('Assert that the exit with invalid changes modal appears');\n      cy.get(ecom.exitWithoutSavingModal).should('be.visible');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":609,"startedAt":"2021-01-12T13:42:55.448Z","screenshots":[]}]},{"title":["BETA - Email Settings","The correct modal appears if exiting with unsaved valid / invalid changes","should enter a valid value into the accent color field and assert that the correct modal appears when trying to exit with valid, unsaved changes"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('email-settings');\n\n      cy.step('Click the keep editing button');\n      cy.get(ecom.modalKeepEditing).click();\n      cy.step('Enter a valid value into the accent color field');\n      cy.get(ecom.emailSettingsAccentColor).clear().type('777').blur();\n      cy.step(\"Assert that the value of the accent color field is '#777'\");\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', '#777');\n      cy.step('Click the background settings input (just to make sure the valid accent value is confirmed there)');\n      cy.get(ecom.emailSettingsBackgroundColor).click();\n      cy.step('Attempt to cancel changes');\n      cy.get(ecom.emailSettingsCancelButton).click();\n      cy.step('Assert that the exit with valid changes modal appears');\n      cy.get(ecom.unsavedChangesModal).should('be.visible');\n      cy.step(\"Click 'Save Changes'\");\n      cy.get('.bem-Button.bem-Button-primary.bem-Confirm_ActionButton').click();\n      cy.wait('@email-settings');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":782,"startedAt":"2021-01-12T13:42:56.059Z","screenshots":[]}]},{"title":["BETA - Email Settings","various close actions should only close the Emails panel","should close just the emails panel with the Cancel button"],"state":"passed","body":"function () {\n      cy.step('Click the cancel button');\n      cy.get(ecom.emailSettingsCancelButton).click();\n      cy.getByDataAutomationId('email-settings-panel').should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":730,"startedAt":"2021-01-12T13:42:56.842Z","screenshots":[]}]},{"title":["BETA - Email Settings","various close actions should only close the Emails panel","should close just the emails panel with the Cancel button"],"state":"passed","body":"function () {\n      cy.step('Click the save button');\n      cy.get(ecom.emailSettingsSaveButton).click();\n      cy.getByDataAutomationId('email-settings-panel').should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":794,"startedAt":"2021-01-12T13:42:57.573Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/BETA_PANELS-valid-invalid-email-settings.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/BETA_PANELS-valid-invalid-email-settings.spec.js","absolute":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/BETA_PANELS-valid-invalid-email-settings.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":23672,"startedAt":"2021-01-12T13:43:05.831Z","endedAt":"2021-01-12T13:43:29.503Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:43:05.833Z","end":"2021-01-12T13:43:29.514Z","duration":23681},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Email Settings","Input text into the email order refunded fields and assert that it is reflected in the preview panel.","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      emailSettings = workspace.getLeftSidebar().clickSettingsButton().clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12626,"startedAt":"2021-01-12T13:43:10.805Z","screenshots":[]}]},{"title":["Email Settings","Input text into the email order refunded fields and assert that it is reflected in the preview panel.","should open the order refunded section in the email settings, change each value, then assert the new value exists in the input field and on the email preview iframe"],"state":"passed","body":"function () {\n      cy.step('Click the Order Shipped Section to bring the Order Refunded panel into view');\n      emailSettings.getEmailSection('order-shipped').click();\n      cy.step('Click to open the Order Refunded section');\n      emailSettings.getEmailSection('order-refunded').click();\n      cy.step('Assert that all the labels are visible within the Order Refunded section');\n      emailSettings.getEmailSection('order-refunded').within(function () {\n        cy.get('.bem-Field_Label_Text').contains(/Email subject/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Greeting message/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Refund information/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Refund information copy/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Fine print/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains('Fine print contact link text').should('be.visible');\n      });\n      cy.step('Input the email order refunded labels');\n      emailSettings.inputEmailLabels('order-refunded');\n      cy.step('Assert that the order number input token is visible');\n      emailSettings.getInputToken().contains(/Order Number/gi).should('be.visible');\n      cy.step('Assert that the store name input token is visible');\n      emailSettings.getInputToken().contains(/Store Name/gi).should('be.visible');\n      cy.step('Assert that the customer name input token is visible');\n      emailSettings.getInputToken().contains(/Customer Name/gi).should('be.visible');\n      cy.step('Assert that the input has Refund Info as its value');\n      cy.get('.bem-TextInput').last().should('have.value', 'Refund Info');\n      cy.step('Assert that the store name input token is visible');\n      emailSettings.getInputToken().contains(/Store Name/gi).last().should('be.visible');\n      cy.step('Assert that the store URL input token is visible');\n      emailSettings.getInputToken().contains(/Store URL/gi).should('be.visible');\n      cy.step('Assert that the store name input token is visible');\n      emailSettings.getInputToken().contains('Store Name').last().should('be.visible');\n      cy.step('Assert that the email preview has the correct labels');\n      cy.iframeFocus('iframe').then(function ($iframe) {\n        cy.wrap($iframe.find('h1')).first().should('have.text', 'cy-ecom-on-with-store-info');\n        cy.wrap($iframe.find('#greeting')).should('have.text', '{Customer Name}');\n        cy.wrap($iframe.find('#refundInfo')).should('have.text', 'Refund Info');\n        cy.wrap($iframe.find('#refundInfoCopy')).should('have.text', 'cy-ecom-on-with-store-info');\n        cy.wrap($iframe.find('#fineprint')).should('contain', '{Store URL}');\n        cy.wrap($iframe.find('#fineprintLink')).should('contain', 'cy-ecom-on-with-store-info');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":6048,"startedAt":"2021-01-12T13:43:23.441Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-field-email-order-refunded.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-field-email-order-refunded.spec.js","absolute":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-field-email-order-refunded.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":20534,"startedAt":"2021-01-12T13:43:37.927Z","endedAt":"2021-01-12T13:43:58.461Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:43:37.930Z","end":"2021-01-12T13:43:58.464Z","duration":20534},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Email Settings","Input text into the email order confirmed fields and assert that it is reflected in the preview panel.","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      emailSettings = workspace.getLeftSidebar().clickSettingsButton().clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12360,"startedAt":"2021-01-12T13:43:43.005Z","screenshots":[]}]},{"title":["Email Settings","Input text into the email order confirmed fields and assert that it is reflected in the preview panel.","should open the order confirmed section in the email settings, change each value, then assert the new value exists in the input field and on the email preview iframe"],"state":"passed","body":"function () {\n      cy.step('Click the Order Received Section to bring the Order Confirmed panel into view');\n      emailSettings.getEmailSection('order-received').click();\n      cy.step('Click to open the Order Confirmed section');\n      emailSettings.getEmailSection('order-confirmed').click();\n      cy.step('Assert that the Order Number Field is not visible (which means the Shared section is closed)');\n      emailSettings.getEmailInputField('orderNumber').should('not.exist');\n      cy.step('Assert that the the Email Subject field within the Order Received section is not visible (to assert that the Order Received section is not open)');\n      emailSettings.getEmailSection('order-received').within(function () {\n        emailSettings.getEmailFieldLabel('email-subject').should('not.exist');\n      });\n      cy.step('Assert that all the correct labels are visible within the Order Confirmed section');\n      emailSettings.getEmailSection('order-confirmed').within(function () {\n        cy.get('.bem-Field_Label_Text').contains(/Email subject/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Greeting message/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Fine print/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Fine print contact link text/gi).should('be.visible');\n      });\n      cy.step('Input the email order received labels');\n      emailSettings.inputEmailLabels('order-confirmed');\n      cy.step('Assert that the order number input token is visible');\n      emailSettings.getInputToken().contains(/Order Number/gi).eq(0).should('be.visible');\n      cy.step('Assert that the store name input token is visible');\n      emailSettings.getInputToken().contains(/Store Name/gi).should('be.visible');\n      cy.step('Assert that the customer name input token is visible');\n      emailSettings.getInputToken().contains(/Customer Name/gi).should('be.visible');\n      cy.step('Assert that the store url input token is visible');\n      emailSettings.getInputToken().contains(/Store URL/gi).should('be.visible');\n      cy.step('Assert that the store name input token is visible');\n      emailSettings.getInputToken().contains(/Store Name/gi).last().should('be.visible');\n      cy.step('Assert that the email preview has the correct labels');\n      cy.iframeFocus('iframe').then(function ($iframe) {\n        cy.wrap($iframe.find('h1')).first().should('have.text', 'cy-ecom-on-with-store-info');\n        cy.wrap($iframe.find('#greeting')).should('have.text', '{Customer Name}');\n        cy.wrap($iframe.find('#fineprint')).should('contain', 'Store URL');\n        cy.wrap($iframe.find('#fineprintLink')).should('contain', 'cy-ecom-on-with-store-info');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3085,"startedAt":"2021-01-12T13:43:55.374Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-email-order-confirmed.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-email-order-confirmed.spec.js","absolute":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-email-order-confirmed.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":19626,"startedAt":"2021-01-12T13:44:05.848Z","endedAt":"2021-01-12T13:44:25.474Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:44:05.851Z","end":"2021-01-12T13:44:25.479Z","duration":19628},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Email Settings","Input text into the email order received fields and assert that it is reflected in the preview panel.","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      emailSettings = workspace.getLeftSidebar().clickSettingsButton().clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12408,"startedAt":"2021-01-12T13:44:11.035Z","screenshots":[]}]},{"title":["Email Settings","Input text into the email order received fields and assert that it is reflected in the preview panel.","should open the order received section in the email settings, change each value, then assert the new value exists in the input field and on the email preview iframe"],"state":"passed","body":"function () {\n      cy.step('Click the Order Received Section to bring the Order Confirmed panel into view');\n      emailSettings.getEmailSection('order-received').click();\n      cy.step('Assert that the Order Number Field is not visible (which means the Shared section is closed)');\n      emailSettings.getEmailInputField('orderNumber').should('not.exist');\n      cy.step('Assert that all the correct labels are visible within the Order Confirmed section');\n      emailSettings.getEmailSection('order-received').within(function () {\n        cy.get('.bem-Field_Label_Text').contains(/Email subject/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Greeting message/gi).should('be.visible');\n      });\n      cy.step('Input the email order received labels');\n      emailSettings.inputEmailLabels('order-received');\n      cy.step('Assert that the order number input token is visible');\n      emailSettings.getInputToken().contains(/Order Number/gi).should('be.visible');\n      cy.step('Assert that the store name input token is visible');\n      emailSettings.getInputToken().contains(/Store Name/gi).eq(0).should('be.visible');\n      cy.step('Assert that the customer name input token is visible');\n      emailSettings.getInputToken().contains(/Customer Name/gi).should('be.visible');\n      cy.step('Assert that the email preview has the correct values');\n      cy.iframeFocus('iframe').then(function ($iframe) {\n        cy.wrap($iframe.find('h1')).first().should('have.text', 'cy-ecom-on-with-store-info');\n        cy.wrap($iframe.find('#greeting')).should('have.text', '{Customer Name}');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2017,"startedAt":"2021-01-12T13:44:23.454Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-email-order-received.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-email-order-received.spec.js","absolute":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-email-order-received.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":24959,"startedAt":"2021-01-12T13:44:32.748Z","endedAt":"2021-01-12T13:44:57.707Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:44:32.750Z","end":"2021-01-12T13:44:57.733Z","duration":24983},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Email Settings","Input text into the email shared fields and assert that it is reflected in the preview panel.","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      emailSettings = workspace.getLeftSidebar().clickSettingsButton().clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12130,"startedAt":"2021-01-12T13:44:38.077Z","screenshots":[]}]},{"title":["Email Settings","Input text into the email shared fields and assert that it is reflected in the preview panel.","should input text into the email design fields"],"state":"passed","body":"function () {\n      cy.step('Change the email settings accent color and background color');\n      emailSettings.getEmailDesignSettings('accentColor').clear().type('#e55').blur();\n      emailSettings.getEmailDesignSettings('bgColor').clear().type('black').blur();\n      cy.step('Assert that the email settings accent color is #e55');\n      emailSettings.getEmailDesignSettings('accentColor').should('have.value', '#e55');\n      cy.step('Assert that the email settings background color is black');\n      emailSettings.getEmailDesignSettings('bgColor').should('have.value', 'black');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1045,"startedAt":"2021-01-12T13:44:50.218Z","screenshots":[]}]},{"title":["Email Settings","Input text into the email shared fields and assert that it is reflected in the preview panel.","should open the shared section in the email settings, change each value, then assert the new value exists in the input field and on the email preview iframe"],"state":"passed","body":"function () {\n      cy.step('Click the shared section on the email settings panel');\n      emailSettings.getEmailSection('shared').click();\n      cy.step('Input the preview email shared labels');\n      emailSettings.getEmailSharedInputField('orderNumber').type('Receipt Number');\n      emailSettings.getEmailSharedInputField('orderDate').type('Date');\n      emailSettings.getEmailSharedInputField('subtotal').type('Sub');\n      emailSettings.getEmailSharedInputField('shipping').type('Shipping Price');\n      emailSettings.getEmailSharedInputField('tax').type('Tax');\n      emailSettings.getEmailSharedInputField('shippingMethod').type('Ship Method');\n      emailSettings.getEmailSharedInputField('shippingInfo').type('Info');\n      emailSettings.getEmailSharedInputField('billedTo').type('Billing Info');\n      cy.step('Assert that the order number input has the correct value');\n      emailSettings.getEmailSharedInputField('orderNumber').should('have.value', 'Receipt Number');\n      cy.step('Assert that the order date input has the correct value');\n      emailSettings.getEmailSharedInputField('orderDate').should('have.value', 'Date');\n      cy.step('Assert that the subtotal input has the correct value');\n      emailSettings.getEmailSharedInputField('subtotal').should('have.value', 'Sub');\n      cy.step('Assert that the shipping input has the correct value');\n      emailSettings.getEmailSharedInputField('shipping').should('have.value', 'Shipping Price');\n      cy.step('Assert that the tax input has the correct value');\n      emailSettings.getEmailSharedInputField('tax').should('have.value', 'Tax');\n      cy.step('Assert that the shipping method input has the correct value');\n      emailSettings.getEmailSharedInputField('shippingMethod').should('have.value', 'Ship Method');\n      cy.step('Assert that the shipping info input has the correct value');\n      emailSettings.getEmailSharedInputField('shippingInfo').should('have.value', 'Info');\n      cy.step('Assert that the billed to input has the correct value');\n      emailSettings.getEmailSharedInputField('billedTo').should('have.value', 'Billing Info');\n      cy.step('Assert that the email preview has the correct values for each field');\n      cy.iframeFocus('iframe').then(function ($iframe) {\n        cy.wrap($iframe.find('#orderNumber')).should('have.text', 'Receipt Number');\n        cy.wrap($iframe.find('#orderDate')).should('have.text', 'Date');\n        cy.wrap($iframe.find('#subtotal')).should('have.text', 'Sub');\n        cy.wrap($iframe.find('#shipping')).should('have.text', 'Shipping Price');\n        cy.wrap($iframe.find('#tax')).should('have.text', 'Tax');\n        cy.wrap($iframe.find('#shippingMethod')).should('have.text', 'Ship Method');\n        cy.wrap($iframe.find('#shippingInfo')).should('have.text', 'Info');\n        cy.wrap($iframe.find('#billedTo')).should('have.text', 'Billing Info');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":6425,"startedAt":"2021-01-12T13:44:51.264Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-email-shared.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-email-shared.spec.js","absolute":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-email-shared.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":25959,"startedAt":"2021-01-12T13:45:05.363Z","endedAt":"2021-01-12T13:45:31.322Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:45:05.365Z","end":"2021-01-12T13:45:31.337Z","duration":25972},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Email Settings","Input text into the email order shipped fields and assert that it is reflected in the preview panel.","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      emailSettings = workspace.getLeftSidebar().clickSettingsButton().clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12137,"startedAt":"2021-01-12T13:45:10.785Z","screenshots":[]}]},{"title":["Email Settings","Input text into the email order shipped fields and assert that it is reflected in the preview panel.","should open the order shipped section in the email settings, change each value, then assert the new value exists in the input field and on the email preview iframe"],"state":"passed","body":"function () {\n      cy.step('Click the Order Confirmed Section to bring the Order Confirmed panel into view');\n      emailSettings.getEmailSection('order-confirmed').click();\n      cy.step('Click to open the Order Shipped section');\n      emailSettings.getEmailSection('order-shipped').click();\n      cy.step('Assert that the Order Number Field is not visible (which means the Shared section is closed)');\n      emailSettings.getEmailInputField('orderNumber').should('not.exist');\n      cy.step('Assert that the the Email Subject field within the Order Confirmed section is not visible (to assert that the Order Confirmed section is not open)');\n      emailSettings.getEmailSection('order-confirmed').within(function () {\n        emailSettings.getEmailFieldLabel('email-subject').should('not.exist');\n      });\n      cy.step('Assert that all the correct labels are visible within the Order Shipped section');\n      emailSettings.getEmailSection('order-shipped').within(function () {\n        cy.get('.bem-Field_Label_Text').contains(/Email subject/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Greeting message/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Tracking number/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Shipping carrier/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Track your order/gi) // this is a hack to make the element scroll in to view\n        // source: https://github.com/cypress-io/cypress/issues/2892 (lily!)\n        .trigger('dummy-event').should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Fine print/gi).should('be.visible');\n        cy.get('.bem-Field_Label_Text').contains(/Fine print contact link text/gi).should('be.visible');\n      });\n      cy.step('Input the email order shipped labels');\n      emailSettings.inputEmailLabels('order-shipped');\n      cy.step('Assert that the order number input token is visible');\n      emailSettings.getInputToken().eq(0).contains(/Order Number/gi).should('be.visible');\n      cy.step('Assert that the store name input token is visible');\n      emailSettings.getInputToken().eq(1).contains(/Store Name/gi).should('be.visible');\n      cy.step('Assert that the customer name input token is visible');\n      emailSettings.getInputToken().eq(2).contains(/Customer Name/gi).should('be.visible');\n      cy.step(\"Assert that the tracking number field has 'Tracking #' as its value\");\n      cy.getByDataAutomationId('CommerceMailSettingsForm-copy.orderShipped.trackingNumber-input').should('have.value', 'Tracking #');\n      cy.step(\"Assert that the tracking CTA field has 'Track my shipment' as its value\");\n      cy.getByDataAutomationId('CommerceMailSettingsForm-copy.orderShipped.trackShippingCTA-input').should('have.value', 'Track my shipment');\n      cy.step(\"Assert that the shipping carrier field has 'FedEx' as its value\");\n      cy.getByDataAutomationId('CommerceMailSettingsForm-copy.orderShipped.shippingProvider-input').should('have.value', 'FedEx');\n      cy.step('Assert that the store URL input token is visible');\n      emailSettings.getInputToken().eq(3).contains(/Store URL/gi).should('be.visible');\n      cy.step('Assert that the store name input token is visible');\n      emailSettings.getInputToken().eq(4).contains(/Store Name/gi).last().should('be.visible');\n      cy.step('Assert that the email preview the correct labels');\n      cy.iframeFocus('iframe').then(function ($iframe) {\n        cy.wrap($iframe.find('h1')).first().should('have.text', 'cy-ecom-on-with-store-info');\n        cy.wrap($iframe.find('#greeting')).should('have.text', '{Customer Name}');\n        cy.wrap($iframe.find('#trackingNumber')).should('contain', 'Tracking #');\n        cy.wrap($iframe.find('#shippingProvider')).should('contain', 'FedEx');\n        cy.wrap($iframe.find('#trackShippingCTA')).should('contain', 'Track my shipment');\n        cy.wrap($iframe.find('#fineprint')).should('contain', '{Store URL}');\n        cy.wrap($iframe.find('#fineprintLink')).should('contain', 'cy-ecom-on-with-store-info');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":8372,"startedAt":"2021-01-12T13:45:22.932Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-order-shipped.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-order-shipped.spec.js","absolute":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/custom-fields-order-shipped.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":18009,"startedAt":"2021-01-12T13:45:38.536Z","endedAt":"2021-01-12T13:45:56.545Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:45:38.538Z","end":"2021-01-12T13:45:56.552Z","duration":18014},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Email Settings","Input text into the email design fields","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      workspace.getLeftSidebar().clickSettingsButton().clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12036,"startedAt":"2021-01-12T13:45:43.655Z","screenshots":[]}]},{"title":["Email Settings","Input text into the email design fields","should input text into the email design fields"],"state":"passed","body":"function () {\n      cy.step('Change the email settings accent color and background color');\n      ecom.inputEmailDesignSettings('#e55', 'black');\n      cy.step('Assert that the email settings accent color is #e55');\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', '#e55');\n      cy.step('Assert that the email settings background color is black');\n      cy.get(ecom.emailSettingsBackgroundColor).should('have.value', 'black');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":840,"startedAt":"2021-01-12T13:45:55.704Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/email-design.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/email-design.spec.js","absolute":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/custom-fields/email-design.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":3,"tests":13,"passes":13,"pending":0,"skipped":0,"failures":0,"duration":40973,"startedAt":"2021-01-12T13:46:03.695Z","endedAt":"2021-01-12T13:46:44.668Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":3,"tests":13,"passes":13,"pending":0,"failures":0,"start":"2021-01-12T13:46:03.698Z","end":"2021-01-12T13:46:44.672Z","duration":40974},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      cy.get(ecom.emailSettingsOrderReceivedSection).click();\n      tokenInput = new _cypressAppControls.TokenFieldInput(cy, 'email-subject');\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Email Settings","Open email settings and assert that it shows the correct default text, store name, and support email","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      workspace.getLeftSidebar().clickSettingsButton().clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12755,"startedAt":"2021-01-12T13:46:08.867Z","screenshots":[]}]},{"title":["Email Settings","Open email settings and assert that it shows the correct default text, store name, and support email","should assert that the panel holds the correct default text, store name, and support email"],"state":"passed","body":"function () {\n      cy.step('Assert that the email settings are set to default');\n      ecom.assertDefaultEmailSettingsValues();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1576,"startedAt":"2021-01-12T13:46:21.639Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should allow typing in the shorthand tokens in setting Email subject"],"state":"passed","body":"function () {\n      tokenInput.fill('Some text: {{ Customer Name }}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Some text: '\n      }, {\n        type: 'token',\n        text: 'Customer Name'\n      }]);\n      tokenInput.expectValueToBe(['Some text: ', '{{wf {&quot;path&quot;:&quot;Customer Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n      tokenInput.fill('{backspace}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2924,"startedAt":"2021-01-12T13:46:23.217Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should allow typing in the variable tokens in setting Email subject"],"state":"passed","body":"function () {\n      tokenInput.fill('{{wf {\"path\":\"Customer Name\",\"type\":\"PlainText\"\\\\} }}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.fill('{{wf {&quot;path&quot;:&quot;Customer Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Some text: '\n      }, {\n        type: 'token',\n        text: 'Customer Name'\n      }, {\n        type: 'token',\n        text: 'Customer Name'\n      }]);\n      tokenInput.expectValueToBe(['Some text: ', '{{wf {&quot;path&quot;:&quot;Customer Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;Customer Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n      tokenInput.fill('{backspace}');\n      subjectPreviewHasContent('Some text: {Customer Name}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12607,"startedAt":"2021-01-12T13:46:26.145Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should mark an invalid token"],"state":"passed","body":"function () {\n      tokenInput.fill('{{invalid}}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Some text: '\n      }, {\n        type: 'token',\n        text: 'Customer Name'\n      }, {\n        type: 'invalid',\n        text: '{{invalid}}'\n      }]);\n      tokenInput.expectValueToBe(['Some text: ', '{{wf {&quot;path&quot;:&quot;Customer Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{invalid}}'].join(''));\n      subjectPreviewHasContent('Some text: {Customer Name}{{invalid}}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":772,"startedAt":"2021-01-12T13:46:38.757Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should allow adding external tokens"],"state":"passed","body":"function () {\n      tokenInput.fill('{\\\\{external}}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Some text: '\n      }, {\n        type: 'token',\n        text: 'Customer Name'\n      }, {\n        type: 'invalid',\n        text: '{{invalid}}'\n      }, {\n        type: 'text',\n        text: '{\\\\{external}}'\n      }]);\n      tokenInput.expectValueToBe(['Some text: ', '{{wf {&quot;path&quot;:&quot;Customer Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{invalid}}', '{\\\\{external}}'].join(''));\n      subjectPreviewHasContent('Some text: {Customer Name}{{invalid}}{\\\\{external}}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1855,"startedAt":"2021-01-12T13:46:39.529Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should show correct token options in the dropdown when clicking Add Field"],"state":"passed","body":"function () {\n      addFieldDropdown = tokenInput.clickAddField();\n      addFieldDropdown.expectTokenOptionsToHaveLabels(['Customer Name', 'Store Name', 'Store URL', 'Order Number', 'Store Owner Name']);\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":361,"startedAt":"2021-01-12T13:46:41.390Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should add the variable to the embed when clicking the dropdown option"],"state":"passed","body":"function () {\n      addFieldDropdown.clickTokenOptionThatContains('Store Name');\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Some text: '\n      }, {\n        type: 'token',\n        text: 'Customer Name'\n      }, {\n        type: 'invalid',\n        text: '{{invalid}}'\n      }, {\n        type: 'text',\n        text: '{\\\\{external}}'\n      }, {\n        type: 'token',\n        text: 'Store Name'\n      }]);\n      tokenInput.expectValueToBe(['Some text: ', '{{wf {&quot;path&quot;:&quot;Customer Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{invalid}}', '{\\\\{external}}', '{{wf {&quot;path&quot;:&quot;Store Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n      subjectPreviewHasContent('Some text: {Customer Name}{{invalid}}{\\\\{external}}cy-ecom-on-with-store-info');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":250,"startedAt":"2021-01-12T13:46:41.753Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should delete the first token when deleting it using backspace in the input"],"state":"passed","body":"function () {\n      tokenInput.moveCursorToPosition('Some text: X'.length).fill('{backspace}');\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Some text: '\n      }, {\n        type: 'invalid',\n        text: '{{invalid}}'\n      }, {\n        type: 'text',\n        text: '{\\\\{external}}'\n      }, {\n        type: 'token',\n        text: 'Store Name'\n      }]);\n      tokenInput.expectValueToBe(['Some text: ', '{{invalid}}', '{\\\\{external}}', '{{wf {&quot;path&quot;:&quot;Store Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n      subjectPreviewHasContent('Some text: {{invalid}}{\\\\{external}}cy-ecom-on-with-store-info');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":483,"startedAt":"2021-01-12T13:46:42.004Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should show correct token variables and \"Delete Field\" when clicking a token"],"state":"passed","body":"function () {\n      tokenDropdown = tokenInput.clickTokenWidgetThatContains('Store Name');\n      tokenDropdown.expectTokenOptionsToHaveLabels(['Customer Name', 'Store Name', 'Store URL', 'Order Number', 'Store Owner Name', 'Delete Field']);\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":282,"startedAt":"2021-01-12T13:46:42.488Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should delete the token when clicking \"Delete Field\""],"state":"passed","body":"function () {\n      tokenDropdown.clickTokenOptionThatContains('Delete Field');\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Some text: '\n      }, {\n        type: 'invalid',\n        text: '{{invalid}}'\n      }, {\n        type: 'text',\n        text: '{\\\\{external}}'\n      }]);\n      tokenInput.expectValueToBe('Some text: {{invalid}}{\\\\{external}}');\n      subjectPreviewHasContent('Some text: {{invalid}}{\\\\{external}}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":428,"startedAt":"2021-01-12T13:46:42.770Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should add the token to where the cursor is at"],"state":"passed","body":"function () {\n      tokenInput.moveCursorToPosition('Some '.length);\n      addFieldDropdown = tokenInput.clickAddField();\n      addFieldDropdown.clickTokenOptionThatContains('Customer Name');\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Some '\n      }, {\n        type: 'token',\n        text: 'Customer Name'\n      }, {\n        type: 'text',\n        text: 'text: '\n      }, {\n        type: 'invalid',\n        text: '{{invalid}}'\n      }, {\n        type: 'text',\n        text: '{\\\\{external}}'\n      }]);\n      tokenInput.expectValueToBe(['Some ', '{{wf {&quot;path&quot;:&quot;Customer Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', 'text: ', '{{invalid}}', '{\\\\{external}}'].join(''));\n      subjectPreviewHasContent('Some {Customer Name}text: {{invalid}}{\\\\{external}}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":716,"startedAt":"2021-01-12T13:46:43.199Z","screenshots":[]}]},{"title":["Email Settings","Order received fields using variable tokens","should support replacing a selection with a token"],"state":"passed","body":"function () {\n      tokenInput.selectRange('Some '.length, 'Some Xtext: {'.length);\n      addFieldDropdown = tokenInput.clickAddField();\n      addFieldDropdown.clickTokenOptionThatContains('Store Name');\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Some '\n      }, {\n        type: 'token',\n        text: 'Store Name'\n      }, {\n        type: 'text',\n        text: '{invalid}}{\\\\{external}}'\n      }]);\n      tokenInput.expectValueToBe(['Some ', '{{wf {&quot;path&quot;:&quot;Store Name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{invalid}}{\\\\{external}}'].join(''));\n      subjectPreviewHasContent('Some cy-ecom-on-with-store-info{invalid}}{\\\\{external}}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":750,"startedAt":"2021-01-12T13:46:43.916Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/default-email-settings.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/default-email-settings.spec.js","absolute":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/default-email-settings.spec.js","specType":"integration"},"shouldUploadVideo":false}],"browserPath":"/chromium64/chrome-linux/chrome","browserName":"chromium","browserVersion":"74.0.3729.0","osName":"linux","osVersion":"Debian - 9.13","cypressVersion":"6.2.1","config":{"env":{"baseUrl":"http://wfdev.io:3030","stagingSuperDomain":"dev.webflowtest.io","User-Agent":"cypress","RECORD_KEY":"f9ae3...c4cf9"},"integrationFolder":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow","configFile":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/cypress.json","version":"6.2.1","chromeWebSecurity":false,"browser":"chromium","video":false,"videoUploadOnPasses":false,"viewportWidth":1440,"viewportHeight":900,"defaultCommandTimeout":30000,"numTestsKeptInMemory":0,"ignoreTestFiles":"*.quarantined.spec.js","testFiles":"**/*.spec.js","fileServerFolder":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config","fixturesFolder":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/fixtures","pluginsFile":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/plugins/index.js","screenshotsFolder":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/screenshots","supportFile":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/support/index.js","videosFolder":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/videos","retries":{"runMode":2,"openMode":0},"projectId":"xfhtj7","reporter":"../../../node_modules/cypress-multi-reporters","reporterOptions":{"configFile":"reporter-config.json"},"projectRoot":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config","projectName":"cypress-config","morgan":false,"isTextTerminal":true,"socketId":"qzdiq","report":true,"browsers":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"animationDistanceThreshold":5,"autoOpen":false,"baseUrl":null,"blockHosts":null,"clientRoute":"/__/","componentFolder":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/cypress/component","execTimeout":60000,"experimentalComponentTesting":false,"experimentalFetchPolyfill":false,"experimentalRunEvents":false,"experimentalSourceRewriting":false,"firefoxGcInterval":{"runMode":1,"openMode":null},"hosts":null,"includeShadowDom":false,"javascripts":[],"modifyObstructiveCode":true,"namespace":"__cypress","nodeVersion":"default","pageLoadTimeout":60000,"port":33875,"reporterRoute":"/__cypress/reporter","requestTimeout":5000,"responseTimeout":30000,"screenshotOnRunFailure":true,"socketIoRoute":"/__socket.io","socketIoCookie":"__socket.io","taskTimeout":60000,"trashAssetsBeforeRuns":true,"userAgent":null,"videoCompression":32,"waitForAnimations":true,"scrollBehavior":"top","watchForFileChanges":false,"xhrRoute":"/xhrs/","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"baseUrl":{"value":null,"from":"default"},"blockHosts":{"value":null,"from":"default"},"browsers":{"value":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"from":"default"},"chromeWebSecurity":{"value":false,"from":"config"},"componentFolder":{"value":"cypress/component","from":"default"},"defaultCommandTimeout":{"value":30000,"from":"config"},"env":{"baseUrl":{"value":"http://wfdev.io:3030","from":"plugin"},"User-Agent":{"value":"cypress","from":"config"},"RECORD_KEY":{"value":"f9ae3...c4cf9","from":"env"},"stagingSuperDomain":{"value":"dev.webflowtest.io","from":"plugin"}},"execTimeout":{"value":60000,"from":"default"},"experimentalComponentTesting":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalRunEvents":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"fileServerFolder":{"value":"./","from":"config"},"firefoxGcInterval":{"value":{"runMode":1,"openMode":null},"from":"default"},"fixturesFolder":{"value":"./fixtures","from":"config"},"hosts":{"value":null,"from":"default"},"ignoreTestFiles":{"value":"*.quarantined.spec.js","from":"config"},"includeShadowDom":{"value":false,"from":"default"},"integrationFolder":{"value":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow","from":"plugin"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"value":"default","from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"pageLoadTimeout":{"value":60000,"from":"default"},"pluginsFile":{"value":"./plugins/index.js","from":"config"},"port":{"value":null,"from":"default"},"projectId":{"value":"xfhtj7","from":"config"},"reporter":{"value":"../../../node_modules/cypress-multi-reporters","from":"cli"},"reporterOptions":{"value":{"configFile":"reporter-config.json"},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":2,"openMode":0},"from":"config"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"./screenshots","from":"config"},"supportFile":{"value":"./support/index.js","from":"config"},"taskTimeout":{"value":60000,"from":"default"},"testFiles":{"value":"**/*.spec.js","from":"config"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"config"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"./videos","from":"config"},"videoUploadOnPasses":{"value":false,"from":"config"},"viewportHeight":{"value":900,"from":"config"},"viewportWidth":{"value":1440,"from":"config"},"waitForAnimations":{"value":true,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"configFile":{"value":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/cypress.json","from":"plugin"},"version":{"value":"6.2.1","from":"plugin"}},"parentTestsFolder":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/cypress","parentTestsFolderDisplay":"cypress-config/cypress","supportFolder":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/support","integrationExampleName":"examples","integrationExamplePath":"/scratch/buildkite-agent-c4973b9f-54da-11eb-97fa-4a22e55b2d68-ccx6d/webflow/webflow/packages/tooling/cypress-config/cypress/integration/examples","scaffoldedFiles":[{"name":"cypress","children":[{"name":"integration","children":[{"name":"examples","children":[{"name":"actions.spec.js"},{"name":"aliasing.spec.js"},{"name":"assertions.spec.js"},{"name":"connectors.spec.js"},{"name":"cookies.spec.js"},{"name":"cypress_api.spec.js"},{"name":"files.spec.js"},{"name":"local_storage.spec.js"},{"name":"location.spec.js"},{"name":"misc.spec.js"},{"name":"navigation.spec.js"},{"name":"network_requests.spec.js"},{"name":"querying.spec.js"},{"name":"spies_stubs_clocks.spec.js"},{"name":"traversal.spec.js"},{"name":"utilities.spec.js"},{"name":"viewport.spec.js"},{"name":"waiting.spec.js"},{"name":"window.spec.js"}]}]}]},{"name":"fixtures","children":[{"name":"example.json"}]},{"name":"support","children":[{"name":"commands.js"},{"name":"index.js"}]},{"name":"plugins","children":[{"name":"index.js"}]}],"resolvedNodeVersion":"12.18.3","state":{},"proxyUrl":"http://localhost:33875","browserUrl":"http://localhost:33875/__/","reporterUrl":"http://localhost:33875/__cypress/reporter","xhrUrl":"__cypress/xhrs/"},"status":"finished"}]