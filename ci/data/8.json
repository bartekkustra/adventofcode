[{"startedTestsAt":"2021-01-12T13:40:36.779Z","endedTestsAt":"2021-01-12T13:46:36.869Z","totalDuration":298879,"totalSuites":18,"totalTests":56,"totalFailed":0,"totalPassed":56,"totalPending":0,"totalSkipped":0,"runs":[{"stats":{"suites":4,"tests":17,"passes":17,"pending":0,"skipped":0,"failures":0,"duration":67779,"startedAt":"2021-01-12T13:40:36.779Z","endedAt":"2021-01-12T13:41:44.558Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":4,"tests":17,"passes":17,"pending":0,"failures":0,"start":"2021-01-12T13:40:36.782Z","end":"2021-01-12T13:41:44.574Z","duration":67792},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      _cypressAppControls.api.upgradePlan();\n\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsCSVSmoke);\n      sidebar = workspace.getLeftSidebar();\n      cmsTab = sidebar.clickCMSButton();\n      cmsTab.getCollectionByName('Pokemons').clickCollectionTab();\n      cy.get('[data-automation-id=\"cms-collection-import-button\"]').click();\n      cy.get('.bem-FileDropZone').dropFile('./cms/pokemon.csv');\n      cy.get('.bem-Button-primary').click();\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      _cypressAppControls.api.upgradePlan();\n\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsCSVSmoke);\n      sidebar = workspace.getLeftSidebar();\n      cmsTab = sidebar.clickCMSButton();\n      cmsTab.getCollectionByName('Pokemons').clickCollectionTab();\n      cy.get('[data-automation-id=\"cms-collection-import-button\"]').click();\n      cy.get('.bem-FileDropZone').dropFile('./cms/pokemon.csv');\n      cy.get('.bem-Button-primary').click();\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      _cypressAppControls.api.upgradePlan();\n\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsCSVSmoke);\n      sidebar = workspace.getLeftSidebar();\n      cmsTab = sidebar.clickCMSButton();\n      collectionSettings = cmsTab.getCollectionByName('Pokemons').clickSettingsButton();\n      collectionSettings.clickCustomField('traits');\n      cy.getByDataAutomationId('CollectionFieldForm-cms-required-checkbox-field-checkbox').click();\n      cy.getByDataAutomationId('cms-save-field-button').click();\n      collectionSettings.clickSaveCollectionButton();\n      cy.get('[data-automation-id=\"cms-collection-import-button\"]').click();\n      cy.get('.bem-FileDropZone').dropFile('./cms/pokemon.csv');\n      cy.get('.bem-Button-primary').click();\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CSV reference support","Mapping to existing reference fields","can map a column to an existing ItemRef field"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('csv-column-Trainer').within(function () {\n        mapToExistingRefField('Trainer', 'pokemon-trainer');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14044,"startedAt":"2021-01-12T13:40:42.536Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to existing reference fields","shows items in the preview if they exist in the ItemRef collection"],"state":"passed","body":"function () {\n      cy.step('check first row in preview');\n      cy.getByDataAutomationId('CSVItemPreviewForm-pokemon-trainer-trigger').should('contain', 'Ash');\n      cy.step('go to third row');\n      cy.getByDataAutomationId('csv-import-item-dropdown').click();\n      cy.getByDataAutomationId('csv-item-label-Squirtle').click();\n      cy.step('check third row in preview');\n      cy.getByDataAutomationId('CSVItemPreviewForm-pokemon-trainer-trigger').should('contain', 'Brock');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":399,"startedAt":"2021-01-12T13:40:56.592Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to existing reference fields","shows a warning if items do not exist"],"state":"passed","body":"function () {\n      cy.step('go to the second row');\n      cy.getByDataAutomationId('csv-import-item-dropdown').click();\n      cy.getByDataAutomationId('csv-item-label-Charmander').click();\n      nonExistingRefItems('Misty', 'CSVItemPreviewForm-pokemon-trainer-trigger', 'missing-ItemRef-note-Trainers');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":632,"startedAt":"2021-01-12T13:40:56.992Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to existing reference fields","can map a column to an existing ItemRefSet field"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('csv-column-Personality Traits').within(function () {\n        mapToExistingRefField('Personality Traits', 'traits');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":701,"startedAt":"2021-01-12T13:40:57.626Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to existing reference fields","only shows items in the preview if they exist in the ItemRefSet collection"],"state":"passed","body":"function () {\n      cy.step('go to the first row');\n      cy.getByDataAutomationId('csv-import-previous-item').click();\n      cy.step('the item funny should be in the preview input');\n      cy.getByDataAutomationId('CSVItemPreviewForm-traits').should('contain', 'funny');\n      cy.step('go to third row');\n      cy.getByDataAutomationId('csv-import-item-dropdown').click();\n      cy.getByDataAutomationId('csv-item-label-Squirtle').click();\n      cy.step('the item kind should be in the preview input');\n      cy.getByDataAutomationId('CSVItemPreviewForm-traits').should('contain', 'kind');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":912,"startedAt":"2021-01-12T13:40:58.328Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to existing reference fields","shows a warning if items do not exist"],"state":"passed","body":"function () {\n      nonExistingRefItems('mischevious', 'CSVItemPreviewForm-traits', 'missing-ItemRefSet-note-Personality Traits');\n      cy.step('go to the second row');\n      cy.getByDataAutomationId('csv-import-previous-item').click();\n      nonExistingRefItems('bold', 'CSVItemPreviewForm-traits', 'missing-ItemRefSet-note-Personality Traits');\n      nonExistingRefItems('stubborn', 'CSVItemPreviewForm-traits', 'missing-ItemRefSet-note-Personality Traits');\n      cy.step('go to the first row');\n      cy.getByDataAutomationId('csv-import-previous-item').click();\n      nonExistingRefItems('sarcastic', 'CSVItemPreviewForm-traits', 'missing-ItemRefSet-note-Personality Traits');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":612,"startedAt":"2021-01-12T13:40:59.241Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to existing reference fields","can upload CSV items with references"],"state":"passed","body":"function () {\n      importCSVWithThreeItems();\n      cy.step('check the references in the first item, Squirtle');\n      cy.getByDataAutomationId('cms-item-row').contains('Squirtle').click();\n      cy.get('.bem-TagSelect_Wrapper').should('contain', 'kind');\n      cy.getByDataAutomationId('dyn-item-pokemon-trainer-trigger').should('contain', 'Brock');\n      cy.step('there should be no references in the second item, Charmander');\n      cy.getByDataAutomationId('cms-item-row').contains('Charmander').click();\n      cy.getByDataAutomationId('search-field').children('select').should('have.attr', 'placeholder', 'Pick Personality Traits...');\n      cy.getByDataAutomationId('dyn-item-pokemon-trainer-trigger').should('contain', 'Pick a Trainer...');\n      cy.step('check the references in the third item, Pikachu');\n      cy.getByDataAutomationId('cms-item-row').contains('Pikachu').click();\n      cy.get('.bem-TagSelect_Wrapper').should('contain', 'funny');\n      cy.getByDataAutomationId('dyn-item-pokemon-trainer-trigger').should('contain', 'Ash');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2594,"startedAt":"2021-01-12T13:40:59.855Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to new reference fields","disables the import button if mapped to a new ItemRef field, but not linked to a collection"],"state":"passed","body":"function () {\n      cy.step(\"map the column Trainer to a new ItemRef field\");\n      cy.getByDataAutomationId('csv-column-Trainer').within(function () {\n        cy.getByDataAutomationId('CollectionFieldForm-action-trigger').click();\n        cy.getByDataAutomationId('CollectionFieldForm-action-option-new').click();\n        cy.getByDataAutomationId('CollectionFieldForm-linkedField.type-trigger').click();\n        cy.getByDataAutomationId(\"CollectionFieldForm-linkedField.type-option-ItemRef\").click();\n      });\n      cy.step('the import button should be disabled');\n      cy.getByDataAutomationId('csv-import-button').should('have.class', 'bem-Button-disabled');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12219,"startedAt":"2021-01-12T13:41:02.451Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to new reference fields","disables the import button if mapped to a new ItemRefSet field, but not linked to a collection"],"state":"passed","body":"function () {\n      cy.step(\"map the column Trainer to a new ItemRefSet field\");\n      cy.getByDataAutomationId('csv-column-Trainer').within(function () {\n        cy.getByDataAutomationId('CollectionFieldForm-action-trigger').click();\n        cy.getByDataAutomationId('CollectionFieldForm-action-option-new').click();\n        cy.getByDataAutomationId('CollectionFieldForm-linkedField.type-trigger').click();\n        cy.getByDataAutomationId(\"CollectionFieldForm-linkedField.type-option-ItemRefSet\").click();\n      });\n      cy.step('the import button should be disabled');\n      cy.getByDataAutomationId('csv-import-button').should('have.class', 'bem-Button-disabled');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1039,"startedAt":"2021-01-12T13:41:14.686Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to new reference fields","can map a column to a new ItemRef field and select a collection"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('csv-column-Trainer').within(function () {\n        mapToNewRefField('Trainer', 'Trainer of the pokemon', 'Trainers', 'ItemRef');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":5350,"startedAt":"2021-01-12T13:41:15.727Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to new reference fields","shows items in the preview if they exist in the ItemRef collection"],"state":"passed","body":"function () {\n      cy.step('check first row in preview');\n      cy.getByDataAutomationId('CSVItemPreviewForm-$trainer-trigger').should('contain', 'Ash');\n      cy.step('go to third row');\n      cy.getByDataAutomationId('csv-import-item-dropdown').click();\n      cy.getByDataAutomationId('csv-item-label-Squirtle').click();\n      cy.step('check third row in preview');\n      cy.getByDataAutomationId('CSVItemPreviewForm-$trainer-trigger').should('contain', 'Brock');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":439,"startedAt":"2021-01-12T13:41:21.082Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to new reference fields","shows a warning if items do not exist"],"state":"passed","body":"function () {\n      cy.step('go to the second row');\n      cy.getByDataAutomationId('csv-import-item-dropdown').click();\n      cy.getByDataAutomationId('csv-item-label-Charmander').click();\n      nonExistingRefItems('Misty', 'CSVItemPreviewForm-$trainer-trigger', 'missing-ItemRef-note-Trainers');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":369,"startedAt":"2021-01-12T13:41:21.523Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to new reference fields","can map a column to a a new ItemRefSet field and select a collection"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('csv-column-Personality Traits').within(function () {\n        mapToNewRefField('Personality Traits', 'Characteristics', 'Personality Traits', 'ItemRefSet');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2737,"startedAt":"2021-01-12T13:41:21.893Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to new reference fields","shows items in the preview if they exist in the ItemRefSet collection"],"state":"passed","body":"function () {\n      cy.step('go to the first row');\n      cy.getByDataAutomationId('csv-import-previous-item').click();\n      cy.step('the item funny should be in the preview input');\n      cy.getByDataAutomationId('CSVItemPreviewForm-$personality-traits').should('contain', 'funny');\n      cy.step('go to third row');\n      cy.getByDataAutomationId('csv-import-item-dropdown').click();\n      cy.getByDataAutomationId('csv-item-label-Squirtle').click();\n      cy.step('the item kind should be in the preview input');\n      cy.getByDataAutomationId('CSVItemPreviewForm-$personality-traits').should('contain', 'kind');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":516,"startedAt":"2021-01-12T13:41:24.634Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to new reference fields","shows a warning if items do not exist"],"state":"passed","body":"function () {\n      nonExistingRefItems('mischevious', 'CSVItemPreviewForm-$personality-traits', 'missing-ItemRefSet-note-Personality Traits');\n      cy.step('go to the second row');\n      cy.getByDataAutomationId('csv-import-previous-item').click();\n      nonExistingRefItems('bold', 'CSVItemPreviewForm-$personality-traits', 'missing-ItemRefSet-note-Personality Traits');\n      nonExistingRefItems('stubborn', 'CSVItemPreviewForm-$personality-traits', 'missing-ItemRefSet-note-Personality Traits');\n      cy.step('go to the first row');\n      cy.getByDataAutomationId('csv-import-previous-item').click();\n      nonExistingRefItems('sarcastic', 'CSVItemPreviewForm-$personality-traits', 'missing-ItemRefSet-note-Personality Traits');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":452,"startedAt":"2021-01-12T13:41:25.152Z","screenshots":[]}]},{"title":["CSV reference support","Mapping to new reference fields","can upload CSV items with references in the new fields"],"state":"passed","body":"function () {\n      importCSVWithThreeItems();\n      cy.step('check the references in the first item, Squirtle');\n      cy.getByDataAutomationId('cms-item-row').contains('Squirtle').click();\n      cy.get('.bem-TagSelect_Wrapper').eq(1).should('contain', 'kind');\n      cy.getByDataAutomationId('dyn-item-trainer-of-the-pokemon-trigger').should('contain', 'Brock');\n      cy.step('there should be no references in the second item, Charmander');\n      cy.getByDataAutomationId('cms-item-row').contains('Charmander').click();\n      cy.getByDataAutomationId('search-field').eq(1).children('select').should('have.attr', 'placeholder', 'Pick Personality Traits...');\n      cy.getByDataAutomationId('dyn-item-trainer-of-the-pokemon-trigger').should('contain', 'Pick a Trainer...');\n      cy.step('check the references in the third item, Pikachu');\n      cy.getByDataAutomationId('cms-item-row').contains('Pikachu').click();\n      cy.get('.bem-TagSelect_Wrapper').eq(1).should('contain', 'funny');\n      cy.getByDataAutomationId('dyn-item-trainer-of-the-pokemon-trigger').should('contain', 'Ash');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2617,"startedAt":"2021-01-12T13:41:25.605Z","screenshots":[]}]},{"title":["CSV reference support","Required fields with missing references","Uploads the item with missing references as a draft"],"state":"passed","body":"function () {\n      cy.getByDataAutomationId('csv-column-Trainer').within(function () {\n        mapToExistingRefField('Trainer', 'pokemon-trainer');\n      });\n      cy.getByDataAutomationId('csv-column-Personality Traits').within(function () {\n        mapToExistingRefField('Personality Traits', 'traits');\n      });\n      cy.step('go to the second row');\n      cy.getByDataAutomationId('csv-import-next-item').click();\n      cy.step('check for hasNotice class which displays the required field warning');\n      cy.getByDataAutomationId('CSVItemPreviewForm-traits').within(function () {\n        cy.getByDataAutomationId('search-field').should('have.class', 'hasNotice');\n      });\n      cy.step('check for the item draft warning');\n      cy.getByDataAutomationId('csv-preview-item-draft-warning').should('exist');\n      importCSVWithThreeItems();\n      cy.step('the first item, Squirtle should be staged for publish');\n      cy.getByDataAutomationId('cms-item-row').contains('Squirtle').parent().parent().should('contain', 'Staged for Publish');\n      cy.step('the second item, Charmander should be a draft');\n      cy.getByDataAutomationId('cms-item-row').contains('Charmander').parent().parent().should('contain', 'Draft');\n      cy.step('the third item, Pikachu should be staged for publish');\n      cy.getByDataAutomationId('cms-item-row').contains('Pikachu').parent().parent().should('contain', 'Staged for Publish');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":16312,"startedAt":"2021-01-12T13:41:28.224Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-smoke-csv-reference-support.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-smoke-csv-reference-support.spec.js","absolute":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-smoke-csv-reference-support.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":9,"passes":9,"pending":0,"skipped":0,"failures":0,"duration":22718,"startedAt":"2021-01-12T13:41:52.400Z","endedAt":"2021-01-12T13:42:15.118Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":9,"passes":9,"pending":0,"failures":0,"start":"2021-01-12T13:41:52.402Z","end":"2021-01-12T13:42:15.121Z","duration":22719},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsCSVSmoke);\n    sidebar = workspace.getLeftSidebar();\n    cmsTab = sidebar.clickCMSButton();\n    cmsTab.getCollectionByName('Pokemons').clickCollectionTab();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CSV upload","can load a csv and show the CSV import settings pane"],"state":"passed","body":"function () {\n    cy.step('Drag and drop the CSV');\n    cy.get('[data-automation-id=\"cms-collection-import-button\"]').click();\n    cy.get('.bem-FileDropZone').dropFile('./cms/pokemon.csv');\n    cy.step('Click continue');\n    cy.get('.bem-Button-primary').click();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13591,"startedAt":"2021-01-12T13:41:57.331Z","screenshots":[]}]},{"title":["CSV upload","Automatically maps columns to fields where the names match and the types are appropriate"],"state":"passed","body":"function () {\n    assertFieldIsAutomapped('namE', 'Name');\n    assertFieldIsAutomapped('DESCRIPTION', 'description');\n    assertFieldIsAutomapped('More info', 'more info');\n    assertFieldIsAutomapped('email', 'email');\n    assertFieldIsAutomapped('birthday', 'birthday');\n    assertFieldIsAutomapped('Color', 'color');\n    assertFieldIsAutomapped('Type', 'type');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":233,"startedAt":"2021-01-12T13:42:10.940Z","screenshots":[]}]},{"title":["CSV upload","Does not automatically map columns to fields where the names do not match or the types are not appropriate"],"state":"passed","body":"function () {\n    var noFieldName = 'there is no field of that name';\n    var typeMismatch = 'the column has the wrong type for this field';\n    assertFieldIsNotMapped('pic', noFieldName);\n    assertFieldIsNotMapped('video', typeMismatch);\n    assertFieldIsNotMapped('telephone number', noFieldName);\n    assertFieldIsNotMapped('serial number', typeMismatch);\n    assertFieldIsNotMapped('original pokemon', noFieldName);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":153,"startedAt":"2021-01-12T13:42:11.178Z","screenshots":[]}]},{"title":["CSV upload","Can manually map a column to an existing field"],"state":"passed","body":"function () {\n    cy.getByDataAutomationId(\"csv-column-original pokemon\").within(function () {\n      cy.getByDataAutomationId('CollectionFieldForm-action-trigger').click();\n      cy.getByDataAutomationId('CollectionFieldForm-action-option-map').click();\n      cy.getByDataAutomationId('CollectionFieldForm-linkedField.slug-trigger').click();\n      cy.getByDataAutomationId('CollectionFieldForm-linkedField.slug-option-original-151').should('not.have.attr', 'disabled');\n      cy.getByDataAutomationId('CollectionFieldForm-linkedField.slug-option-original-151').click();\n    });\n    cy.step('Make sure switch value mapper appears');\n    cy.getByDataAutomationId(\"csv-column-original pokemon\").contains('Specify mapping values');\n    cy.step('the switch in the preview should be checked because the value for this item is Yes');\n    cy.getByDataAutomationId('CSVItemPreviewForm-original-151-input-outer').within(function () {\n      cy.get('input').should('have.attr', 'checked');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":763,"startedAt":"2021-01-12T13:42:11.332Z","screenshots":[]}]},{"title":["CSV upload","Can unmap a column"],"state":"passed","body":"function () {\n    cy.getByDataAutomationId('csv-column-Color').within(function () {\n      cy.getByDataAutomationId('CollectionFieldForm-action-trigger').click();\n      cy.getByDataAutomationId('CollectionFieldForm-action-option-none').click();\n      cy.getByDataAutomationId('CollectionFieldForm-linkedField.slug-trigger').should('not.exist');\n    });\n    cy.step('since the color field is unmapped, it should have no value in the preview pane');\n    cy.getByDataAutomationId('csv-preview-pane').within(function () {\n      cy.getByDataAutomationId('CSVItemPreviewForm-color-input').should('be.empty');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":481,"startedAt":"2021-01-12T13:42:12.097Z","screenshots":[]}]},{"title":["CSV upload","Can map a column to a new field"],"state":"passed","body":"function () {\n    cy.getByDataAutomationId(\"csv-column-Ash's first Pokemon\").within(function () {\n      cy.getByDataAutomationId('CollectionFieldForm-action-trigger').click();\n      cy.getByDataAutomationId('CollectionFieldForm-action-option-new').click();\n      cy.getByDataAutomationId('CollectionFieldForm-linkedField.type-trigger').click();\n      cy.getByDataAutomationId('CollectionFieldForm-linkedField.type-option-Bool').click();\n    });\n    cy.step('the switch in the preview should be checked because the value for this item is Yes');\n    cy.getByDataAutomationId('CSVItemPreviewForm-$ashs-first-pokemon-input-outer').within(function () {\n      cy.get('input').should('have.attr', 'checked');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":863,"startedAt":"2021-01-12T13:42:12.579Z","screenshots":[]}]},{"title":["CSV upload","can select the next item to preview"],"state":"passed","body":"function () {\n    cy.step('Go to the next item');\n    cy.getByDataAutomationId('csv-import-next-item').click();\n    cy.step('Make sure it actually went to the next item');\n    cy.getByDataAutomationId('csv-column-namE').within(function () {\n      cy.getByDataAutomationId('CollectionFieldForm-data-input').should('have.value', 'Charmander');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":308,"startedAt":"2021-01-12T13:42:13.444Z","screenshots":[]}]},{"title":["CSV upload","can select any item from the item dropdown"],"state":"passed","body":"function () {\n    cy.getByDataAutomationId('csv-import-item-dropdown').click();\n    cy.step('click on Squirtle in the dropdown');\n    cy.getByDataAutomationId('csv-item-label-Squirtle').click();\n    cy.step('make sure the Squirtle item appears');\n    cy.getByDataAutomationId('csv-column-namE').within(function () {\n      cy.getByDataAutomationId('CollectionFieldForm-data-input').should('have.value', 'Squirtle');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":415,"startedAt":"2021-01-12T13:42:13.754Z","screenshots":[]}]},{"title":["CSV upload","Can import a CSV"],"state":"passed","body":"function () {\n    cy.server();\n    cy.route('POST', '**/api/v1/collections/*/items?img_upload=true&skip_invalid_files=true').as('add-item');\n    cy.step('Click import');\n    cy.getByDataAutomationId('csv-import-button').click();\n    cy.step('3 requests to add the 3 items');\n    cy.wait('@add-item').then(function (xhr) {\n      expect(xhr.status).to.equal(201);\n    });\n    cy.wait('@add-item').then(function (xhr) {\n      expect(xhr.status).to.equal(201);\n    });\n    cy.wait('@add-item').then(function (xhr) {\n      expect(xhr.status).to.equal(201);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":947,"startedAt":"2021-01-12T13:42:14.170Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-smoke-csv-upload.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-smoke-csv-upload.spec.js","absolute":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-smoke-csv-upload.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":4,"passes":4,"pending":0,"skipped":0,"failures":0,"duration":36065,"startedAt":"2021-01-12T13:42:23.156Z","endedAt":"2021-01-12T13:42:59.221Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":4,"passes":4,"pending":0,"failures":0,"start":"2021-01-12T13:42:23.161Z","end":"2021-01-12T13:42:59.231Z","duration":36070},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n    canvas = workspace.getCanvas();\n    workspace.getLeftSidebar().clickPagesTab().switchPage('Cars Template');\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    waitUntilNotificationsHaveCleared().then(function () {\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper'); // wait until canvas is empty\n\n      return cy.get('#site-iframe-next').should(function (iframe) {\n        expect(iframe.contents().find('.w-dyn-items').length).to.eq(1);\n      }).then(function () {\n        sourceSettings = workspace.getRightPanel().clickPropertiesTab().collectionListSettings.createSourceSettings();\n        return cy.get('[data-automation-id=\"close-mini-settings-button\"]').click().then(function () {\n          sourceSettings.selectOptionWithLabel('Cars');\n        });\n      });\n    });\n  }"},{"hookName":"after each","title":["\"after each\" hook"],"body":"function () {\n    canvas.selectElement('.w-dyn-items').then(function () {\n      return cy.get('body').type('{backspace}');\n    });\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS Smoke Test - Nested Collection List elements","should be able to nest Collection List elements"],"state":"passed","body":"function () {\n    canvas.selectElement('.w-dyn-item').then(function () {\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper');\n    }); // there should be two collection lists nodes now\n    // which translates to 6 instances of collection list HTML elements\n\n    cy.get('#site-iframe-next').should(function (iframe) {\n      expect(iframe.contents().find('.w-dyn-items').length).to.eq(1 + 5);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":15615,"startedAt":"2021-01-12T13:42:28.384Z","screenshots":[]}]},{"title":["CMS Smoke Test - Nested Collection List elements","should not be able to nest Collection List inside a Multi-image list"],"state":"passed","body":"function () {\n    sourceSettings.selectOptionWithLabel('Gallery');\n    canvas.selectElement('.w-dyn-item').then(function () {\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper');\n    });\n    shouldShowNotification(MIF_COLLECTION_LIST_NESTING_ERROR); // there is still only one Collection List on canvas\n\n    cy.get('#site-iframe-next').should(function (iframe) {\n      expect(iframe.contents().find('.w-dyn-items').length).to.eq(1);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2516,"startedAt":"2021-01-12T13:42:44.021Z","screenshots":[]}]},{"title":["CMS Smoke Test - Nested Collection List elements","should not be able to connect collection list to multi-image field if it has a nested list"],"state":"passed","body":"function () {\n    sourceSettings.hasOptionWithLabel('Gallery');\n    canvas.selectElement('.w-dyn-item').then(function () {\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper');\n    });\n    cy.get('#site-iframe-next').should(function (iframe) {\n      expect(iframe.contents().find('.w-dyn-items').length).to.eq(1 + 5);\n    });\n    canvas.selectElement('.w-dyn-items').then(function () {\n      return sourceSettings.hasNoOptionWithLabel('Gallery');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9406,"startedAt":"2021-01-12T13:42:46.539Z","screenshots":[]}]},{"title":["CMS Smoke Test - Nested Collection List elements","should not be able add more than one nested list to a single page"],"state":"passed","body":"function () {\n    canvas.selectElement('.w-dyn-item').then(function () {\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper');\n    });\n    cy.get('#site-iframe-next').should(function (iframe) {\n      expect(iframe.contents().find('.w-dyn-items').length).to.eq(1 + 5);\n    });\n    canvas.selectElement('.w-dyn-item').then(function () {\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper');\n    });\n    cy.get('#site-iframe-next').should(function (iframe) {\n      expect(iframe.contents().find('.w-dyn-items').length).to.eq(1 + 5);\n    });\n    shouldShowNotification(NESTED_LIST_LIMIT_ERROR);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3263,"startedAt":"2021-01-12T13:42:55.957Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-smoke-nested-collection-list.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-smoke-nested-collection-list.spec.js","absolute":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-smoke-nested-collection-list.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":23063,"startedAt":"2021-01-12T13:43:06.607Z","endedAt":"2021-01-12T13:43:29.670Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:43:06.611Z","end":"2021-01-12T13:43:29.674Z","duration":23063},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["query generation with overrides on page","should render overrides on dynamic pages"],"state":"passed","body":"function () {\n    cy.step('Import Snapshot, Verify User & Upgrade Plan');\n\n    var workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsAndOverrides);\n\n    _cypressAppControls.api.verifyUser();\n\n    _cypressAppControls.api.upgradePlan();\n\n    cy.step('Publish the site using CMS & Overrides');\n    workspace.getTopbar().clickPublishButton().clickPublishSelectedDomainsButton().waitUntilDonePublishing().then(function (href) {\n      cy.step('Test a page using the Collection List & an override');\n      cy.forceVisit(href);\n      cy.contains('Content').should('be.visible');\n      cy.contains('Distinctio Consequatur').should('be.visible');\n      cy.step('Test a detail page using the Collection List & an override');\n      cy.forceVisit(\"\".concat(href, \"my-collection/distinctio-consequatur\"));\n      cy.contains('Content').should('be.visible');\n      cy.contains('Distinctio Consequatur').should('be.visible');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":17545,"startedAt":"2021-01-12T13:43:12.123Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-symbol-overrides.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-symbol-overrides.spec.js","absolute":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-symbol-overrides.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":20158,"startedAt":"2021-01-12T13:43:37.045Z","endedAt":"2021-01-12T13:43:57.203Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:43:37.050Z","end":"2021-01-12T13:43:57.243Z","duration":20193},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    collectionPane = _cypressAppControls.api.upgradePlan().importSnapshot(_cypressAppControls.snapshots.CMS.csvDateParsing).getLeftSidebar().clickCMSButton().getCollectionByName('Things').clickCollectionTab();\n    collectionPane.uploadCsvToImport('./cms/dates.csv');\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CSV import date parsing","parses the Date fields (without time picker) correctly"],"state":"passed","body":"function () {\n    cy.step('Verify Date parsing');\n    cy.getByDataAutomationId('csv-preview-pane').within(function () {\n      cy.getByDataAutomationId('CSVItemPreviewForm-date-1-input').should('have.value', '11/16/2020');\n      cy.getByDataAutomationId('CSVItemPreviewForm-date-2-input').should('have.value', '11/16/2020');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13235,"startedAt":"2021-01-12T13:43:42.275Z","screenshots":[]}]},{"title":["CSV import date parsing","parses the DateTime fields (with time picker) correctly"],"state":"passed","body":"function () {\n    cy.step('Verify DateTime parsing');\n    cy.getByDataAutomationId('csv-preview-pane').within(function () {\n      cy.getByDataAutomationId('CSVItemPreviewForm-datetime-1-input').should('have.value', '11/16/2020 11:59 PM');\n      cy.getByDataAutomationId('CSVItemPreviewForm-datetime-2-input').should('have.value', '11/17/2020 09:59 AM');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":77,"startedAt":"2021-01-12T13:43:55.525Z","screenshots":[]}]},{"title":["CSV import date parsing","saves the new item with the correct date values"],"state":"passed","body":"function () {\n    cy.step('Import the CMS item');\n    cy.server();\n    cy.route('POST', '**/api/v1/collections/*/items?img_upload=true&skip_invalid_files=true').as('add-item');\n    cy.step('Click import');\n    cy.getByDataAutomationId('csv-import-button').click();\n    cy.wait('@add-item');\n    cy.step('Close the CSV import modal');\n    cy.contains('Close').click();\n    cy.step('Open the imported CMS item');\n    var itemEditPane = collectionPane.clickCollectionItem('Thing 1');\n    cy.step('Verify Date and DateTime fields have correct values');\n    itemEditPane.getField('Date 1').input.should('have.value', '11/16/2020');\n    itemEditPane.getField('Date 2').input.should('have.value', '11/16/2020');\n    itemEditPane.getField('DateTime 1').input.should('have.value', '11/16/2020 11:59 PM');\n    itemEditPane.getField('DateTime 2').input.should('have.value', '11/17/2020 09:59 AM');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1598,"startedAt":"2021-01-12T13:43:55.604Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/csv-date-parsing.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/csv-date-parsing.spec.js","absolute":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/entrypoints/designer/client/ui-tests/cms/csv-date-parsing.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":4,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":22198,"startedAt":"2021-01-12T13:44:04.585Z","endedAt":"2021-01-12T13:44:26.783Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":4,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:44:04.587Z","end":"2021-01-12T13:44:26.798Z","duration":22211},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.emptyCollectionForDummyItems);\n    sidebar = workspace.getLeftSidebar();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      cy.step('Click to open the CMS collection item form');\n      dataPage = sidebar.clickCMSButton().getCollectionByName('Dummy-Items').clickCollectionTab().clickNewButton();\n    }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n      cy.step('Close all the UI panels');\n      workspace.escapeAllUiPanels();\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      dataPage = sidebar.clickCMSButton().getCollectionByName('Dummy-Items').getDataPage().clickNewButton();\n      cy.step('Input information to the CMS item');\n      dataPage.fill({\n        name: 'A'\n      });\n    }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n      cy.step('Close all the UI panels');\n      workspace.escapeAllUiPanels();\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      dataPage = sidebar.clickCMSButton().getCollectionByName('Dummy-Items').getDataPage().clickNewButton();\n      cy.step('Input information to the CMS item');\n      dataPage.fill({\n        name: '$%^&!'\n      });\n    }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n      cy.step('Close all the UI panels');\n      workspace.escapeAllUiPanels();\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS:","S1: Cancel CMS Collection Item Creation (no information added)","can click the cancel button"],"state":"passed","body":"function () {\n      cy.step('Click the cancel button');\n      dataPage.clickCancelButton();\n      cy.step('Assert that the Item form is closed');\n      dataPage.getContainer('New Dummy Item').should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13622,"startedAt":"2021-01-12T13:44:09.890Z","screenshots":[]}]},{"title":["CMS:","S2: Cancel CMS Collection Item Creation (with information)","can click the cancel button"],"state":"passed","body":"function () {\n      cy.step('Click the cancel button');\n      dataPage.clickCancelButton();\n      cy.step('Assert that the unsaved changes confirm modal is visible');\n      cy.getByDataAutomationId('unsaved-changes-confirm-modal').should('exist');\n      cy.step('Click the \"Discard Changes\" button');\n      cy.getByDataAutomationId('discard-changes').click();\n      cy.step('Assert that the Item form is closed');\n      dataPage.getContainer('New Dummy Item').should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1460,"startedAt":"2021-01-12T13:44:23.527Z","screenshots":[]}]},{"title":["CMS:","S3: Cancel CMS Collection Item Creation (with errors)","can click the cancel button"],"state":"passed","body":"function () {\n      cy.step('Click the cancel button');\n      dataPage.clickCancelButton();\n      cy.step('Assert that the exit without saving modal is visible');\n      cy.getByDataAutomationId('exit-without-saving-confirm-modal').should('exist');\n      cy.step('Click the \"Exit Without Saving\" button');\n      cy.getByDataAutomationId('exit-without-saving').click();\n      cy.step('Assert that the Item form is closed');\n      dataPage.getContainer('New Dummy Item').should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1779,"startedAt":"2021-01-12T13:44:24.993Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/data/cms-item-cancellation.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/data/cms-item-cancellation.spec.js","absolute":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/entrypoints/designer/client/ui-tests/cms/data/cms-item-cancellation.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":19977,"startedAt":"2021-01-12T13:44:34.770Z","endedAt":"2021-01-12T13:44:54.747Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:44:34.772Z","end":"2021-01-12T13:44:54.753Z","duration":19981},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.legacyStylePanel);\n    sidebar = workspace.getLeftSidebar();\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.collectionCreation).as('collection-creation');\n\n      collectionName = \"collection\".concat(i++);\n      cy.step('Click the CMS button to open the panel');\n      var cmsTab = sidebar.clickCMSButton();\n      cy.step('Click the New Collection button');\n      var settings = cmsTab.clickCreateNewCMSButton();\n      cy.step(\"Click the 'Add New Field' button\");\n      var form = settings.clickAddFieldButton();\n      cy.step('Click the Rich Text field type, give it a label name, and click the save button');\n      form.clickOption('RichText').fill({\n        label: 'something'\n      }).clickSaveButton();\n      cy.step('Name the collection');\n      settings.getName().clear().type(collectionName);\n      cy.step(\"Click the 'Save Collection' button\");\n      dataPage = settings.clickCreateCollectionButton();\n      cy.step('Wait for the server response');\n      cy.wait('@collection-creation');\n    }"},{"hookName":"after each","title":["\"after each\" hook"],"body":"function () {\n      cy.step('Click the CMS button to close the panel');\n      sidebar.clickCMSButton();\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS:","Data","can add a new item"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.productSKU).as('collection-item-creation');\n\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.updatedProductList).as('collection-items-list');\n\n      cy.step('Click the new collection item button');\n      var form = dataPage.clickNewButton();\n      cy.step('Input the name and something for the collection item, then click the create button');\n      form.fill({\n        name: 'A',\n        something: 'B'\n      }).clickSaveButton();\n      cy.step('Wait for the server response');\n      cy.wait('@collection-item-creation');\n      cy.step('Assert that there is one product row');\n      cy.get(\"[data-automation-id=\\\"cms-item-row\\\"]\").should('have.length', 1);\n      cy.step('Wait for server response');\n      cy.wait('@collection-items-list');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14955,"startedAt":"2021-01-12T13:44:39.790Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/data/cms-item-creation.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/data/cms-item-creation.spec.js","absolute":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/entrypoints/designer/client/ui-tests/cms/data/cms-item-creation.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":18677,"startedAt":"2021-01-12T13:45:02.094Z","endedAt":"2021-01-12T13:45:20.771Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:45:02.096Z","end":"2021-01-12T13:45:20.805Z","duration":18709},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.legacyStylePanel);\n    sidebar = workspace.getLeftSidebar();\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.collectionCreation).as('collection-creation');\n\n      collectionName = \"collection\".concat(i++);\n      cy.step('Click the CMS button to open the panel');\n      var cmsTab = sidebar.clickCMSButton();\n      cy.step('Click the New Collection button');\n      var settings = cmsTab.clickCreateNewCMSButton();\n      cy.step(\"Click the 'Add New Field' button\");\n      var form = settings.clickAddFieldButton();\n      cy.step('Click the Rich Text field type, give it a label name, and click the save button');\n      form.clickOption('RichText').fill({\n        label: 'something'\n      }).clickSaveButton();\n      cy.step('Name the collection');\n      settings.getName().clear().type(collectionName);\n      cy.step(\"Click the 'Create Collection' button\");\n      dataPage = settings.clickCreateCollectionButton();\n      cy.step('Wait for the server response');\n      cy.wait('@collection-creation');\n    }"},{"hookName":"after each","title":["\"after each\" hook"],"body":"function () {\n      cy.step('Click the CMS button to close the panel');\n      sidebar.clickCMSButton();\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS:","Data","can navigate to the settings page"],"state":"passed","body":"function () {\n      cy.step('Click the settings button');\n      dataPage.clickSettingsButton();\n      cy.step('Assert that the Collection Settings form is open');\n      cy.get(\"[data-automation-id=\\\"CollectionSettingsForm-cms-collection-title-field-input\\\"]\").should('have.length', 1);\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13718,"startedAt":"2021-01-12T13:45:07.050Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/data/cms-item-settings.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/data/cms-item-settings.spec.js","absolute":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/entrypoints/designer/client/ui-tests/cms/data/cms-item-settings.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":17,"passes":17,"pending":0,"skipped":0,"failures":0,"duration":68244,"startedAt":"2021-01-12T13:45:28.625Z","endedAt":"2021-01-12T13:46:36.869Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":17,"passes":17,"pending":0,"failures":0,"start":"2021-01-12T13:45:28.628Z","end":"2021-01-12T13:46:36.885Z","duration":68257},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.openCMSItem).as('open-cms-item');\n\n      cy.step('Load a snapshot with at least one pre-made CMS collection');\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n      cy.step('Click the CMS button on the left sidebar to open the panel');\n      cmsTab = workspace.getLeftSidebar().clickCMSButton();\n      cy.step('Click to create a new collection');\n      collectionSettings = cmsTab.clickCreateNewCMSButton();\n      cy.wait('@open-cms-item');\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that the default editor preview exists when the collection form is open"],"state":"passed","body":"function () {\n      cy.step('Assert that the editor preview is open');\n      editorPreview = collectionSettings.getEditorPreview();\n      editorPreview.getNode().should('exist');\n      cy.step('Assert that the basic info section exists');\n      editorPreview.getBasicInfoFieldsSection().should('exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12078,"startedAt":"2021-01-12T13:45:33.698Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that hovering over a basic info field highlights the same field in the Editor Preview"],"state":"passed","body":"function () {\n      cy.step('Hover over the name field');\n      collectionSettings.getBasicInfoFieldsList().within(function () {\n        cy.get('.bem-List_Row').eq(0).trigger('mouseover');\n      });\n      cy.step('Assert that the editor preview field is also highlighted');\n      editorPreview.getBasicInfoFieldsSection().within(function () {\n        cy.get('.bem-WireframeField').eq(0).should('have.class', 'isHovering');\n      });\n      cy.step('Hover over the slug field');\n      collectionSettings.getBasicInfoFieldsList().within(function () {\n        cy.get('.bem-List_Row').eq(1).trigger('mouseover');\n      });\n      cy.step('Assert that the editor preview field is also highlighted');\n      editorPreview.getBasicInfoFieldsSection().within(function () {\n        cy.get('.bem-WireframeField').eq(1).should('have.class', 'isHovering');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":294,"startedAt":"2021-01-12T13:45:45.786Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that the Custom Fields section exists with a default field that is in the process of being edited should render on the Editor Preview after clicking the \"Add Field\" button"],"state":"passed","body":"function () {\n      cy.step('Click the \"Add Field\" button');\n      fieldOptions = collectionSettings.clickAddFieldButton();\n      cy.step('Assert that a default new field exists within the editor preview and is being edited');\n      editorPreview.getCustomFieldsSection().should('exist').within(function () {\n        cy.get('.bem-WireframeField').should('exist').and('have.class', 'isEditing');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":197,"startedAt":"2021-01-12T13:45:46.082Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that a FAQ component exists within the editor preview for a field when hovering over said field"],"state":"passed","body":"function () {\n      cy.step('Mouse over the plain text option');\n      fieldOptions.getOption('PlainText').trigger('mouseover');\n      cy.step('Assert that the plain text FAQ exists within the editor preview area');\n      editorPreview.getFAQ('plain-text').should('exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":97,"startedAt":"2021-01-12T13:45:46.280Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom text field should render a text field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      cy.step('Click the PlainText option and fill the input fields');\n      fieldOptions.clickOption('PlainText').fill({\n        label: 'test plain text label',\n        helpText: 'this is some help text for plain text',\n        required: true\n      });\n      cy.step('Assert that the plain text label and help text were entered correctly');\n      editorPreview.getCustomFieldsSection().within(function () {\n        cy.findByText(/test plain text label */).should('exist');\n        cy.findByText(/this is some help text for plain text/).should('exist');\n      });\n      cy.step('Assert that the PlainText field is a single-line input within the editor preview');\n      editorPreview.getFieldPreview('PlainText').should('not.have.class', 'bem-WireframeField_Field-multiLine');\n      cy.step('Click the multi-line option');\n      cy.get('.bem-RadioSelectInput_Option').eq(1).click();\n      cy.step('Assert that the PlainText field is a multi-line input within the editor preview');\n      editorPreview.getFieldPreview('PlainText').should('have.class', 'bem-WireframeField_Field-multiLine');\n      cy.step('Save the field');\n      fieldOptions.clickSaveButton();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4386,"startedAt":"2021-01-12T13:45:46.378Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom rich text field should render a text field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      cy.step('Click the RichText option and fill the input fields');\n      addCustomField('RichText');\n      assertNewCustomFieldExists('RichText');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4274,"startedAt":"2021-01-12T13:45:50.769Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom image reference field should render a image ref field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      cy.step('Click the ImageRef option and fill the input fields');\n      addCustomField('ImageRef');\n      assertNewCustomFieldExists('ImageRef');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3649,"startedAt":"2021-01-12T13:45:55.049Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom multi-image reference field should render a multi-image ref field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      addCustomField('SetImageRef');\n      assertNewCustomFieldExists('SetImageRef');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4292,"startedAt":"2021-01-12T13:45:58.704Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom video field should render a video field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      addCustomField('Video');\n      assertNewCustomFieldExists('Video');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3756,"startedAt":"2021-01-12T13:46:03.002Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom link field should render a link field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      addCustomField('Link');\n      assertNewCustomFieldExists('Link');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3076,"startedAt":"2021-01-12T13:46:06.763Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom email field should render a email field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      addCustomField('Email');\n      assertNewCustomFieldExists('Email');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3531,"startedAt":"2021-01-12T13:46:09.844Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom phone field should render a phone field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      addCustomField('Phone');\n      assertNewCustomFieldExists('Phone');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3622,"startedAt":"2021-01-12T13:46:13.379Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom number field should render a number field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      addCustomField('Number');\n      assertNewCustomFieldExists('Number');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4165,"startedAt":"2021-01-12T13:46:17.004Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom date field should render a date field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      addCustomField('Date');\n      assertNewCustomFieldExists('Date');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4154,"startedAt":"2021-01-12T13:46:21.172Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom boolean field should render a boolean field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      addCustomField('Bool');\n      assertNewCustomFieldExists('Bool');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3498,"startedAt":"2021-01-12T13:46:25.330Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom color field should render a color field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      addCustomField('Color');\n      assertNewCustomFieldExists('Color');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4215,"startedAt":"2021-01-12T13:46:28.832Z","screenshots":[]}]},{"title":["CMS Collection Settings","Scenario: Assert the Editor Preview renders correctly","should assert that adding a custom file field should render a option field section within the Custom Fields section on the Editor Preview"],"state":"passed","body":"function () {\n      addCustomField('FileRef');\n      assertNewCustomFieldExists('FileRef');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3814,"startedAt":"2021-01-12T13:46:33.051Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/settings/cms-collection-editor-preview.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/settings/cms-collection-editor-preview.spec.js","absolute":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/entrypoints/designer/client/ui-tests/cms/settings/cms-collection-editor-preview.spec.js","specType":"integration"},"shouldUploadVideo":false}],"browserPath":"/chromium64/chrome-linux/chrome","browserName":"chromium","browserVersion":"74.0.3729.0","osName":"linux","osVersion":"Debian - 9.13","cypressVersion":"6.2.1","config":{"env":{"baseUrl":"http://wfdev.io:3030","stagingSuperDomain":"dev.webflowtest.io","User-Agent":"cypress","RECORD_KEY":"f9ae3...c4cf9"},"integrationFolder":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow","configFile":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/cypress.json","version":"6.2.1","chromeWebSecurity":false,"browser":"chromium","video":false,"videoUploadOnPasses":false,"viewportWidth":1440,"viewportHeight":900,"defaultCommandTimeout":30000,"numTestsKeptInMemory":0,"ignoreTestFiles":"*.quarantined.spec.js","testFiles":"**/*.spec.js","fileServerFolder":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config","fixturesFolder":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/fixtures","pluginsFile":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/plugins/index.js","screenshotsFolder":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/screenshots","supportFile":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/support/index.js","videosFolder":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/videos","retries":{"runMode":2,"openMode":0},"projectId":"xfhtj7","reporter":"../../../node_modules/cypress-multi-reporters","reporterOptions":{"configFile":"reporter-config.json"},"projectRoot":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config","projectName":"cypress-config","morgan":false,"isTextTerminal":true,"socketId":"yfc4k","report":true,"browsers":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"animationDistanceThreshold":5,"autoOpen":false,"baseUrl":null,"blockHosts":null,"clientRoute":"/__/","componentFolder":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/cypress/component","execTimeout":60000,"experimentalComponentTesting":false,"experimentalFetchPolyfill":false,"experimentalRunEvents":false,"experimentalSourceRewriting":false,"firefoxGcInterval":{"runMode":1,"openMode":null},"hosts":null,"includeShadowDom":false,"javascripts":[],"modifyObstructiveCode":true,"namespace":"__cypress","nodeVersion":"default","pageLoadTimeout":60000,"port":37249,"reporterRoute":"/__cypress/reporter","requestTimeout":5000,"responseTimeout":30000,"screenshotOnRunFailure":true,"socketIoRoute":"/__socket.io","socketIoCookie":"__socket.io","taskTimeout":60000,"trashAssetsBeforeRuns":true,"userAgent":null,"videoCompression":32,"waitForAnimations":true,"scrollBehavior":"top","watchForFileChanges":false,"xhrRoute":"/xhrs/","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"baseUrl":{"value":null,"from":"default"},"blockHosts":{"value":null,"from":"default"},"browsers":{"value":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"from":"default"},"chromeWebSecurity":{"value":false,"from":"config"},"componentFolder":{"value":"cypress/component","from":"default"},"defaultCommandTimeout":{"value":30000,"from":"config"},"env":{"baseUrl":{"value":"http://wfdev.io:3030","from":"plugin"},"User-Agent":{"value":"cypress","from":"config"},"RECORD_KEY":{"value":"f9ae3...c4cf9","from":"env"},"stagingSuperDomain":{"value":"dev.webflowtest.io","from":"plugin"}},"execTimeout":{"value":60000,"from":"default"},"experimentalComponentTesting":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalRunEvents":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"fileServerFolder":{"value":"./","from":"config"},"firefoxGcInterval":{"value":{"runMode":1,"openMode":null},"from":"default"},"fixturesFolder":{"value":"./fixtures","from":"config"},"hosts":{"value":null,"from":"default"},"ignoreTestFiles":{"value":"*.quarantined.spec.js","from":"config"},"includeShadowDom":{"value":false,"from":"default"},"integrationFolder":{"value":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow","from":"plugin"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"value":"default","from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"pageLoadTimeout":{"value":60000,"from":"default"},"pluginsFile":{"value":"./plugins/index.js","from":"config"},"port":{"value":null,"from":"default"},"projectId":{"value":"xfhtj7","from":"config"},"reporter":{"value":"../../../node_modules/cypress-multi-reporters","from":"cli"},"reporterOptions":{"value":{"configFile":"reporter-config.json"},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":2,"openMode":0},"from":"config"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"./screenshots","from":"config"},"supportFile":{"value":"./support/index.js","from":"config"},"taskTimeout":{"value":60000,"from":"default"},"testFiles":{"value":"**/*.spec.js","from":"config"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"config"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"./videos","from":"config"},"videoUploadOnPasses":{"value":false,"from":"config"},"viewportHeight":{"value":900,"from":"config"},"viewportWidth":{"value":1440,"from":"config"},"waitForAnimations":{"value":true,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"configFile":{"value":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/cypress.json","from":"plugin"},"version":{"value":"6.2.1","from":"plugin"}},"parentTestsFolder":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/cypress","parentTestsFolderDisplay":"cypress-config/cypress","supportFolder":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/support","integrationExampleName":"examples","integrationExamplePath":"/scratch/buildkite-agent-8e2b8081-54da-11eb-97fa-4a22e55b2d68-dwr5b/webflow/webflow/packages/tooling/cypress-config/cypress/integration/examples","scaffoldedFiles":[{"name":"cypress","children":[{"name":"integration","children":[{"name":"examples","children":[{"name":"actions.spec.js"},{"name":"aliasing.spec.js"},{"name":"assertions.spec.js"},{"name":"connectors.spec.js"},{"name":"cookies.spec.js"},{"name":"cypress_api.spec.js"},{"name":"files.spec.js"},{"name":"local_storage.spec.js"},{"name":"location.spec.js"},{"name":"misc.spec.js"},{"name":"navigation.spec.js"},{"name":"network_requests.spec.js"},{"name":"querying.spec.js"},{"name":"spies_stubs_clocks.spec.js"},{"name":"traversal.spec.js"},{"name":"utilities.spec.js"},{"name":"viewport.spec.js"},{"name":"waiting.spec.js"},{"name":"window.spec.js"}]}]}]},{"name":"fixtures","children":[{"name":"example.json"}]},{"name":"support","children":[{"name":"commands.js"},{"name":"index.js"}]},{"name":"plugins","children":[{"name":"index.js"}]}],"resolvedNodeVersion":"12.18.3","state":{},"proxyUrl":"http://localhost:37249","browserUrl":"http://localhost:37249/__/","reporterUrl":"http://localhost:37249/__cypress/reporter","xhrUrl":"__cypress/xhrs/"},"status":"finished"}]