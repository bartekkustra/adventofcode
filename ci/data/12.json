[{"startedTestsAt":"2021-01-12T13:40:31.666Z","endedTestsAt":"2021-01-12T13:51:52.135Z","totalDuration":525554,"totalSuites":49,"totalTests":74,"totalFailed":0,"totalPassed":73,"totalPending":1,"totalSkipped":0,"runs":[{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":18038,"startedAt":"2021-01-12T13:40:31.666Z","endedAt":"2021-01-12T13:40:49.704Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:40:31.669Z","end":"2021-01-12T13:40:49.709Z","duration":18040},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Email Settings","Send a test email is successful and confirmed via designer messages","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      workspace.getLeftSidebar().clickSettingsButton().clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11427,"startedAt":"2021-01-12T13:40:37.361Z","screenshots":[]}]},{"title":["Email Settings","Send a test email is successful and confirmed via designer messages","should open the 'order received' section and send a test email"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.orderReceivedTestEmail).as('order-received-test-email');\n\n      cy.step(\"Click to open the 'Order Reveived' section\");\n      cy.get(ecom.emailSettingsOrderReceivedSection).click();\n      cy.step('Assert that the the Email Subject field within the Order Received section is visible (to assert that the Order Received section is open)');\n      cy.get(ecom.emailSettingsOrderReceivedSection).within(function () {\n        cy.get(ecom.emailSubject).should('be.visible');\n      });\n      cy.step('Click the send test email button');\n      cy.get(ecom.sendTestEmailButton).click();\n      cy.step('Click the send preview button');\n      cy.get(ecom.sendPreviewEmailButton).click();\n      cy.wait('@order-received-test-email');\n      cy.step('Assert that the Order Received preivew email success notification appears');\n      cy.get('.bem-Notification-success').should('be.visible');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":907,"startedAt":"2021-01-12T13:40:48.796Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/test-email.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/test-email.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/test-email.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":3,"tests":7,"passes":7,"pending":0,"skipped":0,"failures":0,"duration":21294,"startedAt":"2021-01-12T13:40:56.871Z","endedAt":"2021-01-12T13:41:18.165Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":3,"tests":7,"passes":7,"pending":0,"failures":0,"start":"2021-01-12T13:40:56.873Z","end":"2021-01-12T13:41:18.171Z","duration":21298},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Email Settings","Can save valid changes / Can't save invalid changes","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      workspace.getLeftSidebar().clickSettingsButton().clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12250,"startedAt":"2021-01-12T13:41:02.099Z","screenshots":[]}]},{"title":["Email Settings","Can save valid changes / Can't save invalid changes","should change accent color value to an invalid entry"],"state":"passed","body":"function () {\n      cy.step('Change the accent color value');\n      cy.get(ecom.emailSettingsAccentColor).clear().type('g');\n      cy.step('Assert that the accent color is now g');\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', 'g');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":642,"startedAt":"2021-01-12T13:41:14.359Z","screenshots":[]}]},{"title":["Email Settings","Can save valid changes / Can't save invalid changes","should attempt to save changes and fail"],"state":"passed","body":"function () {\n      cy.step('Click save changes');\n      cy.get(ecom.emailSettingsSaveButton).click();\n      cy.step('Assert that the accent color error message shows up when attempting to save');\n      cy.get('.bem-TextInput.hasError.bem-TextInput-required').should('be.visible');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":198,"startedAt":"2021-01-12T13:41:15.002Z","screenshots":[]}]},{"title":["Email Settings","Can save valid changes / Can't save invalid changes","should save the settings and close all open panels to reset the DOM"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('email-settings');\n\n      cy.step('Change the accent color back to a valid value');\n      cy.get(ecom.emailSettingsAccentColor).clear().type('655');\n      cy.step('Assert that the accent color is now #468ee5');\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', '655');\n      cy.step('Change the accent color back to a valid value');\n      cy.get(ecom.emailSettingsAccentColor).type('{enter}');\n      cy.step('Assert that the accent color is now #468ee5');\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', '#655');\n      cy.step('Save Email Settings changes');\n      cy.get(ecom.emailSettingsSaveButton).click();\n      cy.wait('@email-settings');\n      cy.step('Close all open panels');\n      workspace.escapeAllUiPanels();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1114,"startedAt":"2021-01-12T13:41:15.201Z","screenshots":[]}]},{"title":["Email Settings","The correct modal appears if exiting with unsaved valid / invalid changes","should open email settings"],"state":"passed","body":"function () {\n      cy.step('Open the email settings');\n      workspace.getLeftSidebar().clickSettingsButton().clickEmailTab();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":360,"startedAt":"2021-01-12T13:41:16.317Z","screenshots":[]}]},{"title":["Email Settings","The correct modal appears if exiting with unsaved valid / invalid changes","should enter an invalid value into the accent color field and assert that the correct modal appears when trying to exit with errors"],"state":"passed","body":"function () {\n      cy.step(\"Enter invalid entry 'wrong' into the accent color field\");\n      cy.get(ecom.emailSettingsAccentColor).clear().type('wrong');\n      cy.step(\"Assert that the Accent color field has 'wrong' as its value\");\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', 'wrong');\n      cy.step('Click the background settings input (just to make sure the invalid accent value is confirmed there)');\n      cy.get(ecom.emailSettingsBackgroundColor).click();\n      cy.step('Attempt to cancel changes');\n      cy.get(ecom.emailSettingsCancelButton).click();\n      cy.step('Assert that the exit with invalid changes modal appears');\n      cy.get(ecom.exitWithoutSavingModal).should('be.visible');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":562,"startedAt":"2021-01-12T13:41:16.681Z","screenshots":[]}]},{"title":["Email Settings","The correct modal appears if exiting with unsaved valid / invalid changes","should enter a valid value into the accent color field and assert that the correct modal appears when trying to exit with valid, unsaved changes"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('email-settings');\n\n      cy.step('Click the keep editing button');\n      cy.get(ecom.modalKeepEditing).click();\n      cy.step('Enter a valid value into the accent color field');\n      cy.get(ecom.emailSettingsAccentColor).clear().type('777').blur();\n      cy.step(\"Assert that the value of the accent color field is '#777'\");\n      cy.get(ecom.emailSettingsAccentColor).should('have.value', '#777');\n      cy.step('Click the background settings input (just to make sure the valid accent value is confirmed there)');\n      cy.get(ecom.emailSettingsBackgroundColor).click();\n      cy.step('Attempt to cancel changes');\n      cy.get(ecom.emailSettingsCancelButton).click();\n      cy.step('Assert that the exit with valid changes modal appears');\n      cy.get(ecom.unsavedChangesModal).should('be.visible');\n      cy.step(\"Click 'Save Changes'\");\n      cy.get('.bem-Button.bem-Button-primary.bem-Confirm_ActionButton').click();\n      cy.wait('@email-settings');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":919,"startedAt":"2021-01-12T13:41:17.245Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/valid-invalid-email-settings.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/valid-invalid-email-settings.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/email-settings/valid-invalid-email-settings.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":26706,"startedAt":"2021-01-12T13:41:25.028Z","endedAt":"2021-01-12T13:41:51.734Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:41:25.031Z","end":"2021-01-12T13:41:51.763Z","duration":26732},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["A Designer changes the locale settings in the general Ecommerce settings","Ecommerce Locale Settings","should change the locale language from English to Dutch, then assert that the locale region changes to Aruba and the price preview changes to  US$ 10.000,00 USD"],"state":"passed","body":"function () {\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n      cy.step('click to open the Ecommerce settings panel');\n      ecommerceGenSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab().clickEcommSetting('General');\n      cy.step('Assert that the locale language is English (en)');\n      ecommerceGenSettings.getLocaleLanguage().should('contain', 'English (en)');\n      cy.step('Assert that the locale region is United States (US)');\n      ecommerceGenSettings.getLocaleRegion().should('contain', 'United States (US)');\n      cy.step('Assert that the price preview is $ 10,000.00 USD');\n      ecommerceGenSettings.getPricePreview().should('have.text', '$\\xa010,000.00\\xa0USD');\n      cy.step('Click the locale language select menu');\n      ecommerceGenSettings.getLocaleLanguage().click();\n      cy.step('Click the Dutch language option');\n      ecommerceGenSettings.getLocaleLanguageOption('dutch').click();\n      cy.step('Assert that the locale language is Dutch (nl)');\n      ecommerceGenSettings.getLocaleLanguage().should('contain', 'Dutch (nl)');\n      cy.step('Assert that the locale region is Aruba (AW)');\n      ecommerceGenSettings.getLocaleRegion().should('contain', 'Aruba (AW)');\n      cy.step('Assert that the price preview is US$ 10.000,00 USD');\n      ecommerceGenSettings.getPricePreview().should('have.text', 'US$\\xa010.000,00\\xa0USD');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12245,"startedAt":"2021-01-12T13:41:30.282Z","screenshots":[]}]},{"title":["A Designer changes the locale settings in the general Ecommerce settings","Ecommerce Locale Settings","should change the locale language from English to Embu, then assert that the locale region changes to Kenya and the price preview changes to $ 10.000,00 USD"],"state":"passed","body":"function () {\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n      cy.step('click to open the Ecommerce settings panel');\n      ecommerceGenSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab().clickEcommSetting('General');\n      cy.step('Assert that the locale language is English (en)');\n      ecommerceGenSettings.getLocaleLanguage().should('contain', 'English (en)');\n      cy.step('Assert that the locale region is United States (US)');\n      ecommerceGenSettings.getLocaleRegion().should('contain', 'United States (US)');\n      cy.step('Assert that the price preview is $ 10,000.00 USD');\n      ecommerceGenSettings.getPricePreview().should('have.text', '$\\xa010,000.00\\xa0USD');\n      cy.step('Click the locale language select menu');\n      ecommerceGenSettings.getLocaleLanguage().click();\n      cy.step('Click the Embu language option');\n      ecommerceGenSettings.getLocaleLanguageOption('embu').click();\n      cy.step('Assert that the locale language is Embu (ebu)');\n      ecommerceGenSettings.getLocaleLanguage().should('contain', 'Embu (ebu)');\n      cy.step('Assert that the locale region select menu is disabled');\n      ecommerceGenSettings.getLocaleRegion().should('have.attr', 'disabled');\n      cy.step('Assert that the locale region is set to Kenya (KE)');\n      ecommerceGenSettings.getLocaleRegion().should('contain', 'Kenya (KE)');\n      cy.step('Assert that the price preview is $ 10.000,00 USD');\n      ecommerceGenSettings.getPricePreview().should('have.text', '$\\xa010,000.00\\xa0USD');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9181,"startedAt":"2021-01-12T13:41:42.538Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/general-settings/cf-locale-settings.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/general-settings/cf-locale-settings.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/general-settings/cf-locale-settings.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":15,"passes":15,"pending":0,"skipped":0,"failures":0,"duration":35129,"startedAt":"2021-01-12T13:41:58.672Z","endedAt":"2021-01-12T13:42:33.801Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":15,"passes":15,"pending":0,"failures":0,"start":"2021-01-12T13:41:58.674Z","end":"2021-01-12T13:42:33.814Z","duration":35140},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n    ecommerceGenSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab().clickEcommSetting('General');\n    ecommerceGenSettings.getPriceFormattingButton().click();\n    tokenInput = new _cypressAppControls.TokenFieldInput(cy, 'commerce-price-formatting-field');\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Ecommerce Price Formatting Settings","should have the initial format"],"state":"passed","body":"function () {\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Currency symbol'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'token',\n      text: 'Currency code'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;symbol&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n    expectPricePreviewToHaveText('$\\xa010,000.00\\xa0USD');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13062,"startedAt":"2021-01-12T13:42:03.844Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should not allow deleting Amount"],"state":"passed","body":"function () {\n    tokenInput.selectRange(0, 'X X X'.length).fill('{backspace}');\n    tokenInput.expectValueToBe('{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}');\n    expectPricePreviewToHaveText('10,000.00');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":561,"startedAt":"2021-01-12T13:42:16.920Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should not show variable dropdown when clicking Amount token"],"state":"passed","body":"function () {\n    tokenDropdown = tokenInput.clickTokenWidgetThatContains('Amount');\n    tokenDropdown.expectOptionDropdownNotToBeVisible();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":137,"startedAt":"2021-01-12T13:42:17.482Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should allow typing in the shorthand tokens"],"state":"passed","body":"function () {\n    tokenInput.fill('{end}');\n    tokenInput.fill(' {{ currencyCode }}', {\n      parseSpecialCharSequences: false\n    });\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'token',\n      text: 'Currency code'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n    expectPricePreviewToHaveText('10,000.00\\xa0USD');\n    tokenInput.fill('{backspace}{backspace}');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2202,"startedAt":"2021-01-12T13:42:17.620Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should allow typing in the variable tokens in setting"],"state":"passed","body":"function () {\n    tokenInput.fill(' {{wf {\"path\":\"currencyCode\",\"type\":\"PlainText\"} }}', {\n      parseSpecialCharSequences: false\n    });\n    tokenInput.fill(' {{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;} }}', {\n      parseSpecialCharSequences: false\n    });\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'token',\n      text: 'Currency code'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'token',\n      text: 'Currency code'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n    expectPricePreviewToHaveText('10,000.00\\xa0USD\\xa0USD');\n    tokenInput.fill('{backspace}{backspace}');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9429,"startedAt":"2021-01-12T13:42:19.828Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should mark an invalid token"],"state":"passed","body":"function () {\n    tokenInput.fill('{{invalid}}', {\n      parseSpecialCharSequences: false\n    });\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'token',\n      text: 'Currency code'\n    }, {\n      type: 'invalid',\n      text: '{{invalid}}'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{invalid}}'].join(''));\n    expectPricePreviewToHaveText('10,000.00\\xa0USD{{invalid}}');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1231,"startedAt":"2021-01-12T13:42:29.262Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should allow adding external tokens"],"state":"passed","body":"function () {\n    tokenInput.fill('{\\\\{external}}', {\n      parseSpecialCharSequences: false\n    });\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'token',\n      text: 'Currency code'\n    }, {\n      type: 'invalid',\n      text: '{{invalid}}'\n    }, {\n      type: 'text',\n      text: '{\\\\{external}}'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{invalid}}', '{\\\\{external}}'].join(''));\n    expectPricePreviewToHaveText('10,000.00\\xa0USD{{invalid}}{\\\\{external}}');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":819,"startedAt":"2021-01-12T13:42:30.498Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should show correct token options in the dropdown when clicking Add Field"],"state":"passed","body":"function () {\n    addFieldDropdown = tokenInput.clickAddField();\n    addFieldDropdown.expectTokenOptionsToHaveLabels(['Currency symbol', 'Currency code']);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":137,"startedAt":"2021-01-12T13:42:31.319Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should add the variable to the embed when clicking the dropdown option"],"state":"passed","body":"function () {\n    addFieldDropdown.clickTokenOptionThatContains('Currency symbol');\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'token',\n      text: 'Currency code'\n    }, {\n      type: 'invalid',\n      text: '{{invalid}}'\n    }, {\n      type: 'text',\n      text: '{\\\\{external}}'\n    }, {\n      type: 'token',\n      text: 'Currency symbol'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{invalid}}', '{\\\\{external}}{{wf {&quot;path&quot;:&quot;symbol&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n    expectPricePreviewToHaveText('10,000.00\\xa0USD{{invalid}}{\\\\{external}}$');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":420,"startedAt":"2021-01-12T13:42:31.457Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should not allow deleting Amount token using backspace"],"state":"passed","body":"function () {\n    tokenInput.moveCursorToPosition(1).fill('{backspace}');\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'token',\n      text: 'Currency code'\n    }, {\n      type: 'invalid',\n      text: '{{invalid}}'\n    }, {\n      type: 'text',\n      text: '{\\\\{external}}'\n    }, {\n      type: 'token',\n      text: 'Currency symbol'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{invalid}}', '{\\\\{external}}', '{{wf {&quot;path&quot;:&quot;symbol&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n    expectPricePreviewToHaveText('10,000.00\\xa0USD{{invalid}}{\\\\{external}}$');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":427,"startedAt":"2021-01-12T13:42:31.878Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should delete the Currency code token when deleting it using backspace in the input"],"state":"passed","body":"function () {\n    tokenInput.moveCursorToPosition('X X'.length).fill('{backspace}');\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'invalid',\n      text: '{{invalid}}'\n    }, {\n      type: 'text',\n      text: '{\\\\{external}}'\n    }, {\n      type: 'token',\n      text: 'Currency symbol'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', ' ', '{{invalid}}', '{\\\\{external}}', '{{wf {&quot;path&quot;:&quot;symbol&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n    expectPricePreviewToHaveText('10,000.00\\xa0{{invalid}}{\\\\{external}}$');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":274,"startedAt":"2021-01-12T13:42:32.306Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should show correct token variables and \"Delete Field\" when clicking the Currency symbol token"],"state":"passed","body":"function () {\n    tokenDropdown = tokenInput.clickTokenWidgetThatContains('Currency symbol');\n    tokenDropdown.expectTokenOptionsToHaveLabels(['Currency symbol', 'Currency code', 'Delete Field']);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":156,"startedAt":"2021-01-12T13:42:32.581Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should delete the token when clicking \"Delete Field\""],"state":"passed","body":"function () {\n    tokenDropdown.clickTokenOptionThatContains('Delete Field');\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'invalid',\n      text: '{{invalid}}'\n    }, {\n      type: 'text',\n      text: '{\\\\{external}}'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', ' ', '{{invalid}}', '{\\\\{external}}'].join(''));\n    expectPricePreviewToHaveText('10,000.00\\xa0{{invalid}}{\\\\{external}}');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":166,"startedAt":"2021-01-12T13:42:32.738Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should add the token to where the cursor is at"],"state":"passed","body":"function () {\n    tokenInput.moveCursorToPosition('X '.length);\n    addFieldDropdown = tokenInput.clickAddField();\n    addFieldDropdown.clickTokenOptionThatContains('Currency code');\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: ' '\n    }, {\n      type: 'token',\n      text: 'Currency code'\n    }, {\n      type: 'invalid',\n      text: '{{invalid}}'\n    }, {\n      type: 'text',\n      text: '{\\\\{external}}'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{invalid}}', '{\\\\{external}}'].join(''));\n    expectPricePreviewToHaveText('10,000.00\\xa0USD{{invalid}}{\\\\{external}}');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":371,"startedAt":"2021-01-12T13:42:32.905Z","screenshots":[]}]},{"title":["Ecommerce Price Formatting Settings","should support replacing a selection with a token"],"state":"passed","body":"function () {\n    tokenInput.selectRange(0, 'X X{'.length);\n    addFieldDropdown = tokenInput.clickAddField();\n    addFieldDropdown.clickTokenOptionThatContains('Currency code');\n    tokenInput.expectToHaveNodes([{\n      type: 'token',\n      text: 'Currency code'\n    }, {\n      type: 'token',\n      text: 'Amount'\n    }, {\n      type: 'text',\n      text: '{invalid}}{\\\\{external}}'\n    }]);\n    tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;currencyCode&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;amount&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}', '{invalid}}{\\\\{external}}'].join(''));\n    expectPricePreviewToHaveText('USD10,000.00{invalid}}{\\\\{external}}');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":523,"startedAt":"2021-01-12T13:42:33.277Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/general-settings/price-format-settings.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/general-settings/price-format-settings.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/general-settings/price-format-settings.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":15981,"startedAt":"2021-01-12T13:42:40.958Z","endedAt":"2021-01-12T13:42:56.939Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:42:40.960Z","end":"2021-01-12T13:42:56.972Z","duration":16012},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    var workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n\n    sidebar = workspace.getLeftSidebar();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["E-commerce Integrations Pre-Connection","Integration Pre-Connection","should assert that the E-commerce Facebook and Google integrations are not connected"],"state":"passed","body":"function () {\n      cy.step('Open Settings panel -> Ecommerce settings -> Ecommerce payment settings panel');\n      var integrationSettings = sidebar.clickSettingsButton().clickEcommerceTab().clickEcommSetting('Integrations');\n      cy.step('Assert that Facebook is not connected');\n      integrationSettings.assertIntegrationConnection('facebook', false);\n      cy.step('Assert that Google is not connected');\n      integrationSettings.assertIntegrationConnection('google', false);\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11111,"startedAt":"2021-01-12T13:42:45.826Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/integration-settings/ecommerce-intergrations-pre-connection.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/integration-settings/ecommerce-intergrations-pre-connection.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/integration-settings/ecommerce-intergrations-pre-connection.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":15879,"startedAt":"2021-01-12T13:43:04.143Z","endedAt":"2021-01-12T13:43:20.022Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:43:04.145Z","end":"2021-01-12T13:43:20.058Z","duration":15913},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.paymentSettingsPreConnection);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["PayPal On-Boarding (Pre-Connection)","PayPal Pre-Connection","should assert that the PayPal option is visible and that PayPal is not connected"],"state":"passed","body":"function () {\n      cy.step('Open Settings panel -> Ecommerce settings -> Ecommerce payment settings panel');\n      var paymentSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab().clickEcommSetting('Payment');\n      cy.step('Assert that the Payment settings panel is visible');\n      paymentSettings.getPanelHeader().should('contain', 'Payment');\n      cy.step('Assert that PayPal is not yet connected');\n      paymentSettings.getPaypalPaymentOption().within(function () {\n        paymentSettings.assertPaymentMethodConnection('paypal', false);\n      });\n      cy.step('Assert that the Connect PayPal button is visible');\n      paymentSettings.getPaypalPaymentOption().getByDataAutomationId('action').should('be.visible').and('contain', 'Connect PayPal');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10861,"startedAt":"2021-01-12T13:43:09.159Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/payment-settings/paypal/paypal-onboarding-pre-connection.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/payment-settings/paypal/paypal-onboarding-pre-connection.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/payment-settings/paypal/paypal-onboarding-pre-connection.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":16329,"startedAt":"2021-01-12T13:43:27.008Z","endedAt":"2021-01-12T13:43:43.337Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:43:27.011Z","end":"2021-01-12T13:43:43.377Z","duration":16366},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.paymentSettingsPreConnection);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Stripe On-Boarding (Pre-Connection)","Stripe Pre-Connection","should assert that the Stripe option is visible and that Stripe is not connected"],"state":"passed","body":"function () {\n      cy.step('Open Settings panel -> Ecommerce settings -> Ecommerce payment settings panel');\n      var paymentSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab().clickEcommSetting('Payment');\n      cy.step('Assert that the Stripe payment option is visible');\n      paymentSettings.getPanelHeader().should('contain', 'Payment');\n      paymentSettings.getStripePaymentOption().within(function () {\n        cy.getByDataAutomationId('name').should('be.visible');\n      });\n      cy.step('Assert that Stripe payment methods are not yet connected');\n      paymentSettings.getStripePaymentOption().within(function () {\n        cy.getByDataAutomationId('method').within(function () {\n          paymentSettings.assertPaymentMethodConnection('visa', false);\n          paymentSettings.assertPaymentMethodConnection('mastercard', false);\n          paymentSettings.assertPaymentMethodConnection('discover', false);\n          paymentSettings.assertPaymentMethodConnection('amex', false);\n          paymentSettings.assertPaymentMethodConnection('diners-club', false);\n          paymentSettings.assertPaymentMethodConnection('jcb', false);\n          paymentSettings.assertPaymentMethodConnection('union-pay', false);\n          paymentSettings.assertPaymentMethodConnection('apple-pay', false);\n          paymentSettings.assertPaymentMethodConnection('web-payments', false);\n        });\n      });\n      cy.step('Assert that the Connect Stripe button is visible');\n      paymentSettings.getStripePaymentOption().within(function () {\n        cy.getByDataAutomationId('action').should('be.visible').and('contain', 'Connect Stripe');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10980,"startedAt":"2021-01-12T13:43:32.355Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/payment-settings/stripe/stripe-onboarding-pre-connection.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/payment-settings/stripe/stripe-onboarding-pre-connection.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/payment-settings/stripe/stripe-onboarding-pre-connection.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":18454,"startedAt":"2021-01-12T13:43:50.215Z","endedAt":"2021-01-12T13:44:08.669Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:43:50.218Z","end":"2021-01-12T13:44:08.672Z","duration":18454},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.multipleShippingZones);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Edits an exiting shipping zone","Edit an existing zone","should edit a shipping zone"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('update-shipping-list');\n\n      cy.step('click to open the settings panel and open Ecommerce Setting');\n      ecommerceShippingSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab().clickEcommSetting('Shipping');\n      cy.step('Click to open an already made shipping zone');\n      ecommerceShippingSettings.getShippingZone(2);\n      editShippingZone = ecommerceShippingSettings.clickShippingZone(2);\n      var shippingZoneData = {\n        name: 'Test (Edited)',\n        shippingCodes: {\n          countryCodes: ['DZ', 'BW']\n        }\n      };\n      cy.step('Fill in the shipping zone form');\n      editShippingZone.fill(shippingZoneData, true);\n      cy.step('Wait on the shipping list to update');\n      cy.wait('@update-shipping-list');\n      cy.step('Assert that the new shipping zone has the correct name and country');\n      ecommerceShippingSettings.getShippingZone(2).should('contain', 'Test (Edited)').and('contain', 'Botswana');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13447,"startedAt":"2021-01-12T13:43:55.219Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/edit-shipping-zone.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/edit-shipping-zone.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/edit-shipping-zone.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":5,"passes":5,"pending":0,"skipped":0,"failures":0,"duration":47085,"startedAt":"2021-01-12T13:44:15.405Z","endedAt":"2021-01-12T13:45:02.490Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":5,"passes":5,"pending":0,"failures":0,"start":"2021-01-12T13:44:15.407Z","end":"2021-01-12T13:45:02.496Z","duration":47089},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n    cy.step('click to open the Ecommerce Shipping Settings');\n    ecommerceShippingSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab().clickEcommSetting('Shipping');\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Create shipping methods","Creation of each shipping method","should create a new shipping zone with a flat-rate method"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('update-shipping-list');\n\n      var shippingZoneData = {\n        name: 'Flat Rate Shipping',\n        shippingCodes: {\n          countryCodes: ['DZ']\n        },\n        shippingMethod: {\n          methodType: 'flat-rate',\n          name: 'Algeria - Flat Rate Shipping',\n          rate: ['20.00']\n        }\n      };\n      cy.step(\"Click the 'Add shipping zone'\");\n      newShippingZone = ecommerceShippingSettings.clickAddShippingZoneButton();\n      cy.step('Fill in the shipping zone form');\n      newShippingZone.fill(shippingZoneData, false);\n      cy.step('Wait on the shipping list to update');\n      cy.wait('@update-shipping-list');\n      cy.step('Assert that the new shipping zone has the correct name, country, and shipping status');\n      ecommerceShippingSettings.getShippingZoneTable().within(function () {\n        ecommerceShippingSettings.getShippingZone(1).should('contain', 'Flat Rate Shipping').and('contain', 'Algeria').within(function () {\n          cy.get('td').eq(1).should('contain', 'On');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":18191,"startedAt":"2021-01-12T13:44:20.364Z","screenshots":[]}]},{"title":["Create shipping methods","Creation of each shipping method","should create a new shipping zone with a percentage-rate method"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('update-shipping-list');\n\n      var shippingZoneData = {\n        name: 'Percentage Rate Shipping',\n        shippingCodes: {\n          countryCodes: ['BJ']\n        },\n        shippingMethod: {\n          methodType: 'percentage',\n          name: 'Benin - Percentage Rate Shipping',\n          rate: ['8']\n        }\n      };\n      cy.step(\"Click the 'Add shipping zone'\");\n      newShippingZone = ecommerceShippingSettings.clickAddShippingZoneButton();\n      cy.step('Fill in the shipping zone form');\n      newShippingZone.fill(shippingZoneData, false);\n      cy.step('Wait on the shipping list to update');\n      cy.wait('@update-shipping-list');\n      cy.step('Assert that the new shipping zone has the correct name, country, and shipping status');\n      ecommerceShippingSettings.getShippingZoneTable().within(function () {\n        ecommerceShippingSettings.getShippingZone(2).should('contain', 'Percentage Rate Shipping').and('contain', 'Benin').within(function () {\n          cy.get('td').eq(1).should('contain', 'On');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":5143,"startedAt":"2021-01-12T13:44:38.578Z","screenshots":[]}]},{"title":["Create shipping methods","Creation of each shipping method","should create a new shipping zone with a price-rate method"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('update-shipping-list');\n\n      var shippingZoneData = {\n        name: 'Price Rate Shipping',\n        shippingCodes: {\n          continentCodes: [{\n            name: 'europe',\n            selectEntireContinent: true\n          }]\n        },\n        shippingMethod: {\n          methodType: 'price',\n          name: 'Europe - Price Rate Shipping',\n          rate: ['1', '20', '5']\n        }\n      };\n      cy.step(\"Click the 'Add shipping zone'\");\n      newShippingZone = ecommerceShippingSettings.clickAddShippingZoneButton();\n      cy.step('Fill in the shipping zone form');\n      newShippingZone.fill(shippingZoneData, false);\n      cy.step('Wait on the shipping list to update');\n      cy.wait('@update-shipping-list');\n      cy.step('Assert that the new shipping zone has the correct name, country, and shipping status');\n      ecommerceShippingSettings.getShippingZoneTable().within(function () {\n        ecommerceShippingSettings.getShippingZone(3).should('contain', 'Price Rate Shipping').and('contain', '54 countries').within(function () {\n          cy.get('td').eq(1).should('contain', 'On');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":6468,"startedAt":"2021-01-12T13:44:43.729Z","screenshots":[]}]},{"title":["Create shipping methods","Creation of each shipping method","should create a new shipping zone with a quantity-rate method"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('update-shipping-list');\n\n      var shippingZoneData = {\n        name: 'Quantity Rate Shipping',\n        shippingCodes: {\n          continentCodes: [{\n            name: 'asia',\n            selectEntireContinent: false\n          }],\n          countryCodes: ['CN']\n        },\n        shippingMethod: {\n          methodType: 'quantity',\n          name: 'Asia - Quantity Rate Shipping',\n          rate: ['1', '20', '5']\n        }\n      };\n      cy.step(\"Click the 'Add shipping zone'\");\n      newShippingZone = ecommerceShippingSettings.clickAddShippingZoneButton();\n      cy.step('Fill in the shipping zone form');\n      newShippingZone.fill(shippingZoneData, false);\n      cy.step('Wait on the shipping list to update');\n      cy.wait('@update-shipping-list');\n      cy.step('Assert that the new shipping zone has the correct name, country, and shipping status');\n      ecommerceShippingSettings.getShippingZoneTable().within(function () {\n        ecommerceShippingSettings.getShippingZone(4).should('contain', 'Quantity Rate Shipping').and('contain', 'China').within(function () {\n          cy.get('td').eq(1).should('contain', 'On');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":6969,"startedAt":"2021-01-12T13:44:50.204Z","screenshots":[]}]},{"title":["Create shipping methods","Creation of each shipping method","should create a new shipping zone with a weight-based method"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('update-shipping-list');\n\n      var shippingZoneData = {\n        name: 'Weight Rate Shipping',\n        shippingCodes: {\n          continentCodes: [{\n            name: 'rest-of-the-world'\n          }]\n        },\n        shippingMethod: {\n          methodType: 'weight',\n          name: 'ROTW - Weight Rate Shipping',\n          rate: ['1', '100', '5']\n        }\n      };\n      cy.step(\"Click the 'Add shipping zone'\");\n      newShippingZone = ecommerceShippingSettings.clickAddShippingZoneButton();\n      cy.step('Fill in the shipping zone form');\n      newShippingZone.fill(shippingZoneData, false);\n      cy.step('Wait on the shipping list to update');\n      cy.wait('@update-shipping-list');\n      cy.step('Assert that the new shipping zone has the correct name, country, and shipping status');\n      ecommerceShippingSettings.getShippingZoneTable().within(function () {\n        ecommerceShippingSettings.getShippingZone(5).should('contain', 'Rest of the World').and('contain', '189 countries').within(function () {\n          cy.get('td').eq(1).should('contain', 'On');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":5310,"startedAt":"2021-01-12T13:44:57.179Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/shipping-methods-creation.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/shipping-methods-creation.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/shipping-methods-creation.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":18750,"startedAt":"2021-01-12T13:45:09.680Z","endedAt":"2021-01-12T13:45:28.430Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:45:09.684Z","end":"2021-01-12T13:45:28.458Z","duration":18774},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Add a new shipping zone","Add a shipping zone","should add a new shipping zone"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('update-shipping-list');\n\n      cy.step('click to open the settings panel and open Ecommerce Setting');\n      ecommerceShippingSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab().clickEcommSetting('Shipping');\n      cy.step(\"Click the 'Add shipping zone'\");\n      var newShippingZone = ecommerceShippingSettings.clickAddShippingZoneButton();\n      cy.get('.bem-Heading').contains('New shipping zone').should('be.visible');\n      var shippingZoneData = {\n        name: 'Test Zone 1',\n        shippingCodes: {\n          countryCodes: ['DZ']\n        }\n      };\n      cy.step('Fill in the shipping zone form');\n      newShippingZone.fill(shippingZoneData, false);\n      cy.step('Wait on the shipping list to update');\n      cy.wait('@update-shipping-list');\n      cy.step('Assert that the new shipping zone has the correct name and country');\n      ecommerceShippingSettings.getShippingZoneTable().within(function () {\n        ecommerceShippingSettings.getShippingZone(1).should('contain', 'Test Zone 1').and('contain', 'Algeria');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13774,"startedAt":"2021-01-12T13:45:14.654Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/shipping-zone-creation.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/shipping-zone-creation.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/shipping-zone-creation.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":19845,"startedAt":"2021-01-12T13:45:35.289Z","endedAt":"2021-01-12T13:45:55.134Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:45:35.291Z","end":"2021-01-12T13:45:55.138Z","duration":19847},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.activatedStoreInfoRequired);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Adding store information creates a domestic shipping zone","Add store info and assert that a domestic shipping zone is created","should submit a complete store information to access the general Ecommerce settings"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.validateBusinessAddress).as('business-address');\n\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.updateCommerceSettings).as('update-settings');\n\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.getDatabaseItems).as('get-data-items'); //info for the store information form\n\n\n      var storeInfo = {\n        addressee: 'Test',\n        line1: '1234 Example St',\n        city: 'San Diego',\n        state: 'CA',\n        postalCode: '91911'\n      };\n      cy.step('click to open the Ecommerce settings panel');\n      ecommerceSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab();\n      var storeSetupModal = ecommerceSettings.getEcomSettingsSetupModal();\n      cy.step('Assert that the store info required modal is visible');\n      storeSetupModal.getStoreInfoModal().should('be.visible');\n      cy.step('Click continue to open the Ecommerce store setup modal');\n      storeSetupModal.getContinueButton().click();\n      cy.step('Assert that the store info modal is open');\n      storeSetupModal.assertStoreSetupModal();\n      cy.step('Fill the store info form and submit the form');\n      storeSetupModal.fill(storeInfo).submitForm();\n      cy.step('Wait for endpoints');\n      cy.wait(['@business-address', '@update-settings', '@get-data-items']);\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14907,"startedAt":"2021-01-12T13:45:40.066Z","screenshots":[]}]},{"title":["Adding store information creates a domestic shipping zone","Add store info and assert that a domestic shipping zone is created","should assert that the domestic shipping zone is visible in the shipping zones table"],"state":"passed","body":"function () {\n      cy.step('Assert that the Domestic shipping zone is visible within the shipping zones table');\n      var shippingSettings = ecommerceSettings.clickEcommSetting('Shipping');\n      shippingSettings.getShippingZoneTable().within(function () {\n        cy.get('tr').eq(0).should('contain', 'Domestic Shipping').and('contain', 'United States');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":149,"startedAt":"2021-01-12T13:45:54.984Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/store-info-domestic-shipping-creation.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/store-info-domestic-shipping-creation.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/shipping-settings/store-info-domestic-shipping-creation.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":18275,"startedAt":"2021-01-12T13:46:02.458Z","endedAt":"2021-01-12T13:46:20.733Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:46:02.461Z","end":"2021-01-12T13:46:20.736Z","duration":18275},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.multipleCountries);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Ecommerce Taxes Settings Test","Auto Taxes","should assert that the tax countries have auto tax on or off (depending on the country)"],"state":"passed","body":"function () {\n      cy.step('Click to open the Ecommerce settings panel');\n      ecommerceSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab();\n      cy.step('Click the taxes button in the ecommerce settings panel');\n      ecommerceTaxesSettings = ecommerceSettings.clickEcommSetting('Taxes');\n      cy.step('Get the first row of tax countries');\n      ecommerceTaxesSettings.getTaxCountryRow('AO').within(function () {\n        cy.step('Assert that the auto tax calculation status is set to Off');\n        ecommerceTaxesSettings.getAutoTaxCalcStatus().should('contain', 'Off');\n      });\n      cy.step('Get the second row of tax countries');\n      ecommerceTaxesSettings.getTaxCountryRow('GB').within(function () {\n        cy.step('Assert that the auto tax calculation status is set to On');\n        ecommerceTaxesSettings.getAutoTaxCalcStatus().should('contain', 'On');\n      });\n      cy.step('Get the third row of tax countries');\n      ecommerceTaxesSettings.getTaxCountryRow('US').within(function () {\n        cy.step('Assert that the auto tax calculation status is set to On');\n        ecommerceTaxesSettings.getAutoTaxCalcStatus().should('contain', 'On');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12126,"startedAt":"2021-01-12T13:46:07.417Z","screenshots":[]}]},{"title":["Ecommerce Taxes Settings Test","Auto Taxes","should assert that auto tax calculation can be toggled and saved for a country"],"state":"passed","body":"function () {\n      cy.step('Click the country (United States) row');\n      cy.getByDataAutomationId(\"tax-country-row-US\").click();\n      cy.step('Toggle auto tax caluclation');\n      cy.getByDataAutomationId('commerceSettings-currentAutoTaxCountry.taxJarEnabled-input-outer').click();\n      cy.step('Save changes');\n      cy.getByDataAutomationId(\"taxes-country-settings-save-button\").click();\n      ecommerceTaxesSettings.getTaxCountryRow('US').within(function () {\n        cy.step('Assert that the auto tax calculation status is set to Off for US');\n        ecommerceTaxesSettings.getAutoTaxCalcStatus().should('contain', 'Off');\n      });\n      cy.step('Assert that the user is back in the main Taxes panel');\n      cy.getByDataAutomationId(\"commerce-settings-section\").should('contain', 'Taxes');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":858,"startedAt":"2021-01-12T13:46:19.561Z","screenshots":[]}]},{"title":["Ecommerce Taxes Settings Test","Auto Taxes","should assert that the user is in the main Taxes panel after navigating away from tax settings for a country and then back to Taxes"],"state":"passed","body":"function () {\n      cy.step('Click the country (United States) row');\n      cy.getByDataAutomationId(\"tax-country-row-US\").click();\n      cy.step('Assert that the user is in tax settings for the United States');\n      cy.getByDataAutomationId(\"commerce-settings-section\").should('contain', 'United States');\n      cy.step('Click the Shipping button in the ecommerce settings panel');\n      ecommerceSettings.clickEcommSetting('Shipping');\n      cy.step('Click the Taxes button in the ecommerce settings panel');\n      ecommerceSettings.clickEcommSetting('Taxes');\n      cy.step('Assert that the user is in the main Taxes panel');\n      cy.getByDataAutomationId(\"commerce-settings-section\").should('contain', 'Taxes');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":312,"startedAt":"2021-01-12T13:46:20.420Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/taxes-settings/auto-taxes.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/taxes-settings/auto-taxes.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/taxes-settings/auto-taxes.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":19758,"startedAt":"2021-01-12T13:46:27.752Z","endedAt":"2021-01-12T13:46:47.510Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:46:27.754Z","end":"2021-01-12T13:46:47.514Z","duration":19760},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.basicSite);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Ecommerce Taxes Settings Test","Tax countries are created only after a shipping zone is created","should assert that the US (domestic shipping) is on the list of tax countries while Angola is not"],"state":"passed","body":"function () {\n      cy.step('Click to open the Ecommerce settings panel');\n      ecommerceSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab();\n      cy.step('Click to open the taxes panel');\n      var ecommerceTaxesSettings = ecommerceSettings.clickEcommSetting('Taxes');\n      cy.step('Assert the tax countries match the shipping zone countries');\n      ecommerceTaxesSettings.getTaxCountryRow('US').should('be.visible');\n      ecommerceTaxesSettings.getTaxCountryRow('AO').should('not.exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12151,"startedAt":"2021-01-12T13:46:32.630Z","screenshots":[]}]},{"title":["Ecommerce Taxes Settings Test","Tax countries are created only after a shipping zone is created","should create a new shipping method using a non-US country"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('update-shipping-country');\n\n      cy.step('Click to open the shipping panel');\n      var ecommerceShippingSettings = ecommerceSettings.clickEcommSetting('Shipping');\n      cy.step(\"Click the 'Add shipping zone'\");\n      newShippingZone = ecommerceShippingSettings.clickAddShippingZoneButton();\n      var shippingZoneData = {\n        name: 'Test Zone 1',\n        shippingCodes: {\n          countryCodes: ['AO']\n        }\n      };\n      cy.step('Fill in the shipping zone form');\n      newShippingZone.fill(shippingZoneData, false);\n      cy.step('Wait for the update-shipping-country endpoint');\n      cy.wait('@update-shipping-country');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2293,"startedAt":"2021-01-12T13:46:44.791Z","screenshots":[]}]},{"title":["Ecommerce Taxes Settings Test","Tax countries are created only after a shipping zone is created","should assert that the countries list in the tax settings panel contains both the US and Angola"],"state":"passed","body":"function () {\n      cy.step(\"Assert that the Domestic Shipping zone contains 'United States'\");\n      cy.getByDataAutomationId('name').eq(0).should('contain', 'United States');\n      cy.step(\"Assert that Test Zone 1 contains 'Angola'\");\n      cy.getByDataAutomationId('name').eq(1).should('contain', 'Angola');\n      cy.step('Click to open the taxes panel');\n      var ecommerceTaxesSettings = ecommerceSettings.clickEcommSetting('Taxes');\n      cy.step('Assert the tax countries match the shipping zone countries');\n      ecommerceTaxesSettings.getTaxCountryRow('AO').should('be.visible');\n      ecommerceTaxesSettings.getTaxCountryRow('US').should('be.visible');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":423,"startedAt":"2021-01-12T13:46:47.085Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/taxes-settings/tax-country-creation.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/taxes-settings/tax-country-creation.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/taxes-settings/tax-country-creation.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":3,"passes":3,"pending":0,"skipped":0,"failures":0,"duration":23200,"startedAt":"2021-01-12T13:46:54.538Z","endedAt":"2021-01-12T13:47:17.738Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":3,"passes":3,"pending":0,"failures":0,"start":"2021-01-12T13:46:54.540Z","end":"2021-01-12T13:47:17.741Z","duration":23201},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.basicSite);\n    cy.step('Click to open the Ecommerce settings panel');\n    ecommerceSettings = workspace.getLeftSidebar().clickSettingsButton().clickEcommerceTab();\n    cy.step('Click the taxes button in the ecommerce settings panel');\n    ecommerceTaxesSettings = ecommerceSettings.clickEcommSetting('Taxes');\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Ecommerce Taxes Settings Test","Nexus Address","should assert that the default nexus address is the same as the business address"],"state":"passed","body":"function () {\n      cy.step('Assert that the nexus address is the same as the premade business address');\n      ecommerceTaxesSettings.getNexusAddress(0).should('contain', 'None of Your (Business)').should('contain', '123 No Way').should('contain', 'Albany, NY 12345').should('contain', 'United States');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12294,"startedAt":"2021-01-12T13:46:59.389Z","screenshots":[]}]},{"title":["Ecommerce Taxes Settings Test","Nexus Address","should create a new nexus address"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('PATCH', _cypressAppControls.server.paths.commerceSettings).as('add-nexus-address-list');\n\n      cy.step('Click the add address button');\n      var nexusAddressModal = ecommerceTaxesSettings.addNexusAddress();\n      cy.step('Assert that the nexus address modal is open');\n      nexusAddressModal.getNexusAddressModal().should('be.visible');\n      var nexusAddress = {\n        addressee: 'Still None of Your (Business)',\n        countryOption: 'gb',\n        line1: '76 Albert Rd',\n        city: 'North Woolwich',\n        state: 'London',\n        postalCode: 'E16 2DY'\n      };\n      nexusAddressModal.fill(nexusAddress);\n      cy.step('Wait on the nexus address list to update');\n      cy.wait('@add-nexus-address-list');\n      cy.step('Click save on the taxes settings panel');\n      ecommerceTaxesSettings.getTaxSettingsSaveButton().click();\n      cy.step('Wait on the nexus address list to update');\n      cy.wait('@add-nexus-address-list');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":5798,"startedAt":"2021-01-12T13:47:11.692Z","screenshots":[]}]},{"title":["Ecommerce Taxes Settings Test","Nexus Address","should assert that the new nexus address is the same as the one entered"],"state":"passed","body":"function () {\n      cy.step('Assert that the new nexus address is the same as the business address entered');\n      ecommerceSettings.clickEcommSetting('Taxes');\n      ecommerceTaxesSettings.getNexusAddress(1).should('contain', 'Still None of Your (Business)').should('contain', '76 Albert Rd').should('contain', 'North Woolwich, London E16 2DY').should('contain', 'United Kingdom');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":236,"startedAt":"2021-01-12T13:47:17.500Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/taxes-settings/taxes-nexus-address.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/taxes-settings/taxes-nexus-address.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/ecommerce-settings/taxes-settings/taxes-nexus-address.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":1,"passes":0,"pending":1,"skipped":0,"failures":0,"duration":243,"startedAt":"2021-01-12T13:47:24.508Z","endedAt":"2021-01-12T13:47:24.751Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":1,"passes":0,"pending":1,"failures":0,"start":"2021-01-12T13:47:24.510Z","end":"2021-01-12T13:47:24.753Z","duration":243},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Ecommerce Orders CSV Export","Can export all orders from all time"],"state":"pending","body":"","displayError":null,"attempts":[{"state":"pending","error":null,"videoTimestamp":null,"duration":231,"startedAt":"2021-01-12T13:47:24.517Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/orders/orders-csv-export.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/orders/orders-csv-export.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/orders/orders-csv-export.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":19323,"startedAt":"2021-01-12T13:47:30.836Z","endedAt":"2021-01-12T13:47:50.159Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:47:30.838Z","end":"2021-01-12T13:47:50.199Z","duration":19361},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Product Creation","Free Product Creation","should create a product"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.productSKU).as('new-product-sku');\n\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.updatedProductList).as('updated-product-list');\n\n      _cypressAppControls.server.spy('PUT', _cypressAppControls.server.paths.designerActiveTime).as('designer-active-time');\n\n      cy.step('Click to open E-commerce');\n      var ecom = workspace.getLeftSidebar().clickECommerceButton();\n      cy.step('Click to open the products panel');\n      var product = ecom.clickProductCollection();\n      cy.step('Click to create a new product');\n      var productForm = product.clickNewProductButton();\n      cy.step('Create a free product');\n      var freeProduct = {\n        name: 'Product no Price',\n        price: 0,\n        saveStatus: 'stage'\n      };\n      productForm.fill(freeProduct);\n      cy.step('Wait for the new product to post to the API');\n      cy.wait(['@new-product-sku', '@updated-product-list', '@new-product-sku', '@updated-product-list', '@updated-product-list'], {\n        timeout: 20000\n      });\n      productForm.getProductForm().should('not.exist');\n      cy.step(\"Assert that the product name typed in is 'Product no Price\");\n      product.getProduct(0).within(function () {\n        product.getProductColumn(0).should('contain', 'Product no Price');\n      });\n      cy.step('Assert that the product price typed in is correct');\n      product.getProductColumn(2).should('contain', '0.00');\n      cy.step(\"Assert that the product's description is 'Staged for Publish'\");\n      product.getProductColumn(3).should('contain', 'Staged for Publish');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14401,"startedAt":"2021-01-12T13:47:35.755Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/create-free-product.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/create-free-product.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/create-free-product.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":36828,"startedAt":"2021-01-12T13:47:57.656Z","endedAt":"2021-01-12T13:48:34.484Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:47:57.658Z","end":"2021-01-12T13:48:34.487Z","duration":36829},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.productsSingleItemSingleCategory);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Creation of a detailed product","Create a detailed new product","should create the product"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.productSKU).as('new-product-sku');\n\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.updatedProductList).as('updated-product-list');\n\n      cy.step('Click to open E-commerce');\n      var ecom = workspace.getLeftSidebar().clickECommerceButton();\n      cy.step('Click to open the products panel');\n      var product = ecom.clickProductCollection();\n      cy.step('Click to create a new product');\n      var productForm = product.clickNewProductButton();\n      cy.step('Create a new product');\n      var detailedProduct = {\n        name: 'My Detailed Product',\n        slug: 'detailed-product',\n        description: 'My Detailed Products description',\n        mainImage: true,\n        moreImages: 3,\n        price: 89.99,\n        compareAtPrice: 119.99,\n        taxClass: 'Clothing',\n        categories: [{\n          name: 'Clothes',\n          premade: true\n        }, {\n          name: 'Test Products',\n          slug: 'product-for-testing',\n          premade: false,\n          otherProducts: ['Test Product']\n        }],\n        width: 9,\n        length: 87,\n        height: 14,\n        weight: 12,\n        trackInventory: true,\n        inventoryQuantity: 1,\n        sku: '12-34-56-78-90',\n        variants: [{\n          name: 'Size',\n          options: ['S', 'L']\n        }, {\n          name: 'Colors',\n          options: ['Red', 'Blue']\n        }],\n        saveStatus: 'stage'\n      };\n      productForm.fill(detailedProduct);\n      cy.step('Wait for the endpoints of the new product and sku');\n      cy.wait(['@new-product-sku', '@updated-product-list']);\n      cy.step('Assert that the product form is closed and the Products panel is open again');\n      cy.getByDataAutomationId('cms-add-item-button').contains('New Product').should('be.visible');\n      cy.step(\"Assert that the product name typed in is 'My Detailed Product'\");\n      product.getProduct(0).within(function () {\n        product.getProductColumn(0).should('contain', 'My Detailed Product');\n      });\n      cy.step('Assert that the product price typed in is correct');\n      product.getProductColumn(2).should('contain', '89.99');\n      cy.step('Assert that the product status is correct');\n      product.getProductColumn(3).should('contain', 'Staged for Publish');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":31778,"startedAt":"2021-01-12T13:48:02.704Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/detailed-product.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/detailed-product.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/detailed-product.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":18600,"startedAt":"2021-01-12T13:48:41.627Z","endedAt":"2021-01-12T13:49:00.227Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:48:41.629Z","end":"2021-01-12T13:49:00.265Z","duration":18636},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Creation of a draft product","Create a draft product","should create the product"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.productSKU).as('new-product-sku');\n\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.updatedProductList).as('updated-product-list');\n\n      cy.step('Click to open E-commerce');\n      var ecom = workspace.getLeftSidebar().clickECommerceButton();\n      cy.step('Click to open the products panel');\n      var product = ecom.clickProductCollection();\n      cy.step('Click to create a new product');\n      var productForm = product.clickNewProductButton();\n      cy.step('Create a new product and save it as a draft');\n      var draftProduct = {\n        name: 'My Draft Product',\n        price: 9.99,\n        saveStatus: 'draft'\n      };\n      productForm.fill(draftProduct);\n      cy.step('Wait for the endpoints of the new product and sku');\n      cy.wait(['@new-product-sku', '@new-product-sku', '@updated-product-list']);\n      cy.step('Assert that the product form is closed and the Products panel is open again');\n      cy.getByDataAutomationId('cms-add-item-button').contains('New Product').should('be.visible');\n      cy.step(\"Assert that the product name typed in is 'My Draft Product\");\n      product.getProduct(0).within(function () {\n        product.getProductColumn(0).should('contain', 'My Draft Product');\n      });\n      cy.step('Assert that the product price typed in is correct');\n      product.getProductColumn(2).should('contain', '9.99');\n      cy.step('Assert that the product status is correct');\n      product.getProductColumn(3).should('contain', 'Draft');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13631,"startedAt":"2021-01-12T13:48:46.594Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/draft-product.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/draft-product.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/draft-product.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":2,"passes":2,"pending":0,"skipped":0,"failures":0,"duration":24116,"startedAt":"2021-01-12T13:49:07.315Z","endedAt":"2021-01-12T13:49:31.431Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":2,"passes":2,"pending":0,"failures":0,"start":"2021-01-12T13:49:07.320Z","end":"2021-01-12T13:49:31.444Z","duration":24124},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.noProducts);\n    cy.step('Click to open the products panel');\n    products = workspace.getLeftSidebar().clickECommerceButton().clickProductCollection();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Dummy product generation","should disable dummy product generation and new product creation during an import"],"state":"passed","body":"function () {\n    _cypressAppControls.server.spy('DELETE', _cypressAppControls.server.paths.deleteProductSKU).as('delete-product-sku');\n\n    importCSV('./ecommerce/1_product_import.csv');\n    cy.step('Verify the import button is disabled');\n    cy.getByDataAutomationId('cms-collection-import-button').should('have.attr', 'aria-disabled', 'true');\n    cy.step('Verify the New Product button is disabled');\n    cy.getByDataAutomationId('cms-add-item-button').should('have.attr', 'aria-disabled', 'true');\n    cy.step('Verify the dummy item generation buttons are disabled');\n    cy.getByDataAutomationId('cms-dummy-gen-5-button').should('have.class', 'bem-Button-disabled');\n    cy.step('Delete imported products');\n    var multiProductSelect = products.clickMultiSelectButton();\n    cy.step('Click to select all the products');\n    multiProductSelect.selectDeselectAll();\n    cy.step('Click the delete button');\n    var deleteModal = multiProductSelect.clickDeleteButton();\n    cy.step('Assert that the Delete Permanently modal is open');\n    cy.getByDataAutomationId('cms-item-row').its('length').then(function (length) {\n      deleteModal.getBulkDeleteModal(length).should('be.visible');\n    });\n    cy.step('Click the Delete Permanently button');\n    deleteModal.getPermanentDeleteButton().click();\n    cy.step('Wait for each product and its sku to be deleted from the API');\n    cy.wait('@delete-product-sku');\n    cy.step('Assert that the products are deleted');\n    cy.get(\"[data-automation-id=\\\"cms-item-row\\\"]\").should('not.exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":18113,"startedAt":"2021-01-12T13:49:12.727Z","screenshots":[]}]},{"title":["Dummy product generation","should disable importing and product creation buttons while generating dummy products"],"state":"passed","body":"function () {\n    cy.step('Generate 5 products');\n    cy.getByDataAutomationId('cms-dummy-gen-5-button').click();\n    cy.step('Verify the import button is disabled');\n    cy.getByDataAutomationId('cms-collection-import-button').should('have.attr', 'aria-disabled', 'true');\n    cy.step('Verify the New Product button is disabled');\n    cy.getByDataAutomationId('cms-add-item-button').should('have.attr', 'aria-disabled', 'true');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":575,"startedAt":"2021-01-12T13:49:30.854Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/dummy-product-generation.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/dummy-product-generation.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/dummy-product-generation.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":18121,"startedAt":"2021-01-12T13:49:38.769Z","endedAt":"2021-01-12T13:49:56.890Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:49:38.771Z","end":"2021-01-12T13:49:56.925Z","duration":18154},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    var workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n\n    sidebar = workspace.getLeftSidebar();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Enable Ecommerce, add product image","should enable ecommerce and add image successfully"],"state":"passed","body":"function () {\n    cy.step('Open Ecommerce panel');\n    var ecom = sidebar.clickECommerceButton();\n    cy.step('Enable Ecommerce');\n    var ecomSetup = ecom.getSetupModal();\n    ecomSetup.clickEnableButton();\n    cy.step('Click to open the products panel');\n    var product = ecom.clickProductCollection();\n    cy.step('Click to create a new product');\n    var productForm = product.clickNewProductButton();\n    cy.step('Create a product that has a main image');\n    var productWithImage = {\n      name: 'Product with Image',\n      price: 5,\n      mainImage: true,\n      saveStatus: 'hold'\n    };\n    productForm.fill(productWithImage);\n    cy.step('Assert image preview is visible confirming image has been uploaded without error');\n    productForm.getMainImageDropzone(false).should('be.visible');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13157,"startedAt":"2021-01-12T13:49:43.731Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/ecommerce-product-image.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/ecommerce-product-image.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/ecommerce-product-image.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":18854,"startedAt":"2021-01-12T13:50:03.930Z","endedAt":"2021-01-12T13:50:22.784Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:50:03.932Z","end":"2021-01-12T13:50:22.830Z","duration":18898},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.activatedStoreInfoRequired);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Non-Shippable Product Creation","Non-Shippable Product Creation","should create a product that does not require shipping"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.productSKU).as('new-product-sku');\n\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.updatedProductList).as('updated-product-list');\n\n      cy.step('Click to open E-commerce');\n      var ecom = workspace.getLeftSidebar().clickECommerceButton();\n      cy.step('Click to open the products panel');\n      var product = ecom.clickProductCollection();\n      cy.step('Click to create a new product');\n      var productForm = product.clickNewProductButton();\n      var nonShippableProduct = {\n        name: 'Non-shippable product',\n        price: 5,\n        notShippable: true,\n        saveStatus: 'stage'\n      };\n      productForm.fill(nonShippableProduct);\n      cy.step('Wait for the new product to post to the API');\n      cy.wait(['@new-product-sku', '@new-product-sku', '@updated-product-list']);\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13907,"startedAt":"2021-01-12T13:50:08.874Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/non-shippable-product-creation.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/non-shippable-product-creation.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/non-shippable-product-creation.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":1,"passes":1,"pending":0,"skipped":0,"failures":0,"duration":19632,"startedAt":"2021-01-12T13:50:29.949Z","endedAt":"2021-01-12T13:50:49.581Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":1,"passes":1,"pending":0,"failures":0,"start":"2021-01-12T13:50:29.953Z","end":"2021-01-12T13:50:49.585Z","duration":19632},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.onWithStoreInfo);\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Product Management","Validating the price field","should test the validation conditions of the price field"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.productSKU).as('new-product-sku');\n\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.updatedProductList).as('updated-product-list');\n\n      cy.step('Open the product manager panel');\n      var ecom = workspace.getLeftSidebar().clickECommerceButton();\n      var product = ecom.clickProductCollection();\n      cy.step('Open the new product form');\n      product.clickNewProductButton();\n      cy.step('Create a new product without a price');\n      cy.getByDataAutomationId('dyn-item-name-input').type('My Error Product');\n      cy.step('Click to create a new product');\n      cy.get('[type=\"submit\"]').click();\n      cy.step('Assert that the warning shows up for the price field');\n      cy.getByDataAutomationId('dyn-item-price-input').should('have.class', 'hasError');\n      cy.step('Assert that the warning note reads \"This field is required\"');\n      cy.get('.bem-Note').contains('This field is required');\n      cy.step('Type a number with a decimal in price field');\n      cy.getByDataAutomationId('dyn-item-price-input').clear().type('3.99');\n      cy.step('Assert that the product price field has the correct value');\n      cy.getByDataAutomationId('dyn-item-price-input').should('have.value', '3.99');\n      cy.step('Click to create a new product');\n      cy.get('[type=\"submit\"]').click();\n      cy.step('Wait for the new product endpoint');\n      cy.wait('@new-product-sku');\n      cy.step('Wait for the SKU to post to the API');\n      cy.wait('@new-product-sku');\n      cy.step('Wait for the product list to update');\n      cy.wait('@updated-product-list');\n      cy.step('Assert that the price has updated for the new product');\n      cy.step(\"Assert that the product's name is correct\");\n      product.getProduct(0).within(function () {\n        product.getProductColumn(0).should('be.visible').within(function () {\n          cy.get('.bem-Text').should('contain', 'My Error Product');\n        });\n        product.getProductColumn(2).should('be.visible').within(function () {\n          cy.get('.bem-Text').should('contain', '3.99');\n        });\n        cy.step('asserts that the new product\\'s status is \"Staged for Publish\"');\n        product.getProductColumn(3).should('be.visible').within(function () {\n          cy.get('.bem-ItemStatus').should('have.class', 'bem-ItemStatus-staged').and('contain', 'Staged for Publish');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":14583,"startedAt":"2021-01-12T13:50:34.996Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/price-validation.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/price-validation.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/price-validation.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":8,"tests":18,"passes":18,"pending":0,"skipped":0,"failures":0,"duration":55114,"startedAt":"2021-01-12T13:50:57.021Z","endedAt":"2021-01-12T13:51:52.135Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":8,"tests":18,"passes":18,"pending":0,"failures":0,"start":"2021-01-12T13:50:57.024Z","end":"2021-01-12T13:51:52.141Z","duration":55117},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.fiftyCMSItems);\n    sidebar = workspace.getLeftSidebar();\n    ecomPanel = sidebar.clickECommerceButton();\n    cmsPanel = sidebar.getCMSTab();\n    product = ecomPanel.clickProductCollection();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      cy.step('Open collections tab');\n      cmsTab = sidebar.clickCMSButton();\n      cy.step('Open collection');\n      collectionPage = cmsTab.getCollectionByName('Blog-Posts').clickCollectionTab();\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.fourtyNineCMSItems);\n    sidebar = workspace.getLeftSidebar();\n    cmsPanel = sidebar.getCMSTab();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      dataPage = sidebar.clickCMSButton().getCollectionByName('Blog-Posts').clickCollectionTab();\n\n      assertDeleteItemConfirmModal = function assertDeleteItemConfirmModal() {\n        cy.getByDataAutomationId('delete-item-confirm-modal').should('be.visible');\n      };\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.ecommerce.fourtyEightCMSItems);\n    sidebar = workspace.getLeftSidebar();\n    ecomPanel = sidebar.clickECommerceButton();\n    cmsPanel = sidebar.getCMSTab();\n    productPanel = ecomPanel.clickProductCollection();\n    productForm = productPanel.clickNewProductButton();\n\n    _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.productSKU).as('new-product-sku');\n\n    _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.updatedProductList).as('updated-product-list');\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["50 CMS Item Limits Detector","Ecommerce","can NOT create a product when at 50 CMS items"],"state":"passed","body":"function () {\n      cy.step('Click to create a new product');\n      product.clickNewProductButton();\n      cy.step('Assert that the update plan modal exists');\n      assertUpdatePlanModalExists();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12934,"startedAt":"2021-01-12T13:51:01.943Z","screenshots":[]}]},{"title":["50 CMS Item Limits Detector","Ecommerce","can NOT duplicate a product when at 50 CMS items"],"state":"passed","body":"function () {\n      cy.step('Open existing product');\n      product.clickProduct(0);\n      cy.step('Assert that the duplicate button is disabled');\n      cy.getByDataAutomationId('duplicate-product-button').should('have.class', 'bem-Button-disabled');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":661,"startedAt":"2021-01-12T13:51:14.891Z","screenshots":[]}]},{"title":["50 CMS Item Limits Detector","Ecommerce","can NOT create a category when at 50 CMS items"],"state":"passed","body":"function () {\n      cy.step('Open the category manager panel');\n      var category = ecomPanel.clickCategoryCollection();\n      cy.step('Click the new category button');\n      category.clickNewCategoryButton();\n      cy.step('Assert that the update plan modal exists');\n      assertUpdatePlanModalExists();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":393,"startedAt":"2021-01-12T13:51:15.554Z","screenshots":[]}]},{"title":["50 CMS Item Limits Detector","CMS Items","can NOT create a new CMS item when at 50 CMS items"],"state":"passed","body":"function () {\n      cy.step('Attempt to create a new item');\n      collectionPage.clickNewButton();\n      cy.step('Assert that the update plan modal exists');\n      assertUpdatePlanModalExists();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":589,"startedAt":"2021-01-12T13:51:15.949Z","screenshots":[]}]},{"title":["50 CMS Item Limits Detector","CMS Items","can NOT duplicate an existing CMS item when at 50 CMS items"],"state":"passed","body":"function () {\n      cy.step('Open existing CMS item');\n      clickCMSItemRow();\n      cy.step('Assert that the duplicate button is disabled');\n      assertDuplicateDisabled();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":283,"startedAt":"2021-01-12T13:51:16.539Z","screenshots":[]}]},{"title":["49 CMS items - create items but not products","Ecommerce","can NOT create a product when at 49 CMS items"],"state":"passed","body":"function () {\n      cy.step('Click to open E-commerce');\n      ecomPanel = sidebar.clickECommerceButton();\n      cy.step('Click to open the products panel');\n      product = ecomPanel.clickProductCollection();\n      cy.step('Click to create a new product');\n      product.clickNewProductButton();\n      cy.step('Assert that the update plan modal exists');\n      assertUpdatePlanModalExists();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9798,"startedAt":"2021-01-12T13:51:16.823Z","screenshots":[]}]},{"title":["49 CMS items - create items but not products","Ecommerce","can NOT duplicate a product when at 49 CMS items"],"state":"passed","body":"function () {\n      cy.step('Open existing product');\n      clickCMSItemRow();\n      cy.step('Assert that the duplicate button is disabled');\n      assertDuplicateDisabled();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":553,"startedAt":"2021-01-12T13:51:26.630Z","screenshots":[]}]},{"title":["49 CMS items - create items but not products","Ecommerce","can create a category (49->50 CMS items)"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.createCategory).as('create-category');\n\n      cy.step('Open the category manager panel');\n      var category = ecomPanel.clickCategoryCollection();\n      cy.step('Click the new category button');\n      var categoryForm = category.clickNewCategoryButton();\n      cy.step('Assert that the new category panel is open');\n      categoryForm.getNewCategoryForm().within(function () {\n        cy.getByDataAutomationId('panel-header').should('contain', 'New Category');\n      });\n      cy.step('Type in a name for a new category');\n      var testCategory = {\n        name: 'Test Category',\n        saveStatus: 'stage'\n      };\n      categoryForm.fill(testCategory);\n      cy.step('Wait on the create-category endpoint');\n      cy.wait('@create-category', {\n        timeout: 40000\n      });\n      cy.step('Assert that the category is created');\n      category.getCategory(0).should('be.visible').within(function () {\n        category.getCategoryColumn(0).should('contain', 'Test Category');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1943,"startedAt":"2021-01-12T13:51:27.184Z","screenshots":[]}]},{"title":["49 CMS items - create items but not products","Ecommerce","can delete the created category (50->40 CMS items)"],"state":"passed","body":"function () {\n      cy.step('Select the first category');\n      clickCMSItemRow();\n      cy.step('Click the delete button');\n      cy.get('.bem-Button-risk').click();\n      cy.step('Assert that the Delete Permanently modal is open');\n      cy.getByDataAutomationId('delete-item-confirm-modal').should('be.visible');\n      cy.step('Click the Delete Permanently button');\n      cy.get('.bem-Button-danger').click();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":517,"startedAt":"2021-01-12T13:51:29.131Z","screenshots":[]}]},{"title":["49 CMS items - create items but not products","CMS Items","can create a new item (49->50 CMS items)"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.updatedProductList).as('collection-items-list');\n\n      cy.step('Assert that the CMS item manager panel is open');\n      cy.getByDataAutomationId('cms-collection-table').should('be.visible');\n      cy.step('Click the new collection item button');\n      var form = dataPage.clickNewButton();\n      cy.step('Input the name for the collection item, then click the create button');\n      form.fill({\n        name: 'A'\n      }).clickSaveButton();\n      cy.step('Wait for server response');\n      cy.wait('@collection-items-list');\n      cy.step('Assert that there are two blog posts');\n      dataPage.getItemListRow().should('have.length', 2);\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1278,"startedAt":"2021-01-12T13:51:29.649Z","screenshots":[]}]},{"title":["49 CMS items - create items but not products","CMS Items","can delete the created item (50->49 CMS items)"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('DELETE', _cypressAppControls.server.paths.deleteProductSKU).as('delete-collection-item'); // delete the category to reset the limit\n\n\n      cy.step('Select the first item');\n      clickCMSItemRow();\n      cy.step('Click the delete button');\n      cmsItem.getDataPage().getItemEditPane().clickDeleteButton();\n      cy.step('Assert that the Delete Permanently modal is open');\n      assertDeleteItemConfirmModal();\n      cy.step('Click the Delete Permanently button');\n      cy.get('.bem-Button-danger').click();\n      cy.step('Assert that there is one blog post');\n      dataPage.getItemListRow().should('have.length', 1);\n      cy.step('Wait for server response');\n      cy.wait('@delete-collection-item');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":533,"startedAt":"2021-01-12T13:51:30.933Z","screenshots":[]}]},{"title":["49 CMS items - create items but not products","CMS Items","can duplicate an existing item (49->50 CMS items)"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.updatedProductList).as('collection-items-list');\n\n      cy.step('Open existing item');\n      clickCMSItemRow();\n      cy.step('Duplicate item');\n      getDuplicateButton().should('not.be.disabled').click();\n      cy.step('Click submit to create the duplicated item');\n      dataPage.getItemEditPane().clickSaveButton();\n      cy.step('Assert that there are two blog posts');\n      getCMSItemRow().should('have.length', 2);\n      cy.step('Wait for server response');\n      cy.wait('@collection-items-list');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":689,"startedAt":"2021-01-12T13:51:31.467Z","screenshots":[]}]},{"title":["49 CMS items - create items but not products","CMS Items","can delete the duplicated item (50->49 CMS items)"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('DELETE', _cypressAppControls.server.paths.deleteProductSKU).as('delete-collection-item');\n\n      cy.step('Assert that there are two blog posts');\n      getCMSItemRow().should('have.length', 2); // delete the category to reset the limit\n\n      cy.step('Select the first item');\n      clickCMSItemRow();\n      cy.step('Click the delete button');\n      cmsItem.getDataPage().getItemEditPane().clickDeleteButton();\n      cy.step('Assert that the Delete Permanently modal is open');\n      assertDeleteItemConfirmModal();\n      cy.step('Click the Delete Permanently button');\n      cy.get('.bem-Button-danger').click();\n      cy.step('Assert that there is one blog post');\n      getCMSItemRow().should('have.length', 1);\n      cy.step('Wait for server response');\n      cy.wait('@delete-collection-item');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":556,"startedAt":"2021-01-12T13:51:32.158Z","screenshots":[]}]},{"title":["48 CMS items - create items and products","Ecommerce","can create a product (48->50 CMS items)"],"state":"passed","body":"function () {\n      cy.step('Create a new product');\n      var simpleProduct = {\n        name: 'My Simple Product',\n        price: 9.99,\n        saveStatus: 'stage'\n      };\n      productForm.fill(simpleProduct);\n      cy.step('Wait for the new product to post to the API');\n      cy.wait(['@new-product-sku', '@new-product-sku', '@updated-product-list']);\n      cy.step('Assert that the price has updated for the new product');\n      productPanel.getProduct(0).within(function () {\n        productPanel.getProductColumn(2).should('be.visible').within(function () {\n          cy.get('.bem-Text').should('contain', '$');\n        });\n      });\n      cy.step(\"Assert that the product was created\");\n      productPanel.getProduct(0).within(function () {\n        productPanel.getProductColumn(0).should('contain', 'My Simple Product');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13273,"startedAt":"2021-01-12T13:51:32.716Z","screenshots":[]}]},{"title":["48 CMS items - create items and products","Ecommerce","can delete the created product (50->48 CMS items)"],"state":"passed","body":"function () {\n      // delete the product to reset the limit\n      cy.step('Select the first product');\n      clickCMSItemRow();\n      cy.step('Click the delete button');\n      cy.get('.bem-Button-risk').click();\n      cy.step('Assert that the Delete Permanently modal is open');\n      assertDeleteItemConfirmModal();\n      cy.step('Click the Delete Permanently button');\n      cy.get('.bem-Button-danger').click();\n      cy.step('Assert that there are four products');\n      getCMSItemRow().should('have.length', 4);\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1988,"startedAt":"2021-01-12T13:51:46.006Z","screenshots":[]}]},{"title":["48 CMS items - create items and products","Ecommerce","can duplicate a product that has 0 variants (48->50 CMS items)"],"state":"passed","body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.itemCreation).as('item-creation');\n\n      _cypressAppControls.server.spy('GET', _cypressAppControls.server.paths.cmsItems).as('cms-item-creation');\n\n      cy.step('Assert that there are four products');\n      getCMSItemRow().should('have.length', 4);\n      cy.step('Open existing product with 0 variants');\n      clickCMSItemRow(1);\n      cy.step('Duplicate product');\n      getDuplicateButton().should('not.be.disabled').click();\n      productForm.getFormField('name').should('have.value', '0 Variants Copy');\n      cy.step('Click submit to create the duplicated product');\n      cmsItem.getDataPage().getItemEditPane().clickSaveButton();\n      cy.step('Wait on server endpoints');\n      cy.wait(['@item-creation', '@cms-item-creation']);\n      cy.step('Assert that the product form is no longer visible');\n      productForm.getProductForm().should('not.exist');\n      cy.step(\"Assert that the product was duplicated\");\n      productPanel.getProduct(0).within(function () {\n        productPanel.getProductColumn(0).should('contain', '0 Variants Copy');\n      });\n      cy.step(\"Assert that the product's price is correct\");\n      productPanel.getProduct(0).within(function () {\n        productPanel.getProductColumn(2).should('contain.html', '$&nbsp;1.00&nbsp;USD');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2589,"startedAt":"2021-01-12T13:51:48.002Z","screenshots":[]}]},{"title":["48 CMS items - create items and products","Ecommerce","can delete the duplicated product (50->48 CMS items)"],"state":"passed","body":"function () {\n      // delete the product to reset the limit\n      cy.step('Select the first product');\n      clickCMSItemRow();\n      cy.step('Click the delete button');\n      cmsItem.getDataPage().getItemEditPane().clickDeleteButton();\n      cy.step('Assert that the Delete Permanently modal is open');\n      assertDeleteItemConfirmModal();\n      cy.step('Click the Delete Permanently button');\n      cy.get('.bem-Button-danger').click();\n      cy.step('Assert that there are four products');\n      getCMSItemRow().should('have.length', 4);\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":934,"startedAt":"2021-01-12T13:51:50.597Z","screenshots":[]}]},{"title":["48 CMS items - create items and products","Ecommerce","can NOT duplicate a product that has variants when at 48 CMS items"],"state":"passed","body":"function () {\n      cy.step('Assert that there are four products');\n      getCMSItemRow().should('have.length', 4);\n      cy.step('Open existing product with 3 variants');\n      clickCMSItemRow(2);\n      cy.step('Assert that the correct product is open');\n      productForm.getFormField('name').should('have.value', '3 Variants');\n      assertDuplicateDisabled();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":601,"startedAt":"2021-01-12T13:51:51.533Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/product-cms-limits.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/product-cms-limits.spec.js","absolute":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/entrypoints/designer/client/ui-tests/ecommerce/products/product-creation/product-cms-limits.spec.js","specType":"integration"},"shouldUploadVideo":false}],"browserPath":"/chromium64/chrome-linux/chrome","browserName":"chromium","browserVersion":"74.0.3729.0","osName":"linux","osVersion":"Debian - 9.13","cypressVersion":"6.2.1","config":{"env":{"baseUrl":"http://wfdev.io:3030","stagingSuperDomain":"dev.webflowtest.io","User-Agent":"cypress","RECORD_KEY":"f9ae3...c4cf9"},"integrationFolder":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow","configFile":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/cypress.json","version":"6.2.1","chromeWebSecurity":false,"browser":"chromium","video":false,"videoUploadOnPasses":false,"viewportWidth":1440,"viewportHeight":900,"defaultCommandTimeout":30000,"numTestsKeptInMemory":0,"ignoreTestFiles":"*.quarantined.spec.js","testFiles":"**/*.spec.js","fileServerFolder":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config","fixturesFolder":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/fixtures","pluginsFile":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/plugins/index.js","screenshotsFolder":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/screenshots","supportFile":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/support/index.js","videosFolder":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/videos","retries":{"runMode":2,"openMode":0},"projectId":"xfhtj7","reporter":"../../../node_modules/cypress-multi-reporters","reporterOptions":{"configFile":"reporter-config.json"},"projectRoot":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config","projectName":"cypress-config","morgan":false,"isTextTerminal":true,"socketId":"2vfvy","report":true,"browsers":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"animationDistanceThreshold":5,"autoOpen":false,"baseUrl":null,"blockHosts":null,"clientRoute":"/__/","componentFolder":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/cypress/component","execTimeout":60000,"experimentalComponentTesting":false,"experimentalFetchPolyfill":false,"experimentalRunEvents":false,"experimentalSourceRewriting":false,"firefoxGcInterval":{"runMode":1,"openMode":null},"hosts":null,"includeShadowDom":false,"javascripts":[],"modifyObstructiveCode":true,"namespace":"__cypress","nodeVersion":"default","pageLoadTimeout":60000,"port":41105,"reporterRoute":"/__cypress/reporter","requestTimeout":5000,"responseTimeout":30000,"screenshotOnRunFailure":true,"socketIoRoute":"/__socket.io","socketIoCookie":"__socket.io","taskTimeout":60000,"trashAssetsBeforeRuns":true,"userAgent":null,"videoCompression":32,"waitForAnimations":true,"scrollBehavior":"top","watchForFileChanges":false,"xhrRoute":"/xhrs/","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"baseUrl":{"value":null,"from":"default"},"blockHosts":{"value":null,"from":"default"},"browsers":{"value":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"from":"default"},"chromeWebSecurity":{"value":false,"from":"config"},"componentFolder":{"value":"cypress/component","from":"default"},"defaultCommandTimeout":{"value":30000,"from":"config"},"env":{"baseUrl":{"value":"http://wfdev.io:3030","from":"plugin"},"User-Agent":{"value":"cypress","from":"config"},"RECORD_KEY":{"value":"f9ae3...c4cf9","from":"env"},"stagingSuperDomain":{"value":"dev.webflowtest.io","from":"plugin"}},"execTimeout":{"value":60000,"from":"default"},"experimentalComponentTesting":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalRunEvents":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"fileServerFolder":{"value":"./","from":"config"},"firefoxGcInterval":{"value":{"runMode":1,"openMode":null},"from":"default"},"fixturesFolder":{"value":"./fixtures","from":"config"},"hosts":{"value":null,"from":"default"},"ignoreTestFiles":{"value":"*.quarantined.spec.js","from":"config"},"includeShadowDom":{"value":false,"from":"default"},"integrationFolder":{"value":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow","from":"plugin"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"value":"default","from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"pageLoadTimeout":{"value":60000,"from":"default"},"pluginsFile":{"value":"./plugins/index.js","from":"config"},"port":{"value":null,"from":"default"},"projectId":{"value":"xfhtj7","from":"config"},"reporter":{"value":"../../../node_modules/cypress-multi-reporters","from":"cli"},"reporterOptions":{"value":{"configFile":"reporter-config.json"},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":2,"openMode":0},"from":"config"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"./screenshots","from":"config"},"supportFile":{"value":"./support/index.js","from":"config"},"taskTimeout":{"value":60000,"from":"default"},"testFiles":{"value":"**/*.spec.js","from":"config"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"config"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"./videos","from":"config"},"videoUploadOnPasses":{"value":false,"from":"config"},"viewportHeight":{"value":900,"from":"config"},"viewportWidth":{"value":1440,"from":"config"},"waitForAnimations":{"value":true,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"configFile":{"value":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/cypress.json","from":"plugin"},"version":{"value":"6.2.1","from":"plugin"}},"parentTestsFolder":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/cypress","parentTestsFolderDisplay":"cypress-config/cypress","supportFolder":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/support","integrationExampleName":"examples","integrationExamplePath":"/scratch/buildkite-agent-c32b3248-54da-11eb-97fa-4a22e55b2d68-4jdlt/webflow/webflow/packages/tooling/cypress-config/cypress/integration/examples","scaffoldedFiles":[{"name":"cypress","children":[{"name":"integration","children":[{"name":"examples","children":[{"name":"actions.spec.js"},{"name":"aliasing.spec.js"},{"name":"assertions.spec.js"},{"name":"connectors.spec.js"},{"name":"cookies.spec.js"},{"name":"cypress_api.spec.js"},{"name":"files.spec.js"},{"name":"local_storage.spec.js"},{"name":"location.spec.js"},{"name":"misc.spec.js"},{"name":"navigation.spec.js"},{"name":"network_requests.spec.js"},{"name":"querying.spec.js"},{"name":"spies_stubs_clocks.spec.js"},{"name":"traversal.spec.js"},{"name":"utilities.spec.js"},{"name":"viewport.spec.js"},{"name":"waiting.spec.js"},{"name":"window.spec.js"}]}]}]},{"name":"fixtures","children":[{"name":"example.json"}]},{"name":"support","children":[{"name":"commands.js"},{"name":"index.js"}]},{"name":"plugins","children":[{"name":"index.js"}]}],"resolvedNodeVersion":"12.18.3","state":{},"proxyUrl":"http://localhost:41105","browserUrl":"http://localhost:41105/__/","reporterUrl":"http://localhost:41105/__cypress/reporter","xhrUrl":"__cypress/xhrs/"},"status":"finished"}]