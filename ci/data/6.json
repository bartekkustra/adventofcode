[{"startedTestsAt":"2021-01-12T13:40:11.724Z","endedTestsAt":"2021-01-12T13:47:04.484Z","totalDuration":362714,"totalSuites":26,"totalTests":62,"totalFailed":0,"totalPassed":62,"totalPending":0,"totalSkipped":0,"runs":[{"stats":{"suites":4,"tests":4,"passes":4,"pending":0,"skipped":0,"failures":0,"duration":34649,"startedAt":"2021-01-12T13:40:11.724Z","endedAt":"2021-01-12T13:40:46.373Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":4,"tests":4,"passes":4,"pending":0,"failures":0,"start":"2021-01-12T13:40:11.729Z","end":"2021-01-12T13:40:46.377Z","duration":34648},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      _cypressAppControls.api.upgradePlan();\n\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.empty);\n      sidebar = workspace.getLeftSidebar();\n      newCollectionForm = sidebar.clickCMSButton().clickCreateNewCMSButton();\n    }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n      workspace.escapeAllUiPanels();\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.databaseCreation).as('database-creation');\n\n      _cypressAppControls.server.spy('POST', _cypressAppControls.server.paths.collectionCreation).as('collection-creation');\n\n      _cypressAppControls.server.spy('PUT', _cypressAppControls.server.paths.pageSwitch).as('page-switch');\n\n      _cypressAppControls.server.spy('PUT', _cypressAppControls.server.paths.pageSwitchSecrets).as('page-switch-secrets');\n\n      sidebar = workspace.getLeftSidebar();\n      cy.step('Open Collection Manager and the Cars collection');\n      var newCollectionForm = sidebar.clickCMSButton().clickCreateNewCMSButton();\n      newCollectionForm.getName().type('Cars');\n      newCollectionForm.clickCreateCollectionButton();\n      cy.step('Wait for the server responses');\n      cy.wait(['@database-creation', '@collection-creation', '@page-switch', '@page-switch-secrets']);\n      carSettings = sidebar.getCMSTab().getCollectionByName('Cars').clickSettingsButton();\n      carSettings.getCustomFieldsCounter().should('be.visible').and('contain', '30/30 fields left.');\n    }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n      _cypressAppControls.server.spy('PUT', _cypressAppControls.server.paths.pageSwitch).as('page-switch');\n\n      _cypressAppControls.server.spy('PUT', _cypressAppControls.server.paths.pageSwitchSecrets).as('page-switch-secrets');\n\n      cy.step('Close the Collection Manager');\n      carSettings.clickSaveCollectionButton();\n      cy.step('Wait for the server responses');\n      cy.wait(['@page-switch', '@page-switch-secrets']);\n      workspace.escapeAllUiPanels();\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.emptyCollectionMaxCustomFields);\n      sidebar = workspace.getLeftSidebar();\n      cy.step('Open Collection Manager and the Cars collection');\n      carSettings = sidebar.clickCMSButton().getCollectionByName('Cars').clickSettingsButton();\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS","Scenario: New Collections should start with 30/30 custom fields available","should assert that the new collection form is open and assert that a new collection starts with 30/30 custom fields available"],"state":"passed","body":"function () {\n      cy.step('Assert the custom fields counter is visible');\n      newCollectionForm.getCustomFieldsCounter().should('be.visible').and('contain', '30/30 fields left.');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":12336,"startedAt":"2021-01-12T13:40:17.408Z","screenshots":[]}]},{"title":["CMS","Scenario: Creating a custom field decreases the counter / Removing a custom field increases the counter","should add a custom field and assert that the custom fields counter decreases by one"],"state":"passed","body":"function () {\n      var plainTextField = {\n        label: 'Custom text'\n      };\n      cy.step('Click to add a custom plain text field');\n      var fieldOptions = carSettings.clickAddFieldButton();\n      fieldOptions.clickOption('PlainText').fill(plainTextField).clickSaveButton();\n      cy.step('Assert that the custom fields list now has the custom text field');\n      carSettings.getCustomFieldsList().should('be.visible').and('contain', 'Custom text');\n      cy.step('Assert that the fields counter now reads \"29/30 fields left.\"');\n      carSettings.getCustomFieldsCounter().should('contain', '29/30 fields left.');\n      cy.step('Close the Collection Manager');\n      carSettings.clickSaveCollectionButton();\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":4200,"startedAt":"2021-01-12T13:40:29.762Z","screenshots":[]}]},{"title":["CMS","Scenario: Creating a custom field decreases the counter / Removing a custom field increases the counter","should remove a custom field and assert that the custom fields counter increases by one"],"state":"passed","body":"function () {\n      cy.step('Click to add a custom plain text field');\n      sidebar.getCMSTab().getCollectionByName('Cars').clickSettingsButton();\n      carSettings.clickCustomField('Custom text').remove();\n      cy.step('Assert that the custom fields list no longer has the custom text field');\n      carSettings.getCustomFieldsList().should('not.be.visible');\n      cy.step('Assert that the fields counter now reads \"30/30 fields left.\"');\n      carSettings.getCustomFieldsCounter().should('contain', '30/30 fields left.');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1561,"startedAt":"2021-01-12T13:40:33.974Z","screenshots":[]}]},{"title":["CMS","Scenario: Unable to create a new custom field once 30 have been created","should assert that the cuastom fields counter reads \"0/30 fields left.\" and the Add New Field button is disabled"],"state":"passed","body":"function () {\n      cy.step('Assert that the fields counter now reads \"0/30 fields left.\"');\n      carSettings.getCustomFieldsCounter().should('contain', '0/30 fields left.');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10825,"startedAt":"2021-01-12T13:40:35.540Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-collection-fields-counter.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-collection-fields-counter.spec.js","absolute":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-collection-fields-counter.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":2,"tests":4,"passes":4,"pending":0,"skipped":0,"failures":0,"duration":32358,"startedAt":"2021-01-12T13:40:54.007Z","endedAt":"2021-01-12T13:41:26.365Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":2,"tests":4,"passes":4,"pending":0,"failures":0,"start":"2021-01-12T13:40:54.010Z","end":"2021-01-12T13:41:26.398Z","duration":32388},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n    canvas = workspace.getCanvas();\n    miniSettings = canvas.miniSettings;\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS Smoke Test - Create A Collection List and bound it to Multi-Image Field","Collection List","Can add collection list and bind it to a multi-image field"],"state":"passed","body":"function () {\n      cy.step('Go to `Cars` template page');\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Cars Template');\n      cy.step('Add Collection List');\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper');\n      workspace.getRightPanel().getStylesTab().selector.setClassNames(['cy-list']);\n      cy.step('Click collection binding dropdown in mini settings');\n      var collectionSettings = canvas.getCollectionListSettings();\n      collectionSettings.source.click();\n      collectionSettings.source.clickOption('Gallery (Multi-image)');\n      cy.step('Close mini-settings');\n      canvas.miniSettings.close();\n      cy.step('Go to Settings Panel in the right panel');\n      propertiesTab = workspace.getRightPanel().clickPropertiesTab();\n      cy.step('Assert binding to `Cars` on the dropdown in settings panel');\n      propertiesTab.getNode().within(function () {\n        cy.get(\"[data-automation-id=\\\"dyn-dropdown\\\"]\").should('contain', 'Gallery');\n      });\n      cy.step('Assert collection list items has the correct amount of items');\n      canvas.within(function () {\n        cy.get('.w-dyn-items').children().should('have.length', 3);\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":17893,"startedAt":"2021-01-12T13:40:59.812Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create A Collection List and bound it to Multi-Image Field","Collection List","Can add an image inside a collection item and bind it to the multi-image field"],"state":"passed","body":"function () {\n      cy.step('Select collection item to add image to it');\n      canvas.selectElement('.w-dyn-items > div:nth-of-type(1)').click();\n      cy.step('Add an Image into the first Dynamic Item node');\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('Image');\n      workspace.getRightPanel().clickStylesTab().selector.setClassNames(['cy-list-image']);\n      cy.step('Switch to Settings tab');\n      workspace.getRightPanel().clickPropertiesTab();\n      cy.step('Check that static Alt text input is visible in both settings tab and mini settings');\n      propertiesTab.imageSettings.getAltSection().should('exist').and('be.visible');\n      miniSettings.imageSettings.getAltSection().should('exist').and('be.visible');\n      cy.step('Alt text mini note is not visible in settings tab or mini settings');\n      propertiesTab.imageSettings.getMultiImageAltNote().should('not.exist');\n      miniSettings.imageSettings.getMultiImageAltNote().should('not.exist');\n      cy.step('Check that dynamic Alt text binding is not allowed in settings tab or mini settings');\n      propertiesTab.imageSettings.getDynamicAltBinding().should('not.exist');\n      miniSettings.imageSettings.getDynamicAltBinding().should('not.exist');\n      cy.step('In the Mini Settings, press the checkbox next to \"Get Image from Cars\"');\n      binding = miniSettings.getBinding(0);\n      binding.click();\n      binding.field.click();\n      binding.field.clickOption('Gallery');\n      cy.step('Check that static Alt text input is no longer visible in settings tab or mini settings');\n      miniSettings.imageSettings.getAltSection().should('not.exist');\n      propertiesTab.imageSettings.getAltSection().should('not.exist');\n      cy.step('Multi image Alt text mini note is visible');\n      propertiesTab.imageSettings.getMultiImageAltNote().should('exist').and('be.visible');\n      miniSettings.imageSettings.getMultiImageAltNote().should('exist').and('be.visible');\n      cy.step('Close mini-settings');\n      canvas.miniSettings.close();\n      cy.step('Assert collection list items have images with src and alt attributes');\n      canvas.within(function () {\n        cy.get('.w-dyn-items > div:nth-of-type(1) > img').should(function ($img) {\n          expect($img.attr('src')).to.match(/car-side/);\n          expect($img.attr('alt')).to.match(/mercedes/i);\n        });\n        cy.get('.w-dyn-items > div:nth-of-type(2) > img').should(function ($img) {\n          expect($img.attr('src')).to.match(/car-front/);\n          expect($img.attr('alt')).to.equal('');\n        });\n        cy.get('.w-dyn-items > div:nth-of-type(3) > img').should(function ($img) {\n          expect($img.attr('src')).to.match(/car-angle/);\n          expect($img.attr('alt')).to.equal('');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3685,"startedAt":"2021-01-12T13:41:17.720Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create A Collection List and bound it to Multi-Image Field","Collection List","Can add a div inside a collection item and bind its background-image to the multi-image field"],"state":"passed","body":"function () {\n      cy.step('Add a div into the first Dynamic Item node');\n      canvas.selectElement('.w-dyn-items > div:nth-of-type(1)').click();\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DivBlock');\n      workspace.getRightPanel().clickStylesTab().selector.setClassNames(['cy-list-block']);\n      cy.step('In the Collection Style Settings area, make sure only `Get BG Image from Cars` is available\"');\n      workspace.getRightPanel().clickPropertiesTab();\n      binding = propertiesTab.dynamicStyleSettings.getBinding(0);\n      workspace.getRightPanel().getPropertiesTab().getNode().within(function () {\n        cy.get(\"[data-automation-id=\\\"dyn-style-settings\\\"]\").children().should('have.length', 1);\n      });\n      cy.step('In the Collection Style Settings area, enable \"Get BG Image from Cars\"');\n      binding.click();\n      binding.field.click();\n      binding.field.clickOption('Gallery');\n      cy.step('Assert div inside list item has background-image set');\n      canvas.within(function () {\n        cy.get('.w-dyn-items > div:nth-of-type(1) > div').should('have.css', 'background-image').then(function (href) {\n          expect(href).to.include('car-side');\n        });\n        cy.get('.w-dyn-items > div:nth-of-type(2) > div').should('have.css', 'background-image').then(function (href) {\n          expect(href).to.include('car-front');\n        });\n        cy.get('.w-dyn-items > div:nth-of-type(3) > div').should('have.css', 'background-image').then(function (href) {\n          expect(href).to.include('car-angle');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3731,"startedAt":"2021-01-12T13:41:21.406Z","screenshots":[]}]},{"title":["CMS Smoke Test - Create A Collection List and bound it to Multi-Image Field","Collection List","Can add a background image bound to multi-image field to the Collection List Item"],"state":"passed","body":"function () {\n      cy.step('Select Collection List Item');\n      canvas.selectElement('.w-dyn-items > div:nth-of-type(1)').click();\n      cy.get('body').type('{uparrow}'); // traversing to collection list item\n\n      cy.step('Switch to Settings Tab');\n      workspace.getRightPanel().clickPropertiesTab();\n      cy.step('In the Collection Style Settings area, make sure only `Get BG Image from Cars` is available\"');\n      workspace.getRightPanel().clickPropertiesTab();\n      binding = propertiesTab.dynamicStyleSettings.getBinding(0);\n      workspace.getRightPanel().getPropertiesTab().getNode().within(function () {\n        cy.get(\"[data-automation-id=\\\"dyn-style-settings\\\"]\").children().should('have.length', 1);\n      });\n      cy.step('In the Collection Style Settings area, enable \"Get BG Image from Cars\"');\n      binding.click();\n      binding.field.click();\n      binding.field.clickOption('Gallery');\n      cy.step('Assert the dyn item has background-image set');\n      canvas.within(function () {\n        cy.get('.w-dyn-items > div:nth-of-type(1)').should('have.css', 'background-image').then(function (href) {\n          expect(href).to.include('car-side');\n        });\n        cy.get('.w-dyn-items > div:nth-of-type(2)').should('have.css', 'background-image').then(function (href) {\n          expect(href).to.include('car-front');\n        });\n        cy.get('.w-dyn-items > div:nth-of-type(3)').should('have.css', 'background-image').then(function (href) {\n          expect(href).to.include('car-angle');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1225,"startedAt":"2021-01-12T13:41:25.138Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-dynamic-bound-multi-image.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-dynamic-bound-multi-image.spec.js","absolute":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-dynamic-bound-multi-image.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":4,"tests":10,"passes":10,"pending":0,"skipped":0,"failures":0,"duration":47391,"startedAt":"2021-01-12T13:41:34.154Z","endedAt":"2021-01-12T13:42:21.545Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":4,"tests":10,"passes":10,"pending":0,"failures":0,"start":"2021-01-12T13:41:34.158Z","end":"2021-01-12T13:42:21.550Z","duration":47392},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      cy.step('Add Collection List');\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('DynamoWrapper');\n      workspace.getRightPanel().clickStylesTab().selector.setClassNames(['cy-list']);\n      cy.step('Click collection binding dropdown');\n      var collectionSettings = canvas.getCollectionListSettings();\n      collectionSettings.source.click();\n      collectionSettings.source.clickOption('Cars');\n      cy.step('Add Lightbox into first Dynamic Item node');\n      canvas.selectElement('.w-dyn-items > div:nth-of-type(1)');\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('LightboxWrapper');\n      workspace.getRightPanel().clickStylesTab().selector.setClassNames(['cy-list-lightbox']);\n    }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n      cy.step('Delete Collection List');\n      canvas.selectElement('.cy-list');\n      cy.get('body').type('{backspace}');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      cy.step('Navigate to Cars Collection Template');\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Cars Template');\n      cy.step('Add Lightbox into page.');\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('LightboxWrapper');\n    }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n      canvas.selectElement('.w-lightbox');\n      cy.get('body').type('{backspace}');\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Home');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      cy.step('Deselect all nodes');\n      workspace.escapeAllUiPanels();\n      cy.step('Add Lightbox into page.');\n      workspace.getLeftSidebar().clickAddElementButton().clickBuiltinTab().clickOption('LightboxWrapper');\n      workspace.getRightPanel().clickStylesTab().selector.setClassNames(['cy-lightbox-static']);\n    }"},{"hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n      canvas.selectElement('.cy-lightbox-static');\n      cy.get('body').type('{backspace}');\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS Test - Dynamic Lightbox Image Binding","Inside Collection List","Can see a dynamic binding checkbox in Lightbox Settings"],"state":"passed","body":"function () {\n      cy.step('Open Settings Tab');\n      propertiesTab = workspace.getRightPanel().clickPropertiesTab();\n      action.closeStylesPanelSection('Conditional Visibility');\n      action.closeStylesPanelSection('Custom Attributes');\n      action.closeStylesPanelSection('Search Index');\n      propertiesTab.getNode().within(function () {\n        cy.get(\"[data-automation-id=\\\"dyn-field-select-media\\\"]\").children().should('have.length', 1);\n      });\n      lightboxSettings = propertiesTab.lightboxSettings;\n      lightboxSettings.getBinding(0).getNode().should('exist').and('be.visible');\n      lightboxSettings.getMediaButton().should('exist').and('be.visible');\n      lightboxSettings.getVideoButton().should('exist').and('be.visible');\n      lightboxSettings.getMediaList().should('not.exist');\n      lightboxSettings.getMediaEmptyList().should('exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":21631,"startedAt":"2021-01-12T13:41:39.579Z","screenshots":[]}]},{"title":["CMS Test - Dynamic Lightbox Image Binding","Inside Collection List","Can use the checkbox to bind Picture as Lightbox content"],"state":"passed","body":"function () {\n      cy.step('Assert Lightbox Wrappers inside collection list items do not have content.');\n      canvas.within(function () {\n        cy.get('.cy-list-lightbox .w-json').should('not.exist');\n      });\n      cy.step('Check that the Choose Image button opens the assets panel');\n      cy.get('#assets-tab').should('not.exist');\n      cy.get('.lightbox-add-image').click();\n      cy.get('[aria-label=\"Choose asset button\"]').click();\n      cy.get('#assets-tab').should('exist');\n      cy.get('[data-automation-id=\"lightbox-image-close\"').click();\n      workspace.getLeftSidebar().clickAssetsButton();\n      workspace.getTopbar().clickUndo();\n      cy.get(_cypressAppControls.GetElement.byAutomationId('lightbox-settings')).within(function () {\n        cy.step('Click dynamic binding checkbox in Lightbox Settings.');\n        var binding = lightboxSettings.getBinding(0);\n        binding.click();\n        binding.field.click();\n        binding.field.clickOption('Picture');\n        cy.step('Assert normal Lightbox content controls are no longer visible.');\n        lightboxSettings.getMediaButton().should('not.exist');\n        lightboxSettings.getVideoButton().should('not.exist');\n        lightboxSettings.getMediaList().should('not.exist');\n        lightboxSettings.getMediaEmptyList().should('not.exist');\n      });\n      cy.step('Assert Lightbox Wrappers inside collection list items have content.');\n      cy.wait(1000); // wait so that the iframe contents have time to update\n\n      canvas.within(function () {\n        cy.get('.cy-list-lightbox .w-json').each(function ($script) {\n          var json = JSON.parse($script.text());\n          cy.wrap(json).should('have.property', 'items');\n          cy.wrap(json.items).should('have.length', 1);\n          cy.wrap(json.items[0]).should('have.property', 'url');\n          cy.wrap(json.items[0]).should('have.property', 'type');\n          cy.wrap(json.items[0].type).should('equal', 'image');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3239,"startedAt":"2021-01-12T13:42:01.236Z","screenshots":[]}]},{"title":["CMS Test - Dynamic Lightbox Image Binding","Inside Collection List","Can undo the binding addition"],"state":"passed","body":"function () {\n      cy.step('Undo');\n      cy.focused().blur();\n      workspace.getTopbar().clickUndo();\n      lightboxSettings.getBinding(0).getNode().should('exist');\n      lightboxSettings.getMediaButton().should('exist');\n      lightboxSettings.getVideoButton().should('exist');\n      lightboxSettings.getMediaList().should('not.exist');\n      lightboxSettings.getMediaEmptyList().should('exist');\n      cy.step('Assert Lightbox Wrappers inside collection list items no longer have content.');\n      cy.wait(1000); // wait so that the iframe contents have time to update\n\n      canvas.within(function () {\n        cy.get('.cy-list-lightbox .w-json').should('not.exist');\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1284,"startedAt":"2021-01-12T13:42:04.495Z","screenshots":[]}]},{"title":["CMS Test - Dynamic Lightbox Image Binding","Inside Collection List","Can redo the binding addition"],"state":"passed","body":"function () {\n      cy.step('Redo');\n      workspace.getTopbar().clickRedo();\n      lightboxSettings.getMediaButton().should('not.exist');\n      lightboxSettings.getVideoButton().should('not.exist');\n      lightboxSettings.getMediaList().should('not.exist');\n      lightboxSettings.getMediaEmptyList().should('not.exist');\n      cy.step('Assert Lightbox Wrappers inside collection list items have content.');\n      cy.wait(1000); // wait so that the iframe contents have time to update\n\n      canvas.within(function () {\n        cy.get('.cy-list-lightbox .w-json').each(function ($script) {\n          var json = JSON.parse($script.text());\n          cy.wrap(json).should('have.property', 'items');\n          cy.wrap(json.items).should('have.length', 1);\n          cy.wrap(json.items[0]).should('have.property', 'url');\n          cy.wrap(json.items[0]).should('have.property', 'type');\n          cy.wrap(json.items[0].type).should('equal', 'image');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1765,"startedAt":"2021-01-12T13:42:05.784Z","screenshots":[]}]},{"title":["CMS Test - Dynamic Lightbox Image Binding","Inside Collection List","Can use the checkbox to remove binding of Picture as Lightbox content"],"state":"passed","body":"function () {\n      lightboxSettings.getBinding(0).click();\n      lightboxSettings.getMediaButton().should('exist').and('be.visible');\n      lightboxSettings.getVideoButton().should('exist').and('be.visible');\n      cy.step('Assert Lightbox Wrappers inside collection list items no longer have content.');\n      cy.wait(1000); // wait so that the iframe contents have time to update\n\n      canvas.within(function () {\n        cy.get('.cy-list-lightbox .w-json').each(function ($script) {\n          var json = JSON.parse($script.text());\n          cy.wrap(json).should('have.property', 'items');\n          cy.wrap(json.items).should('be.empty');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1318,"startedAt":"2021-01-12T13:42:07.559Z","screenshots":[]}]},{"title":["CMS Test - Dynamic Lightbox Image Binding","Inside Collection List","Can use the checkbox to bind Video as Lightbox content"],"state":"passed","body":"function () {\n      var binding = lightboxSettings.getBinding(0);\n      binding.click();\n      lightboxSettings.getMediaButton().should('exist').and('be.visible');\n      lightboxSettings.getVideoButton().should('exist').and('be.visible');\n      lightboxSettings.getMediaEmptyList().should('exist').and('be.visible');\n      binding.field.click();\n      binding.field.clickOption('Video');\n      cy.step('Assert normal Lightbox content controls are no longer visible.');\n      lightboxSettings.getMediaButton().should('not.exist');\n      lightboxSettings.getVideoButton().should('not.exist');\n      lightboxSettings.getMediaEmptyList().should('not.exist');\n      cy.step('Assert Lightbox Wrappers inside collection list items have content.');\n      cy.wait(1000); // wait so that the iframe contents have time to update\n\n      canvas.within(function () {\n        cy.get('.cy-list-lightbox .w-json').each(function ($script) {\n          var json = JSON.parse($script.text());\n          cy.wrap(json).should('have.property', 'items');\n          cy.wrap(json.items).should('have.length', 1);\n          cy.wrap(json.items[0]).should('have.property', 'url');\n          cy.wrap(json.items[0]).should('have.property', 'type');\n          cy.wrap(json.items[0].type).should('equal', 'video');\n          cy.wrap(json.items[0]).should('have.property', 'html');\n          cy.wrap(json.items[0]).should('have.property', 'height');\n          cy.wrap(json.items[0]).should('have.property', 'width');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2705,"startedAt":"2021-01-12T13:42:08.883Z","screenshots":[]}]},{"title":["CMS Test - Dynamic Lightbox Image Binding","Inside Collection Template","Can see a dynamic binding checkbox in Lightbox Settings"],"state":"passed","body":"function () {\n      cy.step('Open Settings Tab');\n      propertiesTab = workspace.getRightPanel().clickPropertiesTab();\n      lightboxSettings = propertiesTab.lightboxSettings;\n      var binding = lightboxSettings.getBinding(0);\n      cy.step('Assert Lightbox Settings has dynamic binding checkbox.');\n      binding.getNode().should('exist').and('be.visible');\n      cy.step('Assert normal Lightbox content controls are visible.');\n      lightboxSettings.getMediaButton().should('exist').and('be.visible');\n      lightboxSettings.getVideoButton().should('exist').and('be.visible');\n      lightboxSettings.getMediaEmptyList().should('exist').and('be.visible');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2020,"startedAt":"2021-01-12T13:42:11.721Z","screenshots":[]}]},{"title":["CMS Test - Dynamic Lightbox Image Binding","Inside Collection Template","Can use the checkbox to bind Picture as Lightbox content"],"state":"passed","body":"function () {\n      cy.step('Assert Lightbox Wrapper in Template does not have content.');\n      canvas.within(function () {\n        cy.get('.w-lightbox .w-json').should('not.exist');\n      });\n      cy.step('Click dynamic binding checkbox in Lightbox Settings.');\n      var binding = lightboxSettings.getBinding(0);\n      binding.click();\n      cy.step('Assert normal Lightbox content controls are still visible.');\n      lightboxSettings.getMediaButton().should('exist').and('be.visible');\n      lightboxSettings.getVideoButton().should('exist').and('be.visible');\n      lightboxSettings.getMediaEmptyList().should('exist').and('be.visible');\n      cy.step('Select `Picture` from the dropdown.');\n      binding.field.click();\n      binding.field.clickOption('Picture');\n      cy.step('Assert normal Lightbox content controls are no longer visible.');\n      lightboxSettings.getMediaButton().should('not.exist');\n      lightboxSettings.getVideoButton().should('not.exist');\n      lightboxSettings.getMediaEmptyList().should('not.exist');\n      cy.step('Assert Lightbox Wrapper in Template has content.');\n      cy.wait(1000); // wait so that the iframe contents have time to update\n\n      canvas.within(function () {\n        cy.get('.w-lightbox .w-json').then(function ($script) {\n          var json = JSON.parse($script.text());\n          cy.wrap(json).should('have.property', 'items');\n          cy.wrap(json.items).should('have.length', 1);\n          cy.wrap(json.items[0]).should('have.property', 'url');\n          cy.wrap(json.items[0]).should('have.property', 'type');\n          cy.wrap(json.items[0].type).should('equal', 'image');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1529,"startedAt":"2021-01-12T13:42:13.742Z","screenshots":[]}]},{"title":["CMS Test - Dynamic Lightbox Image Binding","Inside Collection Template","Can use the checkbox to remove binding of Picture as Lightbox content"],"state":"passed","body":"function () {\n      cy.step('Assert normal Lightbox content controls are not visible.');\n      lightboxSettings.getMediaButton().should('not.exist');\n      lightboxSettings.getVideoButton().should('not.exist');\n      lightboxSettings.getMediaEmptyList().should('not.exist');\n      cy.step('Click dynamic binding checkbox in Lightbox Settings.');\n      var binding = lightboxSettings.getBinding(0);\n      binding.click();\n      cy.step('Assert normal Lightbox content controls are again visible.');\n      lightboxSettings.getMediaButton().should('exist').and('be.visible');\n      lightboxSettings.getVideoButton().should('exist').and('be.visible');\n      lightboxSettings.getMediaEmptyList().should('exist').and('be.visible');\n      cy.step('Assert Lightbox Wrappers inside collection list items no longer have content.');\n      cy.wait(1000); // wait so that the iframe contents have time to update\n\n      canvas.within(function () {\n        cy.get('.w-lightbox .w-json').then(function ($script) {\n          var json = JSON.parse($script.text());\n          cy.wrap(json).should('have.property', 'items');\n          cy.wrap(json.items).should('be.empty');\n        });\n      });\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3086,"startedAt":"2021-01-12T13:42:15.279Z","screenshots":[]}]},{"title":["CMS Test - Dynamic Lightbox Image Binding","Inside Non-Collection Context","Cannot see a dynamic binding checkbox in Lightbox Settings"],"state":"passed","body":"function () {\n      cy.step('Open Settings Tab');\n      propertiesTab = workspace.getRightPanel().clickPropertiesTab();\n      lightboxSettings = propertiesTab.lightboxSettings;\n      cy.step('Assert Lightbox Settings has no dynamic binding checkbox.');\n      lightboxSettings.getDynamicBinding().should('not.exist');\n      cy.step('Assert normal Lightbox content controls are visible.');\n      lightboxSettings.getMediaButton().should('exist').and('be.visible');\n      lightboxSettings.getVideoButton().should('exist').and('be.visible');\n      lightboxSettings.getMediaEmptyList().should('exist').and('be.visible');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3132,"startedAt":"2021-01-12T13:42:18.411Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-dynamic-lightbox-media-binding.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-dynamic-lightbox-media-binding.spec.js","absolute":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-dynamic-lightbox-media-binding.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":11,"tests":8,"passes":8,"pending":0,"skipped":0,"failures":0,"duration":28491,"startedAt":"2021-01-12T13:42:29.292Z","endedAt":"2021-01-12T13:42:57.783Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":11,"tests":8,"passes":8,"pending":0,"failures":0,"start":"2021-01-12T13:42:29.295Z","end":"2021-01-12T13:42:57.808Z","duration":28513},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    var workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsPreviewLinks);\n\n    canvas = workspace.getCanvas();\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n      cy.step('Switch to preview mode');\n      cy.getByDataAutomationId('preview-mode-button').click();\n      cy.step('Set initial url');\n      cy.url().then(function (url) {\n        initialUrl = url;\n      });\n    }"},{"hookName":"after each","title":["\"after each\" hook"],"body":"function () {\n      cy.step('Get out of preview mode');\n      cy.getByDataAutomationId('preview-mode-button').click();\n      cy.step('Open pages menu');\n      cy.getByDataAutomationId('top-bar-page-name').click();\n      cy.step('Go back to home page');\n      cy.getByDataAutomationId('home-page').click();\n    }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n      cy.step('Switch to preview mode');\n      cy.getByDataAutomationId('preview-mode-button').click();\n      cy.step('Set initial url');\n      cy.url().then(function (url) {\n        initialUrl = url;\n      });\n    }"},{"hookName":"after each","title":["\"after each\" hook"],"body":"function () {\n      cy.step('Get out of preview mode');\n      cy.getByDataAutomationId('preview-mode-button').click();\n      cy.step('Open pages menu');\n      cy.getByDataAutomationId('top-bar-page-name').click();\n      cy.step('Go back to home page');\n      cy.getByDataAutomationId('home-page').click();\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Dynamic Links in Preview","when a collection item in a collection list has a static page link","when the link is a text link","should link to the static page"],"state":"passed","body":"function () {\n        canvas.within(function () {\n          cy.step('Get link text and click link');\n          cy.get('.w-dyn-item').then(function (collectionItems) {\n            return collectionItems[0];\n          }).find('[data-automation-id=\"static-page-links\"]').find('a.link').then(function (a) {\n            linkText = a.text();\n          }).click().then(function () {\n            cy.step('Assert that url has changed');\n            cy.url().should('not.eq', initialUrl).and('include', 'pageId=');\n            cy.step('Assert that heading text exists');\n            cy.get('h1').should('have.text', linkText);\n          });\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":13906,"startedAt":"2021-01-12T13:42:34.867Z","screenshots":[]}]},{"title":["Dynamic Links in Preview","when a collection item in a collection list has a static page link","when the link is a button","should link to the static page"],"state":"passed","body":"function () {\n        canvas.within(function () {\n          cy.step('Get link text and click link');\n          cy.get('.w-dyn-item').then(function (collectionItems) {\n            return collectionItems[0];\n          }).find('[data-automation-id=\"static-page-links\"]').find('a.w-button').then(function (a) {\n            linkText = a.text();\n          }).click().then(function () {\n            cy.step('Assert that url has changed');\n            cy.url().should('not.eq', initialUrl).and('include', 'pageId=');\n            cy.step('Assert that heading text exists');\n            cy.get('h1').should('have.text', linkText);\n          });\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1270,"startedAt":"2021-01-12T13:42:48.785Z","screenshots":[]}]},{"title":["Dynamic Links in Preview","when a collection item in a collection list has a static page link","when the link is a text block","should link to the static page"],"state":"passed","body":"function () {\n        canvas.within(function () {\n          cy.step('Get link text and click link');\n          cy.get('.w-dyn-item').then(function (collectionItems) {\n            return collectionItems[0];\n          }).find('[data-automation-id=\"static-page-links\"]').find('a.link-block.w-inline-block div').then(function (a) {\n            linkText = a.text();\n          }).click().then(function () {\n            cy.step('Assert that url has changed');\n            cy.url().should('not.eq', initialUrl).and('include', 'pageId=');\n            cy.step('Assert that heading text exists');\n            cy.get('h1').should('have.text', linkText);\n          });\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1210,"startedAt":"2021-01-12T13:42:50.056Z","screenshots":[]}]},{"title":["Dynamic Links in Preview","when a collection item in a collection list has a static page link","when the link is in a rich text block","should link to the static page"],"state":"passed","body":"function () {\n        canvas.within(function () {\n          cy.step('Get link text and click link');\n          cy.get('.w-dyn-item').then(function (collectionItems) {\n            return collectionItems[0];\n          }).find('[data-automation-id=\"static-page-links\"]').find('.w-richtext a').then(function (a) {\n            linkText = a.text();\n          }).click().then(function () {\n            cy.step('Assert that url has changed');\n            cy.url().should('not.eq', initialUrl).and('include', 'pageId=');\n            cy.step('Assert that heading text exists');\n            cy.get('h1').should('have.text', linkText);\n          });\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1238,"startedAt":"2021-01-12T13:42:51.267Z","screenshots":[]}]},{"title":["Dynamic Links in Preview","when a collection item in a collection list has a dynpage link","when the link is a text link","should link to the item page"],"state":"passed","body":"function () {\n        canvas.within(function () {\n          cy.step('Get item name and click link');\n          cy.get('.w-dyn-item').then(function (collectionItems) {\n            return collectionItems[0];\n          }).find('[data-automation-id=\"dynpage-links\"]').find('a.link').then(function (a) {\n            itemName = a.text();\n          }).click().then(function () {\n            cy.step('Assert that url has changed');\n            cy.url().should('not.eq', initialUrl).and('include', 'itemId=').and('include', 'pageId=');\n            cy.step('Assert that heading text exists');\n            cy.get('h1').should('have.text', itemName);\n          });\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1171,"startedAt":"2021-01-12T13:42:52.507Z","screenshots":[]}]},{"title":["Dynamic Links in Preview","when a collection item in a collection list has a dynpage link","when the link is a button","should link to the item page"],"state":"passed","body":"function () {\n        canvas.within(function () {\n          cy.step('Get item name and click link');\n          cy.get('.w-dyn-item').then(function (collectionItems) {\n            return collectionItems[0];\n          }).find('[data-automation-id=\"dynpage-links\"]').find('a.w-button').then(function (a) {\n            itemName = a.text();\n          }).click().then(function () {\n            cy.step('Assert that url has changed');\n            cy.url().should('not.eq', initialUrl).and('include', 'itemId=').and('include', 'pageId=');\n            cy.step('Assert that heading text exists');\n            cy.get('h1').should('have.text', itemName);\n          });\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1074,"startedAt":"2021-01-12T13:42:53.681Z","screenshots":[]}]},{"title":["Dynamic Links in Preview","when a collection item in a collection list has a dynpage link","when the link is a text block","should link to the item page"],"state":"passed","body":"function () {\n        canvas.within(function () {\n          cy.step('Get item name and click link');\n          cy.get('.w-dyn-item').then(function (collectionItems) {\n            return collectionItems[0];\n          }).find('[data-automation-id=\"dynpage-links\"]').find('a.link-block.w-inline-block div').then(function (a) {\n            itemName = a.text();\n          }).click().then(function () {\n            cy.step('Assert that url has changed');\n            cy.url().should('not.eq', initialUrl).and('include', 'itemId=').and('include', 'pageId=');\n            cy.step('Assert that heading text exists');\n            cy.get('h1').should('have.text', itemName);\n          });\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1307,"startedAt":"2021-01-12T13:42:54.757Z","screenshots":[]}]},{"title":["Dynamic Links in Preview","when a collection item in a collection list has a dynpage link","when the link is in a rich text block","should link to the item page"],"state":"passed","body":"function () {\n        canvas.within(function () {\n          cy.step('Get item name and click link');\n          cy.get('.w-dyn-item').then(function (collectionItems) {\n            return collectionItems[0];\n          }).find('[data-automation-id=\"dynpage-links\"]').find('.w-richtext a').then(function (a) {\n            itemName = a.text();\n          }).click().then(function () {\n            cy.step('Assert that url has changed');\n            cy.url().should('not.eq', initialUrl).and('include', 'itemId=').and('include', 'pageId=');\n            cy.step('Assert that heading text exists');\n            cy.get('h1').should('have.text', itemName);\n          });\n        });\n      }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1715,"startedAt":"2021-01-12T13:42:56.066Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-dynamic-links-in-preview.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-dynamic-links-in-preview.spec.js","absolute":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-dynamic-links-in-preview.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":4,"passes":4,"pending":0,"skipped":0,"failures":0,"duration":25790,"startedAt":"2021-01-12T13:43:09.074Z","endedAt":"2021-01-12T13:43:34.864Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":4,"passes":4,"pending":0,"failures":0,"start":"2021-01-12T13:43:09.076Z","end":"2021-01-12T13:43:34.868Z","duration":25792},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n    sidebar = workspace.getLeftSidebar();\n    cmsTab = sidebar.clickCMSButton();\n    settingsTab = cmsTab.getCollectionByName('Cars').clickSettingsButton();\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS_COLLECTION editable name field","should allow editing the name label and help text"],"state":"passed","body":"function () {\n    name = _faker[\"default\"].random.word();\n\n    var helpText = _faker[\"default\"].random.word(3);\n\n    cy.step('Select Name field and assert its settings are open');\n    fieldOptions = settingsTab.clickBasicInfoField('Name');\n    fieldOptions.getLabel('label').should('be.visible');\n    cy.step('Change the label and help text');\n    fieldOptions.getLabel('label').clear().type(name);\n    fieldOptions.getLabel('help-text').clear().type(helpText);\n    cy.step('Save field and assert fields list now contain new name');\n    fieldOptions.clickSaveButton();\n    settingsTab.getBasicInfoFieldsList().should('contain', name);\n    cy.step('Go to name field settings and assert helpText value');\n    fieldOptions = settingsTab.clickBasicInfoField(name);\n    fieldOptions.getLabel('help-text').should('have.value', helpText);\n    fieldOptions.clickCancelButton();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":15694,"startedAt":"2021-01-12T13:43:16.325Z","screenshots":[]}]},{"title":["CMS_COLLECTION editable name field","should display validation error if attempting to use a reserved word"],"state":"passed","body":"function () {\n    fieldOptions = settingsTab.clickBasicInfoField(name);\n    fieldOptions.getLabel('label').clear().type('Slug').blur();\n    fieldOptions.getError().should('exist');\n    fieldOptions.getError().should('have.text', 'Slug is a reserved value.');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":746,"startedAt":"2021-01-12T13:43:32.031Z","screenshots":[]}]},{"title":["CMS_COLLECTION editable name field","should not display a validation error if attempting to use the original reserved word for the field"],"state":"passed","body":"function () {\n    cy.step('Change label back to \"Name\"');\n    fieldOptions.getLabel('label').clear().type('Name').blur();\n    cy.step('Assert error no longer exists');\n    fieldOptions.getError().should('not.exist');\n    cy.step('Save changes');\n    fieldOptions.clickSaveButton();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":584,"startedAt":"2021-01-12T13:43:32.778Z","screenshots":[]}]},{"title":["CMS_COLLECTION editable name field","should not affect the naming of custom fields"],"state":"passed","body":"function () {\n    name = _faker[\"default\"].random.word();\n\n    var wordForOtherInput = _faker[\"default\"].random.word();\n\n    fieldOptions = settingsTab.clickBasicInfoField('Name');\n    fieldOptions.getLabel('label').should('be.visible');\n    fieldOptions.getLabel('label').clear().type(name);\n    fieldOptions.clickSaveButton();\n    settingsTab.getBasicInfoFieldsList().should('contain', name);\n    fieldOptions = settingsTab.clickCustomField('Year');\n    fieldOptions.getLabel('label').should('be.visible');\n    fieldOptions.getLabel('label').clear().type(wordForOtherInput);\n    fieldOptions.clickSaveButton();\n    settingsTab.getCustomFieldsList().should('contain', wordForOtherInput);\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1498,"startedAt":"2021-01-12T13:43:33.364Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-editable-name-field.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-editable-name-field.spec.js","absolute":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-editable-name-field.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":3,"tests":25,"passes":25,"pending":0,"skipped":0,"failures":0,"duration":148954,"startedAt":"2021-01-12T13:43:43.175Z","endedAt":"2021-01-12T13:46:12.129Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":3,"tests":25,"passes":25,"pending":0,"failures":0,"start":"2021-01-12T13:43:43.177Z","end":"2021-01-12T13:46:12.134Z","duration":148957},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      _cypressAppControls.api.upgradePlan();\n\n      var workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsEmbedTokenOptions);\n\n      workspace.getLeftSidebar().clickPagesTab().switchPage('CMS items Template');\n      pageSettings = workspace.getLeftSidebar().clickPagesTab().openPageSettings('CMS items Template');\n      tokenInput = new _cypressAppControls.TokenFieldInput(cy, 'page-seo-title-field');\n    }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n      _cypressAppControls.api.upgradePlan();\n\n      var workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsEmbedTokenOptions);\n\n      workspace.getLeftSidebar().clickPagesTab().switchPage('Products Template');\n      pageSettings = workspace.getLeftSidebar().clickPagesTab().openPageSettings('Products Template');\n      tokenInput = new _cypressAppControls.TokenFieldInput(cy, 'page-seo-title-field');\n    }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["CMS Embed token options","Collection Template page settings","should add the variable when typing in the short-hand token"],"state":"passed","body":"function () {\n      tokenInput.fill('{{name}}', {\n        parseSpecialCharSequences: false\n      });\n      pageSettings.getSeoTitlePreview().should('have.text', 'Why We Love Webflow (And You Should, Too!)');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Name'\n      }]);\n      tokenInput.expectValueToBe('{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":16933,"startedAt":"2021-01-12T13:43:50.000Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should add the variable when typing in the token"],"state":"passed","body":"function () {\n      tokenInput.fill('{{wf {\"path\":\"slug\",\"type\":\"PlainText\"\\\\} }}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.fill('{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', {\n        parseSpecialCharSequences: false\n      });\n      pageSettings.getSeoTitlePreview().should('have.text', 'Why We Love Webflow (And You Should, Too!)why-we-love-webflow-and-you-should-toowhy-we-love-webflow-and-you-should-too');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Name'\n      }, {\n        type: 'token',\n        text: 'Slug'\n      }, {\n        type: 'token',\n        text: 'Slug'\n      }]);\n      tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n      tokenInput.fill('{backspace}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":19768,"startedAt":"2021-01-12T13:44:06.949Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should allow adding external tokens"],"state":"passed","body":"function () {\n      var externalToken = '{\\\\{external}}';\n      tokenInput.fill(externalToken, {\n        parseSpecialCharSequences: false\n      });\n      pageSettings.getSeoTitlePreview().should('have.text', 'Why We Love Webflow (And You Should, Too!)why-we-love-webflow-and-you-should-too{{external}}');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Name'\n      }, {\n        type: 'token',\n        text: 'Slug'\n      }, {\n        type: 'text',\n        text: '{\\\\{external}}'\n      }]);\n      tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{\\\\{external}}'].join(''));\n      tokenInput.fill(\"{end}\".concat('{backspace}'.repeat(externalToken.length)));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3845,"startedAt":"2021-01-12T13:44:26.724Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should mark invalid tokens"],"state":"passed","body":"function () {\n      var invalidToken = '{{invalid}}';\n      tokenInput.fill(invalidToken, {\n        parseSpecialCharSequences: false\n      });\n      pageSettings.getSeoTitlePreview().should('have.text', 'Why We Love Webflow (And You Should, Too!)why-we-love-webflow-and-you-should-too');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Name'\n      }, {\n        type: 'token',\n        text: 'Slug'\n      }, {\n        type: 'invalid',\n        text: '{{invalid}}'\n      }]);\n      tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{invalid}}'].join(''));\n      tokenInput.fill(\"{end}\".concat('{backspace}'.repeat(invalidToken.length)));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3608,"startedAt":"2021-01-12T13:44:30.578Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should show correct token variables for SEO title in the Add Field dropdown"],"state":"passed","body":"function () {\n      addFieldDropdown = tokenInput.clickAddField(); // This menu uses virtual scrolling so we only expect to see the first\n      // 18 options. The token option menu that opens when clicking the token\n      // itself still shows all the variable options, so we test there that\n      // all the correct options are always available.\n\n      addFieldDropdown.expectTokenOptionsToHaveLabels(COLLECTION_TOKEN_OPTION_LABELS.slice(0, 18));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":298,"startedAt":"2021-01-12T13:44:34.191Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should add the variable to input when clicking the dropdown option"],"state":"passed","body":"function () {\n      addFieldDropdown.clickTokenOptionThatContains('Number field');\n      pageSettings.getSeoTitlePreview().should('have.text', 'Why We Love Webflow (And You Should, Too!)why-we-love-webflow-and-you-should-too46928');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Name'\n      }, {\n        type: 'token',\n        text: 'Slug'\n      }, {\n        type: 'token',\n        text: 'Number field'\n      }]);\n      tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;number-field&quot;,&quot;type&quot;:&quot;Number&quot;\\\\} }}'].join(''));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":334,"startedAt":"2021-01-12T13:44:34.490Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should show correct token variables and \"Delete Field\" when click a token"],"state":"passed","body":"function () {\n      tokenWidget = tokenInput.clickTokenWidgetThatContains('Name');\n      tokenWidget.expectTokenOptionsToHaveLabels([].concat(COLLECTION_TOKEN_OPTION_LABELS, ['Delete Field']));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":819,"startedAt":"2021-01-12T13:44:34.825Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should delete the token when clicking \"Delete Field\""],"state":"passed","body":"function () {\n      tokenWidget.clickTokenOptionThatContains('Delete Field');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Slug'\n      }, {\n        type: 'token',\n        text: 'Number field'\n      }]);\n      tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;number-field&quot;,&quot;type&quot;:&quot;Number&quot;\\\\} }}'].join(''));\n      pageSettings.getSeoTitlePreview().should('have.text', 'why-we-love-webflow-and-you-should-too46928');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":925,"startedAt":"2021-01-12T13:44:35.645Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should delete the first token when pressing home+delete in the token input"],"state":"passed","body":"function () {\n      tokenInput.fill('{home}{del}');\n      pageSettings.getSeoTitlePreview().should('have.text', '46928');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Number field'\n      }]);\n      tokenInput.expectValueToBe('{{wf {&quot;path&quot;:&quot;number-field&quot;,&quot;type&quot;:&quot;Number&quot;\\\\} }}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":835,"startedAt":"2021-01-12T13:44:36.571Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should add the token to where the cursor is at"],"state":"passed","body":"function () {\n      tokenInput.moveCursorToPosition(0).fill('Hello ').moveCursorToPosition('Hel'.length);\n      addFieldDropdown = tokenInput.clickAddField();\n      addFieldDropdown.clickTokenOptionThatContains('Name');\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Hel'\n      }, {\n        type: 'token',\n        text: 'Name'\n      }, {\n        type: 'text',\n        text: 'lo '\n      }, {\n        type: 'token',\n        text: 'Number field'\n      }]);\n      tokenInput.expectValueToBe(['Hel', '{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', 'lo ', '{{wf {&quot;path&quot;:&quot;number-field&quot;,&quot;type&quot;:&quot;Number&quot;\\\\} }}'].join(''));\n      pageSettings.getSeoTitlePreview().should('have.text', 'HelWhy We Love Webflow (And You Should, Too!)lo 46928');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1473,"startedAt":"2021-01-12T13:44:37.408Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should support replacing a selection with a token"],"state":"passed","body":"function () {\n      tokenInput.selectRange('He'.length, 'HelXlo'.length);\n      addFieldDropdown = tokenInput.clickAddField();\n      addFieldDropdown.clickTokenOptionThatContains('Slug');\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'He'\n      }, {\n        type: 'token',\n        text: 'Slug'\n      }, {\n        type: 'text',\n        text: ' '\n      }, {\n        type: 'token',\n        text: 'Number field'\n      }]);\n      tokenInput.expectValueToBe(['He', '{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;number-field&quot;,&quot;type&quot;:&quot;Number&quot;\\\\} }}'].join(''));\n      pageSettings.getSeoTitlePreview().should('have.text', 'Hewhy-we-love-webflow-and-you-should-too 46928');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":932,"startedAt":"2021-01-12T13:44:38.882Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should render empty with empty field of a Reference"],"state":"passed","body":"function () {\n      tokenInput.clear().fill('Should be empty: \"{{reference-field-cms-items:name}}\"', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Should be empty: \"'\n      }, {\n        type: 'token',\n        text: 'Reference field: CMS items: Name'\n      }, {\n        type: 'text',\n        text: '\"'\n      }]);\n      tokenInput.expectValueToBe(['Should be empty: \"', '{{wf {&quot;path&quot;:&quot;reference-field-cms-items:name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '\"'].join(''));\n      pageSettings.getSeoTitlePreview().should('have.text', 'Should be empty: \"\"');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10661,"startedAt":"2021-01-12T13:44:39.816Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should render correctly with an Option field of a Reference"],"state":"passed","body":"function () {\n      tokenInput.clear().fill('{{reference-field-products:option-field}}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Reference field: Products: Option field'\n      }]);\n      tokenInput.expectValueToBe('{{wf {&quot;path&quot;:&quot;reference-field-products:option-field&quot;,&quot;type&quot;:&quot;Option&quot;\\\\} }}');\n      pageSettings.getSeoTitlePreview().should('have.text', 'Option 1');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":11322,"startedAt":"2021-01-12T13:44:50.485Z","screenshots":[]}]},{"title":["CMS Embed token options","Collection Template page settings","should render correctly with a File field of a Reference"],"state":"passed","body":"function () {\n      tokenInput.clear().fill('{{reference-field-products:file-field}}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Reference field: Products: File field'\n      }]);\n      tokenInput.expectValueToBe('{{wf {&quot;path&quot;:&quot;reference-field-products:file-field&quot;,&quot;type&quot;:&quot;FileRef&quot;\\\\} }}');\n      pageSettings.getSeoTitlePreview().should('contain.text', 'https://');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":6873,"startedAt":"2021-01-12T13:45:01.811Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should add the variable when typing in the short-hand token"],"state":"passed","body":"function () {\n      tokenInput.fill('{{name}}', {\n        parseSpecialCharSequences: false\n      });\n      pageSettings.getSeoTitlePreview().should('have.text', 'Refined Granite Fish');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Name'\n      }]);\n      tokenInput.expectValueToBe('{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":15760,"startedAt":"2021-01-12T13:45:08.690Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should add the variable when typing in the token"],"state":"passed","body":"function () {\n      tokenInput.fill('{{wf {\"path\":\"slug\",\"type\":\"PlainText\"\\\\} }}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.fill('{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', {\n        parseSpecialCharSequences: false\n      });\n      pageSettings.getSeoTitlePreview().should('have.text', 'Refined Granite Fishrefined-granite-fishrefined-granite-fish');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Name'\n      }, {\n        type: 'token',\n        text: 'Slug'\n      }, {\n        type: 'token',\n        text: 'Slug'\n      }]);\n      tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}'].join(''));\n      tokenInput.fill('{backspace}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":21493,"startedAt":"2021-01-12T13:45:24.472Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should show correct token variables for SEO title in the Add Field dropdown"],"state":"passed","body":"function () {\n      addFieldDropdown = tokenInput.clickAddField(); // This menu uses virtual scrolling so we only expect to see the first\n      // 18 options. The token option menu that opens when clicking the token\n      // itself still shows all the variable options, so we test there that\n      // all the correct options are always available.\n\n      addFieldDropdown.expectTokenOptionsToHaveLabels(PRODUCT_TOKEN_OPTION_LABELS.slice(0, 18));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":922,"startedAt":"2021-01-12T13:45:45.971Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should add the variable to input when clicking the dropdown option"],"state":"passed","body":"function () {\n      addFieldDropdown.clickTokenOptionThatContains('Price');\n      pageSettings.getSeoTitlePreview().contains('Refined Granite Fishrefined-granite-fish$ 82.23 USD').should('exist');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Name'\n      }, {\n        type: 'token',\n        text: 'Slug'\n      }, {\n        type: 'token',\n        text: 'Price'\n      }]);\n      tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;default-sku:price&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}'].join(''));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":396,"startedAt":"2021-01-12T13:45:46.894Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should show correct token variables and \"Delete Field\" when click a token"],"state":"passed","body":"function () {\n      tokenWidget = tokenInput.clickTokenWidgetThatContains('Name');\n      tokenWidget.expectTokenOptionsToHaveLabels([].concat(PRODUCT_TOKEN_OPTION_LABELS, ['Delete Field']));\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":783,"startedAt":"2021-01-12T13:45:47.291Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should delete the token when clicking \"Delete Field\""],"state":"passed","body":"function () {\n      tokenWidget.clickTokenOptionThatContains('Delete Field');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Slug'\n      }, {\n        type: 'token',\n        text: 'Price'\n      }]);\n      tokenInput.expectValueToBe(['{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', '{{wf {&quot;path&quot;:&quot;default-sku:price&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}'].join(''));\n      pageSettings.getSeoTitlePreview().contains('refined-granite-fish$ 82.23 USD').should('exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":600,"startedAt":"2021-01-12T13:45:48.076Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should delete the first token when pressing home+delete in the token input"],"state":"passed","body":"function () {\n      tokenInput.fill('{home}{del}');\n      pageSettings.getSeoTitlePreview().contains('$ 82.23 USD').should('exist');\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Price'\n      }]);\n      tokenInput.expectValueToBe('{{wf {&quot;path&quot;:&quot;default-sku:price&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":291,"startedAt":"2021-01-12T13:45:48.677Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should add the token to where the cursor is at"],"state":"passed","body":"function () {\n      tokenInput.moveCursorToPosition(0).fill('Hello ').moveCursorToPosition('Hel'.length);\n      addFieldDropdown = tokenInput.clickAddField();\n      addFieldDropdown.clickTokenOptionThatContains('Name');\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'Hel'\n      }, {\n        type: 'token',\n        text: 'Name'\n      }, {\n        type: 'text',\n        text: 'lo '\n      }, {\n        type: 'token',\n        text: 'Price'\n      }]);\n      tokenInput.expectValueToBe(['Hel', '{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', 'lo ', '{{wf {&quot;path&quot;:&quot;default-sku:price&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}'].join(''));\n      pageSettings.getSeoTitlePreview().contains('HelRefined Granite Fishlo $ 82.23 USD').should('exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2144,"startedAt":"2021-01-12T13:45:48.970Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should support replacing a selection with a token"],"state":"passed","body":"function () {\n      tokenInput.selectRange('He'.length, 'HelXlo'.length);\n      addFieldDropdown = tokenInput.clickAddField();\n      addFieldDropdown.clickTokenOptionThatContains('Slug');\n      tokenInput.expectToHaveNodes([{\n        type: 'text',\n        text: 'He'\n      }, {\n        type: 'token',\n        text: 'Slug'\n      }, {\n        type: 'text',\n        text: ' '\n      }, {\n        type: 'token',\n        text: 'Price'\n      }]);\n      tokenInput.expectValueToBe(['He', '{{wf {&quot;path&quot;:&quot;slug&quot;,&quot;type&quot;:&quot;PlainText&quot;\\\\} }}', ' ', '{{wf {&quot;path&quot;:&quot;default-sku:price&quot;,&quot;type&quot;:&quot;CommercePrice&quot;\\\\} }}'].join(''));\n      pageSettings.getSeoTitlePreview().contains('Herefined-granite-fish $ 82.23 USD').should('exist');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1123,"startedAt":"2021-01-12T13:45:51.115Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should render correctly with an Option field of a Reference"],"state":"passed","body":"function () {\n      tokenInput.clear().fill('{{reference-field-cms-items:option-field}}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Reference field: CMS items: Option field'\n      }]);\n      tokenInput.expectValueToBe('{{wf {&quot;path&quot;:&quot;reference-field-cms-items:option-field&quot;,&quot;type&quot;:&quot;Option&quot;\\\\} }}');\n      pageSettings.getSeoTitlePreview().should('have.text', 'Option 2');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":9707,"startedAt":"2021-01-12T13:45:52.241Z","screenshots":[]}]},{"title":["CMS Embed token options","Product Template page settings","should render correctly with a File field of a Reference"],"state":"passed","body":"function () {\n      tokenInput.clear().fill('{{reference-field-cms-items:file-field}}', {\n        parseSpecialCharSequences: false\n      });\n      tokenInput.expectToHaveNodes([{\n        type: 'token',\n        text: 'Reference field: CMS items: File field'\n      }]);\n      tokenInput.expectValueToBe('{{wf {&quot;path&quot;:&quot;reference-field-cms-items:file-field&quot;,&quot;type&quot;:&quot;FileRef&quot;\\\\} }}');\n      pageSettings.getSeoTitlePreview().should('contain.text', 'https://');\n    }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":10169,"startedAt":"2021-01-12T13:46:01.956Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-embed-token-options.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-embed-token-options.spec.js","absolute":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-embed-token-options.spec.js","specType":"integration"},"shouldUploadVideo":false},{"stats":{"suites":1,"tests":7,"passes":7,"pending":0,"skipped":0,"failures":0,"duration":45081,"startedAt":"2021-01-12T13:46:19.403Z","endedAt":"2021-01-12T13:47:04.484Z"},"reporter":"../../../node_modules/cypress-multi-reporters","reporterStats":{"suites":1,"tests":7,"passes":7,"pending":0,"failures":0,"start":"2021-01-12T13:46:19.406Z","end":"2021-01-12T13:47:04.494Z","duration":45088},"hooks":[{"hookName":"before all","title":["\"before all\" hook: loadSnapshots"],"body":"function loadSnapshots () {\n    cy\n    .readFile(SNAPSHOT_FILENAME, 'utf-8', { log: false })\n    .then(evaluateLoadedSnapShots)\n    // no way to catch an error yet\n  }"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n  // Unit tests do not require registration\n  if (!Cypress.env('unit')) {\n    _cypressAppControls.api.registerDefaultUserIfNeeded();\n  }\n}"},{"hookName":"before all","title":["\"before all\" hook"],"body":"function () {\n    _cypressAppControls.api.upgradePlan();\n\n    workspace = _cypressAppControls.api.importSnapshot(_cypressAppControls.snapshots.CMS.cmsSmoke);\n    sidebar = workspace.getLeftSidebar(); //load the CSV\n\n    cy.fixture('cms/preview.csv').as('previewCSV');\n    cmsTab = sidebar.clickCMSButton();\n    collectionSettings = cmsTab.clickCreateNewCMSButton();\n  }"},{"hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    //Spy on the route that validate images\n    cy.server();\n    cy.route('POST', '**/api/sites/*/files/validateAssetUrls').as('validate-urls');\n  }"},{"hookName":"after all","title":["\"after all\" hook: saveSnapshots"],"body":"function saveSnapshots () {\n    if (storeSnapshot) {\n      const snapshots = storeSnapshot()\n      console.log('%d snapshot(s) on finish', countSnapshots(snapshots))\n      console.log(snapshots)\n\n      snapshots.__version = Cypress.version\n      const s = JSON.stringify(snapshots, null, 2)\n      const str = `module.exports = ${s}\\n`\n      cy.writeFile(SNAPSHOT_FILENAME, str, 'utf-8', { log: false })\n    }\n  }"}],"tests":[{"title":["Multi Image Field CSV Preview","can load a csv and show the CSV import settings pane"],"state":"passed","body":"function () {\n    var _this = this;\n\n    cy.step('Create a new collection, Rivers');\n    cy.get('[data-automation-id=\"CollectionSettingsForm-cms-collection-title-field-input\"]').type('Rivers');\n    cy.step('Add a MIF to the collection');\n    var fieldOptions = collectionSettings.clickAddFieldButton();\n    var form = fieldOptions.clickOption('SetImageRef');\n    form.fill({\n      label: 'Images'\n    }).clickSaveButton();\n    collectionSettings.clickCreateCollectionButton();\n    cy.step('Drag and drop the CSV');\n    cy.get('[data-automation-id=\"cms-collection-import-button\"]').click();\n    cy.window().then(function (win) {\n      var file = new win.File([_this.previewCSV], 'cms/preview.csv', {\n        type: 'us-ascii'\n      });\n      var dataTransfer = new win.DataTransfer();\n      dataTransfer.items.add(file);\n      cy.get('.bem-FileDropZone').trigger('dragcenter', {\n        dataTransfer: dataTransfer\n      }).trigger('drop', {\n        dataTransfer: dataTransfer\n      });\n    });\n    cy.step('Click continue');\n    cy.get('.bem-Button-primary').click();\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":16194,"startedAt":"2021-01-12T13:46:25.163Z","screenshots":[]}]},{"title":["Multi Image Field CSV Preview","shows the empty state when you have not mapped the MIF column yet"],"state":"passed","body":"function () {\n    cy.step('Make sure the preview is empty before mapping the column');\n    cy.get('.bem-MultiImageInput_Csv-empty').should('exist');\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":108,"startedAt":"2021-01-12T13:46:41.377Z","screenshots":[]}]},{"title":["Multi Image Field CSV Preview","Allows you to map the column to the MIF even though some images are not in the correct format"],"state":"passed","body":"function () {\n    cy.getByDataAutomationId('CollectionFieldForm-action-trigger').eq(2).click();\n    cy.getByDataAutomationId('CollectionFieldForm-action-option-map').contains('Map to existing field').click();\n    cy.getByDataAutomationId('csv-column-Images').within(function () {\n      cy.getByDataAutomationId('CollectionFieldForm-linkedField.slug-trigger').click();\n      cy.step('Make sure you can map this column.');\n      cy.getByDataAutomationId('CollectionFieldForm-linkedField.slug-option-images').should('not.have.attr', 'disabled');\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":492,"startedAt":"2021-01-12T13:46:41.487Z","screenshots":[]}]},{"title":["Multi Image Field CSV Preview","When all images in a row are valid, shows correct UI"],"state":"passed","body":"function () {\n    cy.getByDataAutomationId('CollectionFieldForm-linkedField.slug-option-images').click();\n    cy.step('check the number of images in the grid');\n    cy.getByDataAutomationId('multi-image-preview-content').children().should('have.length', 4);\n    cy.step('no warning or list of invalid links beneath grid');\n    cy.getByDataAutomationId('mif-csv-preview-errors').should('not.exist');\n    cy.step('API request to validate preview images');\n    cy.wait('@validate-urls').then(function (xhr) {\n      expect(xhr.status).to.equal(200);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":2030,"startedAt":"2021-01-12T13:46:41.980Z","screenshots":[]}]},{"title":["Multi Image Field CSV Preview","When there are more than 25 valid images, shows warning and list of skipped images"],"state":"passed","body":"function () {\n    cy.step('change to the next row');\n    cy.getByDataAutomationId('csv-import-next-item').click();\n    cy.step('check the number of images in the grid');\n    cy.getByDataAutomationId('multi-image-preview-content').children().should('have.length', 25);\n    cy.step('show the errors');\n    cy.getByDataAutomationId('mif-csv-preview-errors').should('exist');\n    cy.step('Show accurate yellow text warning');\n    cy.getByDataAutomationId('mif-csv-preview-warning').should('have.text', 'Link(s) to 2 image(s) have been skipped due to the 25 image limit.');\n    cy.step('Show the skipped URLs');\n    cy.getByDataAutomationId('csv-preview-Skipped-urls').children().should('have.length', 2);\n    cy.step('API request to validate preview images');\n    cy.wait('@validate-urls').then(function (xhr) {\n      expect(xhr.status).to.equal(200);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":3825,"startedAt":"2021-01-12T13:46:44.014Z","screenshots":[]}]},{"title":["Multi Image Field CSV Preview","When all images are invalid, shows empty state, warning, and list of invalid images"],"state":"passed","body":"function () {\n    cy.step('change to the next row');\n    cy.getByDataAutomationId('csv-import-next-item').click();\n    cy.step('show empty state');\n    cy.get('.bem-MultiImageInput_Csv-empty').should('exist');\n    cy.step('show the errors');\n    cy.getByDataAutomationId('mif-csv-preview-errors').should('exist');\n    cy.step('Show accurate yellow text warning');\n    cy.getByDataAutomationId('mif-csv-preview-warning').should('have.text', 'Link(s) to 4 image(s) are broken and will not be imported.');\n    cy.step('Show the invalid URLs');\n    cy.getByDataAutomationId('csv-preview-Invalid-urls').children().should('have.length', 4);\n    cy.step('API request to validate preview images');\n    cy.wait('@validate-urls').then(function (xhr) {\n      expect(xhr.status).to.equal(200);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":1402,"startedAt":"2021-01-12T13:46:47.847Z","screenshots":[]}]},{"title":["Multi Image Field CSV Preview","When there are more than 25 images, some invalid, some that will be skipped, shows warning and list of invalid and skipped images"],"state":"passed","body":"function () {\n    cy.step('change to the next row');\n    cy.getByDataAutomationId('csv-import-next-item').click();\n    cy.step('check the number of images in the grid');\n    cy.getByDataAutomationId('multi-image-preview-content').children().should('have.length', 25);\n    cy.step('show the errors');\n    cy.getByDataAutomationId('mif-csv-preview-errors').should('exist');\n    cy.step('Show accurate yellow text warning');\n    cy.getByDataAutomationId('mif-csv-preview-warning', {\n      timeout: 10000\n      /**\n       * To allow the images to load up on potentially slower network speeds, this timeout is here.\n       * GH PR link: https://github.com/webflow/webflow/pull/37177\n       * Clickup task link: https://app.clickup.com/t/apfnhb\n       * */\n\n    }).should('have.text', 'Link(s) to 4 image(s) are broken and will not be imported, and 5 image(s) have been skipped due to the 25 image limit.');\n    cy.step('Show the invalid URLs');\n    cy.getByDataAutomationId('csv-preview-Invalid-urls').children().should('have.length', 4);\n    cy.step('Show the skipped URLs');\n    cy.getByDataAutomationId('csv-preview-Skipped-urls').children().should('have.length', 5);\n    cy.step('API request to validate preview images');\n    cy.wait('@validate-urls').then(function (xhr) {\n      expect(xhr.status).to.equal(200);\n    });\n  }","displayError":null,"attempts":[{"state":"passed","error":null,"videoTimestamp":null,"duration":15223,"startedAt":"2021-01-12T13:46:49.257Z","screenshots":[]}]}],"error":null,"video":null,"spec":{"name":"entrypoints/designer/client/ui-tests/cms/cms-mif-csv-preview.spec.js","relative":"../../../entrypoints/designer/client/ui-tests/cms/cms-mif-csv-preview.spec.js","absolute":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/entrypoints/designer/client/ui-tests/cms/cms-mif-csv-preview.spec.js","specType":"integration"},"shouldUploadVideo":false}],"browserPath":"/chromium64/chrome-linux/chrome","browserName":"chromium","browserVersion":"74.0.3729.0","osName":"linux","osVersion":"Debian - 9.13","cypressVersion":"6.2.1","config":{"env":{"baseUrl":"http://wfdev.io:3030","stagingSuperDomain":"dev.webflowtest.io","User-Agent":"cypress","RECORD_KEY":"f9ae3...c4cf9"},"integrationFolder":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow","configFile":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/cypress.json","version":"6.2.1","chromeWebSecurity":false,"browser":"chromium","video":false,"videoUploadOnPasses":false,"viewportWidth":1440,"viewportHeight":900,"defaultCommandTimeout":30000,"numTestsKeptInMemory":0,"ignoreTestFiles":"*.quarantined.spec.js","testFiles":"**/*.spec.js","fileServerFolder":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config","fixturesFolder":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/fixtures","pluginsFile":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/plugins/index.js","screenshotsFolder":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/screenshots","supportFile":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/support/index.js","videosFolder":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/videos","retries":{"runMode":2,"openMode":0},"projectId":"xfhtj7","reporter":"../../../node_modules/cypress-multi-reporters","reporterOptions":{"configFile":"reporter-config.json"},"projectRoot":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config","projectName":"cypress-config","morgan":false,"isTextTerminal":true,"socketId":"7vpxh","report":true,"browsers":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"animationDistanceThreshold":5,"autoOpen":false,"baseUrl":null,"blockHosts":null,"clientRoute":"/__/","componentFolder":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/cypress/component","execTimeout":60000,"experimentalComponentTesting":false,"experimentalFetchPolyfill":false,"experimentalRunEvents":false,"experimentalSourceRewriting":false,"firefoxGcInterval":{"runMode":1,"openMode":null},"hosts":null,"includeShadowDom":false,"javascripts":[],"modifyObstructiveCode":true,"namespace":"__cypress","nodeVersion":"default","pageLoadTimeout":60000,"port":36721,"reporterRoute":"/__cypress/reporter","requestTimeout":5000,"responseTimeout":30000,"screenshotOnRunFailure":true,"socketIoRoute":"/__socket.io","socketIoCookie":"__socket.io","taskTimeout":60000,"trashAssetsBeforeRuns":true,"userAgent":null,"videoCompression":32,"waitForAnimations":true,"scrollBehavior":"top","watchForFileChanges":false,"xhrRoute":"/xhrs/","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"baseUrl":{"value":null,"from":"default"},"blockHosts":{"value":null,"from":"default"},"browsers":{"value":[{"name":"chromium","family":"chromium","channel":"stable","displayName":"Chromium","version":"74.0.3729.0","path":"chromium","majorVersion":74},{"name":"firefox","family":"firefox","channel":"stable","displayName":"Firefox","version":"78.3.0esr","path":"firefox","majorVersion":78,"warning":"Your project has set the configuration option: `chromeWebSecurity: false`\n\nThis option will not have an effect in Firefox. Tests that rely on web security being disabled will not run as expected."},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"87.0.4280.88","path":"","majorVersion":87,"info":"Electron is the default browser that comes with Cypress. This is the default browser that runs in headless mode. Selecting this browser is useful when debugging. The version number indicates the underlying Chromium version that Electron uses."}],"from":"default"},"chromeWebSecurity":{"value":false,"from":"config"},"componentFolder":{"value":"cypress/component","from":"default"},"defaultCommandTimeout":{"value":30000,"from":"config"},"env":{"baseUrl":{"value":"http://wfdev.io:3030","from":"plugin"},"User-Agent":{"value":"cypress","from":"config"},"RECORD_KEY":{"value":"f9ae3...c4cf9","from":"env"},"stagingSuperDomain":{"value":"dev.webflowtest.io","from":"plugin"}},"execTimeout":{"value":60000,"from":"default"},"experimentalComponentTesting":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalRunEvents":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"fileServerFolder":{"value":"./","from":"config"},"firefoxGcInterval":{"value":{"runMode":1,"openMode":null},"from":"default"},"fixturesFolder":{"value":"./fixtures","from":"config"},"hosts":{"value":null,"from":"default"},"ignoreTestFiles":{"value":"*.quarantined.spec.js","from":"config"},"includeShadowDom":{"value":false,"from":"default"},"integrationFolder":{"value":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow","from":"plugin"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"value":"default","from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"pageLoadTimeout":{"value":60000,"from":"default"},"pluginsFile":{"value":"./plugins/index.js","from":"config"},"port":{"value":null,"from":"default"},"projectId":{"value":"xfhtj7","from":"config"},"reporter":{"value":"../../../node_modules/cypress-multi-reporters","from":"cli"},"reporterOptions":{"value":{"configFile":"reporter-config.json"},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":2,"openMode":0},"from":"config"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"./screenshots","from":"config"},"supportFile":{"value":"./support/index.js","from":"config"},"taskTimeout":{"value":60000,"from":"default"},"testFiles":{"value":"**/*.spec.js","from":"config"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"config"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"./videos","from":"config"},"videoUploadOnPasses":{"value":false,"from":"config"},"viewportHeight":{"value":900,"from":"config"},"viewportWidth":{"value":1440,"from":"config"},"waitForAnimations":{"value":true,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"configFile":{"value":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/cypress.json","from":"plugin"},"version":{"value":"6.2.1","from":"plugin"}},"parentTestsFolder":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/cypress","parentTestsFolderDisplay":"cypress-config/cypress","supportFolder":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/support","integrationExampleName":"examples","integrationExamplePath":"/scratch/buildkite-agent-c327f695-54da-11eb-97fa-4a22e55b2d68-hnf4z/webflow/webflow/packages/tooling/cypress-config/cypress/integration/examples","scaffoldedFiles":[{"name":"cypress","children":[{"name":"integration","children":[{"name":"examples","children":[{"name":"actions.spec.js"},{"name":"aliasing.spec.js"},{"name":"assertions.spec.js"},{"name":"connectors.spec.js"},{"name":"cookies.spec.js"},{"name":"cypress_api.spec.js"},{"name":"files.spec.js"},{"name":"local_storage.spec.js"},{"name":"location.spec.js"},{"name":"misc.spec.js"},{"name":"navigation.spec.js"},{"name":"network_requests.spec.js"},{"name":"querying.spec.js"},{"name":"spies_stubs_clocks.spec.js"},{"name":"traversal.spec.js"},{"name":"utilities.spec.js"},{"name":"viewport.spec.js"},{"name":"waiting.spec.js"},{"name":"window.spec.js"}]}]}]},{"name":"fixtures","children":[{"name":"example.json"}]},{"name":"support","children":[{"name":"commands.js"},{"name":"index.js"}]},{"name":"plugins","children":[{"name":"index.js"}]}],"resolvedNodeVersion":"12.18.3","state":{},"proxyUrl":"http://localhost:36721","browserUrl":"http://localhost:36721/__/","reporterUrl":"http://localhost:36721/__cypress/reporter","xhrUrl":"__cypress/xhrs/"},"status":"finished"}]